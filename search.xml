<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>他来了，他带着自己的博客来啦</title>
    <url>/blog/posts/ef0eea94/</url>
    <content><![CDATA[<center>在这里我介绍一下我的博客</center>
<a id="more"></a>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>我也不知道说什么，经过我同桌的提醒，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/263a.png?v8">☺</span>经历了三天零两个夜晚，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62a.png?v8">😪</span>我的第一个自创博客出世啦！<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8">💥</span><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a5.png?v8">💥</span>首先感谢一下博客模板的原作者<strong>（一个坏掉的番茄）</strong>，没错这是他的名字。我全部用了他的样式。不懂的给他发了消息也不回。自己琢磨了几天，<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f474.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f474.png?v8">👴</span>。​发型距离这样也快了。</p>
<h2 id="内容"><a href="#内容" class="headerlink" title="内容"></a>内容</h2><p>内容都是健康绿色内容，请各位家长以及小朋友放心观看。在这个博客上我打算分享一些学习记录还有自己在无聊的时候玩的一些软件、网址等。当然，那种软件和网址是没有的，是哪种自己去领会吧。PS：有也不发  <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8">❗</span> <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8">❗</span></p>
<p>有些软件是真的有趣啊，不过好多玩了之后就一直存电脑，导致电脑因为内存爆满电脑已经重装系统无数次了。</p>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/ef0eea94/erweima.png" alt="扫码进入网站" title="">
                </div>
                <div class="image-caption">扫码进入网站</div>
            </figure>

<p>在之前呢我是把学习记录全部发布到CSDN博客上 <a href="https://blog.csdn.net/baozi141990" target="_blank" rel="noopener">CSDN地址</a> 的,有心的可以去点个关注啊。我会非常感谢的。（还为CSDN打广告= = 、）</p>
<p>手机用户，你可以保存前面的二维码，每次想起我呢就扫个码就能进入到博客了。电脑用户呢保存下这个网址:</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">http://vijar-wang.github.io</span><br></pre></td></tr></tbody></table></figure>

<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>整个博客也就那么点东西<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f602.png?v8">😂</span></p>
<p>左边是菜单栏，在这里点击想要去的地方，留言的小可爱请把昵称和邮箱留下，否则到时候我联系不上你还要你自己来看回复啊。</p>
<p>归档按时间记录博客文章。</p>
<p>分类就是博客文章的分类啊。</p>
<p>标签是每个博客文章的标签。我一般每个文章都写了标签的。</p>
<p>中间就是显示的主体部分了，这里显示了主要内容，点击即可查看。</p>
<p>右上角放大镜就是搜索，搜索内容是本博客中的所有博客的标签。高级点我也做不出来了<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62d.png?v8">😭</span></p>
<p>那个wifi形状一样的东西点一下可以查看网页源码</p>
<p>左下角的妹子，别去乱点啊，要负责的啊，她会叫的。你要不喜欢这个妹子呢那就换一个，还可以还衣服（我也不知道我到底有多无聊去搞个这个）</p>
<p>基本就是这样了。有什么不懂的或者有什么对我吐槽的，可以发邮件给我。</p>
<h2 id="已知bug"><a href="#已知bug" class="headerlink" title="已知bug"></a>已知bug</h2><h4 id="邮件发送"><a href="#邮件发送" class="headerlink" title="邮件发送"></a>邮件发送</h4><p>点击邮件发送会出错，这个bug是由于路径导致的，我目前没时间去搞了，要想发的话可以去博客的首页，点击那个信封就可以调出邮件发送了，默认会发到我的QQ邮箱。等着大家来发送了啊。</p>
<h4 id="文章目录"><a href="#文章目录" class="headerlink" title="文章目录"></a>文章目录</h4><p>文章目录我也不知道是发生了什么，在有多个多级目录的时候，出了第一个，其他的都会掉出那个框去。等着以后再修复吧。</p>
<h4 id="加载速度"><a href="#加载速度" class="headerlink" title="加载速度"></a>加载速度</h4><p>穷啊！穷啊！没钱所以用的GitHub的免费域名。不过知道你的网速在城里，那肯定是能加载进去的</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
  </entry>
  <entry>
    <title>MySQL语句学习</title>
    <url>/blog/posts/6df95fa5/</url>
    <content><![CDATA[<center>MySQL数据库</center>

<a id="more"></a>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>学习</tag>
        <tag>MySQL</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue.js--基于webpack项目的使用</title>
    <url>/blog/posts/6c87d575/</url>
    <content><![CDATA[<center>Vue CLI 教程</center>
<a id="more"></a>

<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>如果你不想看这里，那么可以直接跳到后面去。</p>
<p>在官网开了<a href="https://vuejs.bootcss.com/v2/guide/installation.html" target="_blank" rel="noopener">Vue.js</a>和<a href="https://cli.vuejs.org/zh/guide/installation.html" target="_blank" rel="noopener">Vue CLI</a>的官方文档，也只介绍了在普通html项目怎么使用，现在我自己整理了下，各个模块在基于webpack的Vue项目中的使用。相关介绍也可以去官网查看，本文仅介绍使用方法，因为也是新手小白，有错误的地方还请多多指正。本问有些地方引用了菜鸟教程的在线编辑器，在这里感谢菜鸟教程做出的贡献。</p>
<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote>
<p><strong>Node 版本要求</strong></p>
<p>Vue CLI 需要 <a href="https://nodejs.org/" target="_blank" rel="noopener">Node.js</a> 8.9 或更高版本 (推荐 8.11.0+)。你可以使用 <a href="https://github.com/creationix/nvm" target="_blank" rel="noopener">nvm</a> 或 <a href="https://github.com/coreybutler/nvm-windows" target="_blank" rel="noopener">nvm-windows</a>在同一台电脑中管理多个 Node 版本。</p>
</blockquote>
<blockquote>
<p><strong>关于旧版本</strong></p>
<p>Vue CLI 的包名称由 <code>vue-cli</code> 改成了 <code>@vue/cli</code>。 如果你已经全局安装了旧版本的 <code>vue-cli</code>(1.x 或 2.x)，你需要先通过 <code>npm uninstall vue-cli -g</code> 或 <code>yarn global remove vue-cli</code> 卸载它。</p>
</blockquote>
<p>安装好Node.js后就可以开始Vue的起步了。</p>
<p>因为要连接国外的资源，所以会下载的手会很慢。请保持网速。</p>
<p><strong>淘宝镜像</strong></p>
<p>解决这个情况可以使用淘宝的镜像以及命令<code>cnpm</code>，但是有时候会出问题，安装时保证npm版本大于3.0</p>
<p>查看npm版本：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ npm -v</span><br></pre></td></tr></tbody></table></figure>

<p>升级npm：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install npm -g</span><br></pre></td></tr></tbody></table></figure>

<p>安装cnpm：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></tbody></table></figure>

<p>安装完成后就可以用cnpm代替npm了。一下教程使用的还是npm。</p>
<p><strong>开始</strong></p>
<p>首先使用命令安装<code>vue</code>:</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install vue</span><br></pre></td></tr></tbody></table></figure>

<p>查看是否安装成功，本命令为查看版本：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ vue --version</span><br></pre></td></tr></tbody></table></figure>

<p>安装全局Vue CLI</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ npm install --global vue-cli</span><br></pre></td></tr></tbody></table></figure>

<p>创建一个vue项目，vueweb为项目名称，你也可以在安装的时候更改，注意项目名称里面不要有大写字母，也不要使用中文。</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ vue init webpack vueweb</span><br></pre></td></tr></tbody></table></figure>

<p>注意，这里会有一些配置，我来解释一下(#后面为我的注释，不要输入进去)：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">? Project name (vueweb)                     # 项目名称，括号中为默认名称，回车即可</span><br><span class="line">? Project description (A Vue.js project)    # 项目描述信息，回车即可</span><br><span class="line">? Author 1419908068 &lt;1419908068@qq.com&gt;     # 项目作者，默认即可</span><br><span class="line">? Vue build standalone                      # 好像是打包的时候用的，回车即可</span><br><span class="line">? Install vue-router?（Y/N）Y                # 是否安装vue-router,建议：Y</span><br><span class="line">? Use ESLint to lint your code? （Y/N）      # 是否使用ESLint验证，建议：N,否则后面因为格式会出很多问题。</span><br><span class="line">? Set up unit tests（Y/N） Yes               # 是否安装单元测试，没什么用,建议：N</span><br><span class="line">? Setup e2e tests with Nightwatch(Y/n)?     #是否安装E2E测试框架NightWatch,建议：N</span><br><span class="line"># 项目创建后是否要为你运行“npm install”?这里选择包管理工具</span><br><span class="line"># 选项有三个（上下箭头选择，回车即为选定）建议 : yes use npm</span><br><span class="line">Should we run 'npm install' for you after the project has been created?</span><br><span class="line"></span><br><span class="line"># 使用npm</span><br><span class="line">yes,use npm</span><br><span class="line"></span><br><span class="line"># 使用yarn</span><br><span class="line">yes,use yarn</span><br><span class="line"></span><br><span class="line"># 自己操作</span><br><span class="line">no,I will handle that myself</span><br></pre></td></tr></tbody></table></figure>

<p>安装完成后就可以开发了，当然任何开发都少不了开发工具，这里推荐使用<a href="https://www.dcloud.io" target="_blank" rel="noopener">HBuilder</a>，占用体积小，功能强大。当然也可以使用微软的<a href="https://visualstudio.microsoft.com/zh-hans/vs/?rr=https%3A%2F%2Fcn.bing.com%2F" target="_blank" rel="noopener">Visual Studio</a>，但是这个占用内存太大了。本教程使用的是HBuilder X 2.4.4.</p>
<p><strong>测试是否安装成功</strong></p>
<p>打开HBuilder然后倒入项目vueweb，右键项目选择<code>外部命令/插件</code>,再点击<code>npm run dev</code></p>
<p>如果报一下错误：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&gt; vueweb@1.0.0 dev D:\文件\JavaWebx项目\vueTest\vueweb</span><br><span class="line"></span><br><span class="line">&gt; webpack-dev-server --inline --progress --config build/webpack.dev.conf.js</span><br><span class="line"></span><br><span class="line">'webpack-dev-server' 不是内部或外部命令，也不是可运行的程序</span><br><span class="line">或批处理文件。</span><br><span class="line">npm ERR! code ELIFECYCLE</span><br><span class="line">npm ERR! errno 1</span><br><span class="line">npm ERR! vueweb@1.0.0 dev: `webpack-dev-server --inline --progress --config build/webpack.dev.conf.js`</span><br><span class="line">npm ERR! Exit status 1</span><br><span class="line">npm ERR!</span><br><span class="line">npm ERR! Failed at the vueweb@1.0.0 dev script.</span><br><span class="line">npm ERR! This is probably not a problem with npm. There is likely additional logging output above.</span><br><span class="line"></span><br><span class="line">npm ERR! A complete log of this run can be found in:</span><br><span class="line">npm ERR!     C:\Users\Administrator\AppData\Roaming\npm-cache\_logs\2019-12-10T13_06_55_461Z-debug.log</span><br></pre></td></tr></tbody></table></figure>

<p>不要慌运行<code>npm install</code>，等待安装完毕之后，在点击<code>npm run dev</code></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210212341.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>在浏览器输入<code>http://localhost:8080</code></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210212545.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>显示该页面即可。</p>
<h1 id="目录结构"><a href="#目录结构" class="headerlink" title="目录结构"></a>目录结构</h1><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210212118.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<table>
<thead>
<tr>
<th align="left">目录/文件</th>
<th align="left">说明</th>
</tr>
</thead>
<tbody><tr>
<td align="left">build</td>
<td align="left">项目构建(webpack)相关代码</td>
</tr>
<tr>
<td align="left">config</td>
<td align="left">配置目录，包括端口号等。我们初学可以使用默认的。</td>
</tr>
<tr>
<td align="left">node_modules</td>
<td align="left">npm 加载的项目依赖模块</td>
</tr>
<tr>
<td align="left">src</td>
<td align="left">这里是我们要开发的目录，基本上要做的事情都在这个目录里。里面包含了几个目录及文件：assets: 放置一些图片，如logo等。components: 目录里面放了一个组件文件，可以不用。App.vue: 项目入口文件，我们也可以直接将组件写这里，而不使用 components 目录。main.js: 项目的核心文件。</td>
</tr>
<tr>
<td align="left">static</td>
<td align="left">静态资源目录，如图片、字体等。</td>
</tr>
<tr>
<td align="left">test</td>
<td align="left">初始测试目录，可删除</td>
</tr>
<tr>
<td align="left">.xxxx文件</td>
<td align="left">这些是一些配置文件，包括语法配置，git配置等。</td>
</tr>
<tr>
<td align="left">index.html</td>
<td align="left">首页入口文件，你可以添加一些 meta 信息或统计代码啥的。</td>
</tr>
<tr>
<td align="left">package.json</td>
<td align="left">项目配置文件。</td>
</tr>
<tr>
<td align="left">README.md</td>
<td align="left">项目的说明文档，markdown 格式</td>
</tr>
</tbody></table>
<p>现在我们来修改一些配置：</p>
<p>在src/router/index.js中的export default new Router({后面添加<code>mode：‘history’</code>,这样可以让路径上的<code>#</code>去掉。</p>
<p>找到src/components/HelloWorld.vue,我们在学习路由（router）之前就以HelloWorld.vue页面为模板进行开发</p>
<p>这个时候浏览器页面会显示为这样，不用管他：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210213759.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="起步"><a href="#起步" class="headerlink" title="起步"></a>起步</h1><p>使用之前有一些注意事项需要说明一下：</p>
<ol>
<li><p>所有页面文件后缀必须为.vue，后面会讲到怎么使用</p>
</li>
<li><p>Vue文件中基本要有的三个标签：template<code>、</code>script<code>、</code>style`</p>
</li>
</ol>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 注意所有HTML标签必须用一个大的标签包裹，否则会报错 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">   <span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'name'</span>,  <span class="comment">// name一般为文件名，后面使用路由时需要配置</span></span></span><br><span class="line"><span class="actionscript">		data() {       <span class="comment">// 数据绑定</span></span></span><br><span class="line">	}</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">   </span><br><span class="line"><span class="comment">&lt;!-- 添加“scoped”属性以将CSS限制到此组件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<ol start="3">
<li>编写时请严格按照语法编写</li>
</ol>
<h1 id="Vue模板语法"><a href="#Vue模板语法" class="headerlink" title="Vue模板语法"></a>Vue模板语法</h1><p>Vue.js 使用了基于 HTML 的模板语法，允许开发者声明式地将 DOM 绑定至底层 Vue 实例的数据。所有 Vue.js 的模板都是合法的 HTML ，所以能被遵循规范的浏览器和 HTML 解析器解析。</p>
<p><strong>插值</strong></p>
<ol>
<li>文本</li>
</ol>
<p>数据绑定最常见的方式就是用双大括号来显示，代码中<code></code>中的msg与下面data中的msg相互绑定。下面msg属性发生改变，那么插值处的内容也会更新。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h1</span>&gt;</span>{{ msg }}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>    </span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript"><span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">  name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">  data () {</span><br><span class="line"><span class="actionscript">    <span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">      msg: <span class="string">'Welcome to Your Vue.js App'</span></span></span><br><span class="line">    }</span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-hw" target="_blank" rel="noopener">尝试一下</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210214115.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<ol start="2">
<li>原始HTML</li>
</ol>
<p>双大括号仅仅显示的是普通文本，如果想输出正在的HTML，那么需要使用<code>v-html</code>指令：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>这是普通文本：{{ msg }}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>这是HTML：<span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="handlebars"><span class="xml">				msg: '<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span> = <span class="string">"color:red"</span>&gt;</span> Welcome<span class="tag">&lt;<span class="name">span</span>&gt;</span>'</span></span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-v-html" target="_blank" rel="noopener">尝试一下</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210215037.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<ol start="3">
<li>属性</li>
</ol>
<p>HTML属性的值应使用<code>v-bind</code>指令来改变。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"r1"</span>&gt;</span>修改背景颜色<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"use"</span> <span class="attr">id</span>=<span class="string">"r1"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"r2"</span>&gt;</span>隐藏<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">v-model</span>=<span class="string">"hidd"</span> <span class="attr">id</span>=<span class="string">"r2"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span> <span class="attr">v-bind:class</span>=<span class="string">"{'class1': use}"</span> <span class="attr">v-bind:hidden</span>=<span class="string">"hidd"</span>&gt;</span><span class="tag">&lt;<span class="name">span</span> <span class="attr">v-html</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="handlebars"><span class="xml">				msg: '<span class="tag">&lt;<span class="name">span</span> <span class="attr">style</span> = <span class="string">"color:red"</span>&gt;</span> Welcome<span class="tag">&lt;<span class="name">span</span>&gt;</span>',</span></span></span><br><span class="line"><span class="actionscript">				<span class="keyword">use</span> : <span class="literal">false</span>,</span></span><br><span class="line"><span class="actionscript">				hidd: <span class="literal">false</span></span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css">	<span class="selector-class">.class1</span>{</span></span><br><span class="line"><span class="css">		<span class="selector-tag">background-color</span>: <span class="selector-id">#B5D592</span>;</span></span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-v-bind" target="_blank" rel="noopener">尝试一下</a></p>
<p>以下实例判断 class1 的值，如果为user为 true 使用 class1 类的样式，否则不使用，hidd为true则使用hidden属性，否则不使用。</p>
<ol start="4">
<li><p>JavaScript表达式</p>
</li>
<li><p>Vue中提供了完全的JavaScript表达式的支持。</p>
</li>
</ol>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">		{{ number + 1 }}<span class="tag">&lt;<span class="name">br</span>/&gt;</span> <span class="comment">&lt;!--number加1--&gt;</span></span><br><span class="line">		   </span><br><span class="line">		{{ ok ? 'YES' : 'NO' }}<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="comment">&lt;!--三元运算--&gt;</span></span><br><span class="line">		   </span><br><span class="line">		{{ message.split('').reverse().join('') }}<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="comment">&lt;!--反向输出--&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>, </span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				message: <span class="string">'vijar-wang.github.io'</span>,</span></span><br><span class="line"><span class="actionscript">				ok: <span class="literal">false</span>,</span></span><br><span class="line">				number : 2</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-js-expr" target="_blank" rel="noopener">尝试一下</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210222950.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<ol start="6">
<li>过滤器</li>
</ol>
<p>Vue.js 允许你自定义过滤器，被用作一些常见的文本格式化。由”|”指示,使用过滤器完成和上面一样的想过：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">		{{ ok | filter1 }}<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="comment">&lt;!--三元运算--&gt;</span></span><br><span class="line">		   </span><br><span class="line">		{{ message }}<span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="comment">&lt;!--反向输出--&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>, </span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				message: <span class="string">'vijar-wang.github.io'</span>,</span></span><br><span class="line"><span class="actionscript">				ok: <span class="literal">false</span></span></span><br><span class="line">			}</span><br><span class="line">		},filters:{</span><br><span class="line"><span class="actionscript">			filter1:<span class="function"><span class="keyword">function</span><span class="params">(value)</span></span>{</span></span><br><span class="line"><span class="actionscript">				<span class="comment">// value为 | 前面的值</span></span></span><br><span class="line">				if(value){</span><br><span class="line"><span class="actionscript">					value = <span class="string">'ok的值为true'</span></span></span><br><span class="line"><span class="actionscript">				}<span class="keyword">else</span>{</span></span><br><span class="line"><span class="actionscript">					value = <span class="string">'ok的值为false'</span></span></span><br><span class="line">				}</span><br><span class="line"><span class="actionscript">				<span class="keyword">return</span> value</span></span><br><span class="line">			},</span><br><span class="line"><span class="actionscript">			filter2:<span class="function"><span class="keyword">function</span><span class="params">(value)</span></span>{</span></span><br><span class="line"><span class="actionscript">				value = value.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>)</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">return</span> value;</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-filters-capitalize" target="_blank" rel="noopener">尝试一下</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191211085029.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="Vue条件语句"><a href="#Vue条件语句" class="headerlink" title="Vue条件语句"></a>Vue条件语句</h1><p>Vue提供<code>v-if</code>指令来判断元素是否渲染，同时还有<code>v-else</code>表示else,<code>v-else-if</code>表示if else,但是注意else必须紧跟在v-if下面，否则不会渲染。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">"ok"</span>&gt;</span>Yes<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else-if</span>=<span class="string">"!ok"</span>&gt;</span>No<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-else</span>&gt;</span>{{ok}}<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>, </span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				ok: <span class="literal">true</span></span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-v-else-if" target="_blank" rel="noopener">尝试一下</a></p>
<p>还有v-show来判断是否渲染</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-show</span>=<span class="string">"ok"</span>&gt;</span>Hello!<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h1 id="Vue循环语句"><a href="#Vue循环语句" class="headerlink" title="Vue循环语句"></a>Vue循环语句</h1><p>Vue的循环使用<code>v-for</code>指令，<code>v-for</code>指令需要以<code>site in sites</code>的形式的语法，sites是数组，site是迭代元素的别名。使用命令时加载需要遍历的标签上即可。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">li</span> <span class="attr">v-for</span>=<span class="string">"(week,index) in weeks"</span>&gt;</span>{{index}}:{{week}}<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				weeks: [<span class="string">'Monday'</span>, <span class="string">"Tuesday"</span>, <span class="string">"Wednesday"</span>, <span class="string">'Thursdat'</span>, <span class="string">'Friday'</span>, <span class="string">'Staurday'</span>, <span class="string">'Sunday'</span>]</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line">	ul li {</span><br><span class="line">		list-style: none;</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-v-for" target="_blank" rel="noopener">尝试一下</a></p>
<p>渲染结果：</p>
<ul data-v-469af010=""><li data-v-469af010="">0:Monday</li><li data-v-469af010="">1:Tuesday</li><li data-v-469af010="">2:Wednesday</li><li data-v-469af010="">3:Thursdat</li><li data-v-469af010="">4:Friday</li><li data-v-469af010="">5:Staurday</li><li data-v-469af010="">6:Sunday</li></ul><style scoped="">ul li {list-style: none;}</style>
# Vue计算属性

<p>关键词<code>computed</code>,在处理一些复杂逻辑时是很有用的，</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>原始字符串: {{ message }}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>计算后反转字符串: {{ reversedMessage }}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				message: <span class="string">'vijar-wang.github.io'</span></span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		computed: {</span><br><span class="line"><span class="actionscript">			reversedMessage: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>{</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">return</span> <span class="keyword">this</span>.message.split(<span class="string">''</span>).reverse().join(<span class="string">''</span>)</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-str-reverse2" target="_blank" rel="noopener">尝试一下</a></p>
<p>渲染结果</p>
<div data-v-469af010=""><p data-v-469af010="">原始字符串: vijar-wang.github.io</p> <p data-v-469af010="">计算后反转字符串: oi.buhtig.gnaw-rajiv</p></div><style>div{border: 1 solid}</style>
# Vue监听属性

<p>可以通过 watch 来响应数据的变化</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		千米 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"kilometers"</span>&gt;</span></span><br><span class="line">		米 : <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">v-model</span>=<span class="string">"meters"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line">				kilometers: 0,</span><br><span class="line">				meters: 0</span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		watch: {</span><br><span class="line"><span class="actionscript">			kilometers: <span class="function"><span class="keyword">function</span><span class="params">(val)</span> </span>{</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.kilometers = val;</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.meters = <span class="keyword">this</span>.kilometers * <span class="number">1000</span></span></span><br><span class="line">			},</span><br><span class="line"><span class="actionscript">			meters: <span class="function"><span class="keyword">function</span><span class="params">(val)</span> </span>{</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.kilometers = val / <span class="number">1000</span>;</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.meters = val;</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://www.runoob.com/try/try.php?filename=vue2-watch" target="_blank" rel="noopener">尝试一下</a></p>
<h1 id="Vue事件处理"><a href="#Vue事件处理" class="headerlink" title="Vue事件处理"></a>Vue事件处理</h1><p>可以用 <code>v-on</code> 指令监听 DOM 事件，并在触发时运行一些 JavaScript 代码。</p>
<p><strong>点击事件</strong></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"kilometers++"</span>&gt;</span>点击第{{kilometers}}次<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line">				kilometers: 0</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<div><button onclick="add()">点击第<span id="num">0</span>次</button></div><script>function add(){var num = document.getElementById("num").innerHTML;num = parseInt(num)+1;document.getElementById("num").innerHTML = num;}</script>
[尝试一下](https://www.runoob.com/try/try.php?filename=vue2-v-on3)

<p>除了点击事件，还有其他事件修饰</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;!-- 阻止单击事件继续传播 --&gt;</span><br><span class="line">&lt;a v-on:click.stop="doThis"&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 提交事件不再重载页面 --&gt;</span><br><span class="line">&lt;form v-on:submit.prevent="onSubmit"&gt;&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 修饰符可以串联 --&gt;</span><br><span class="line">&lt;a v-on:click.stop.prevent="doThat"&gt;&lt;/a&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 只有修饰符 --&gt;</span><br><span class="line">&lt;form v-on:submit.prevent&gt;&lt;/form&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 添加事件监听器时使用事件捕获模式 --&gt;</span><br><span class="line">&lt;!-- 即元素自身触发的事件先在此处理，然后才交由内部元素进行处理 --&gt;</span><br><span class="line">&lt;div v-on:click.capture="doThis"&gt;...&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 只当在 event.target 是当前元素自身时触发处理函数 --&gt;</span><br><span class="line">&lt;!-- 即事件不是从内部元素触发的 --&gt;</span><br><span class="line">&lt;div v-on:click.self="doThat"&gt;...&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- 点击事件将只会触发一次 --&gt;</span><br><span class="line">&lt;a v-on:click.once="doThis"&gt;&lt;/a&gt;</span><br></pre></td></tr></tbody></table></figure>

<p><strong>按键处理</strong></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 只有在 `keyCode` 是 13 时调用 `vm.submit()` --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.13</span>=<span class="string">"submit"</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>各按键的值如下：</p>
<table>
<thead>
<tr>
<th>keyCode</th>
<th>实际键值</th>
</tr>
</thead>
<tbody><tr>
<td>48到57</td>
<td>0到9</td>
</tr>
<tr>
<td>65到90</td>
<td>a到z（A到Z）</td>
</tr>
<tr>
<td>112到135</td>
<td>F1到F24</td>
</tr>
<tr>
<td>8</td>
<td>BackSpace（退格）</td>
</tr>
<tr>
<td>9</td>
<td>Tab</td>
</tr>
<tr>
<td>13</td>
<td>Enter（回车）</td>
</tr>
<tr>
<td>20</td>
<td>Caps_Lock（大写锁定）</td>
</tr>
<tr>
<td>32</td>
<td>Space（空格键）</td>
</tr>
<tr>
<td>37</td>
<td>Left（左箭头）</td>
</tr>
<tr>
<td>38</td>
<td>Up（上箭头）</td>
</tr>
<tr>
<td>39</td>
<td>Right（右箭头）</td>
</tr>
<tr>
<td>40</td>
<td>Down（下箭头）</td>
</tr>
</tbody></table>
<p>但是记住每个keyCode时很不容易的，Vue 为最常用的按键提供了别名,使用方法：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- &lt;button v-on:click="kilometers++"&gt;点击第{{kilometers}}次&lt;/button&gt; --&gt;</span></span><br><span class="line">		测试enter:<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.enter</span>=<span class="string">"enterKey()"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		测试spaceKey:<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.space</span>=<span class="string">"spaceKey()"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		测试escKey:<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.esc</span>=<span class="string">"escKey()"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">		测试delete:<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-on:keyup.delete</span>=<span class="string">"deleteKey()"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line">				kilometers: 0,</span><br><span class="line">				meters: 0</span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		methods:{</span><br><span class="line"><span class="actionscript">			enterKey(){ alert(<span class="string">"你按下了enter键"</span>)},</span></span><br><span class="line"><span class="actionscript">			spaceKey(){ alert(<span class="string">"你按下了space键"</span>)},</span></span><br><span class="line"><span class="actionscript">			escKey(){ alert(<span class="string">"你按下了esc键"</span>)},</span></span><br><span class="line"><span class="actionscript">			deleteKey(){ alert(<span class="string">"你按下了delete键"</span>)}</span></span><br><span class="line">		}</span><br><span class="line">	}	</span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>全部的按键别名：</p>
<ul>
<li><code>.enter</code></li>
<li><code>.tab</code></li>
<li><code>.delete</code> (捕获“删除”和“退格”键)</li>
<li><code>.esc</code></li>
<li><code>.space</code></li>
<li><code>.up</code></li>
<li><code>.down</code></li>
<li><code>.left</code></li>
<li><code>.right</code></li>
</ul>
<p>可以通过全局 <code>config.keyCodes</code> 对象<a href="https://vuejs.bootcss.com/v2/api/#keyCodes" target="_blank" rel="noopener">自定义按键修饰符别名</a>：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">// 可以使用 `v-on:keyup.f1`Vue.config.keyCodes.f1 = 112</span><br></pre></td></tr></tbody></table></figure>

<p>向上面的按键监听可以改为动态的监听</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line">				kilometers: 0,</span><br><span class="line">				meters: 0</span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		created() {</span><br><span class="line"><span class="javascript">			<span class="built_in">document</span>.onkeydown = <span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>{</span></span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> key = <span class="built_in">window</span>.event.keyCode;</span></span><br><span class="line">				if(key == 13){</span><br><span class="line"><span class="actionscript">					alert(<span class="string">"按下了enter"</span>);</span></span><br><span class="line"><span class="actionscript">				}<span class="keyword">else</span> <span class="keyword">if</span>(key == <span class="number">32</span>){</span></span><br><span class="line"><span class="actionscript">					alert(<span class="string">"按下了Space"</span>);</span></span><br><span class="line">				}</span><br><span class="line">				</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>这样在点击<code>enter</code>和<code>space</code>的时候就会弹出提示框。</p>
<p><strong>鼠标监听</strong></p>
<ul>
<li><code>.left</code></li>
<li><code>.right</code></li>
<li><code>.middle</code></li>
</ul>
<p>这些修饰符会限制处理函数仅响应特定的鼠标按钮。</p>
<h1 id="Vue表单绑定"><a href="#Vue表单绑定" class="headerlink" title="Vue表单绑定"></a>Vue表单绑定</h1><p>你可以用 <code>v-model</code> 指令在表单 <code>、</code> 及 `` 元素上创建双向数据绑定。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"name"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				name: <span class="string">"小明"</span></span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>当data中name的值发生改变，表单中的值也会发生改变。</p>
<p><a href="https://www.runoob.com/try/try.php?filename=vue2-form1" target="_blank" rel="noopener">尝试一下</a></p>
<div><input value="小明"></div>
不仅仅是输入框，复选框，单选框、select也可以双向绑定。

<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h5</span>&gt;</span>单选测试<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"redio"</span> <span class="attr">value</span>=<span class="string">"false"</span> <span class="attr">id</span>=<span class="string">"false"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"tadiotest"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"false"</span>&gt;</span>博主是帅哥<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"redio"</span> <span class="attr">value</span>=<span class="string">"true"</span> <span class="attr">id</span>=<span class="string">"true"</span> <span class="attr">type</span>=<span class="string">"radio"</span> <span class="attr">name</span>=<span class="string">"tadiotest"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"true"</span>&gt;</span>博主是帅哥<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>你选择了:{{redio}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h5</span>&gt;</span>复选框测试<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"xigua"</span> <span class="attr">value</span>=<span class="string">"西瓜"</span> <span class="attr">v-model</span>=<span class="string">"check"</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"yes"</span>&gt;</span>西瓜<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"juzi"</span> <span class="attr">value</span>=<span class="string">"橘子"</span> <span class="attr">v-model</span>=<span class="string">"check"</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"juzi"</span>&gt;</span>橘子<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"taozi"</span> <span class="attr">value</span>=<span class="string">"桃子"</span> <span class="attr">v-model</span>=<span class="string">"check"</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"taozi"</span>&gt;</span>桃子<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">p</span>&gt;</span>你选择了:{{check}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h5</span>&gt;</span>下拉框测试<span class="tag">&lt;/<span class="name">h5</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		 <span class="tag">&lt;<span class="name">select</span> <span class="attr">v-model</span>=<span class="string">"selected"</span> <span class="attr">name</span>=<span class="string">"fruit"</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span>选择一个<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"软件技术"</span>&gt;</span>软件技术<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">		    <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span>=<span class="string">"网络技术"</span>&gt;</span>网络技术<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line">		  <span class="tag">&lt;<span class="name">p</span>&gt;</span>你选择了:{{selected}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				redio:<span class="string">"false"</span>,</span></span><br><span class="line">				check:[],</span><br><span class="line"><span class="actionscript">				selected:<span class="string">""</span></span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191211113141.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p><strong>修饰符</strong></p>
<p><a href="https://vuejs.bootcss.com/v2/guide/forms.html#lazy" target="_blank" rel="noopener"><strong><code>.lazy</code></strong></a></p>
<p>在默认情况下，<code>v-model</code> 在每次 <code>input</code> 事件触发后将输入框的值与数据进行同步 (除了<a href="https://vuejs.bootcss.com/v2/guide/forms.html#vmodel-ime-tip" target="_blank" rel="noopener">上述</a>输入法组合文字时)。你可以添加 <code>lazy</code> 修饰符，从而转变为使用 <code>change</code>事件进行同步：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;!-- 在“change”时而非“input”时更新 --&gt;&lt;input v-model.lazy="msg" &gt;</span><br></pre></td></tr></tbody></table></figure>

<p><a href="https://vuejs.bootcss.com/v2/guide/forms.html#number" target="_blank" rel="noopener"><strong><code>.number</code></strong></a></p>
<p>如果想自动将用户的输入值转为数值类型，可以给 <code>v-model</code> 添加 <code>number</code> 修饰符：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;input v-model.number="age" type="number"&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>这通常很有用，因为即使在 <code>type="number"</code> 时，HTML 输入元素的值也总会返回字符串。如果这个值无法被 <code>parseFloat()</code> 解析，则会返回原始的值。</p>
<p><a href="https://vuejs.bootcss.com/v2/guide/forms.html#trim" target="_blank" rel="noopener"><strong><code>.trim</code></strong></a></p>
<p>如果要自动过滤用户输入的首尾空白字符，可以给 <code>v-model</code> 添加 <code>trim</code> 修饰符：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;input v-model.trim="msg"&gt;</span><br></pre></td></tr></tbody></table></figure>

<h1 id="Vue组件"><a href="#Vue组件" class="headerlink" title="Vue组件"></a>Vue组件</h1><p>组件是可复用的 Vue 实例，且带有一个名字：在这个例子中是 ``。我们可以在一个通过 <code>new Vue</code> 创建的 Vue 根实例中，把这个组件作为自定义元素来使用。</p>
<p><strong>定义全局组件</strong></p>
<p>在<code>main.js</code>文件中加入以下代码，然后再想要使用的页面直接调用标签就好，com1为全局组件。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">var com = {</span><br><span class="line">		template: '&lt;h1&gt;这是一个全局自定义的组件&lt;/h1&gt;'</span><br><span class="line">	}</span><br><span class="line">Vue.component("com1",com)</span><br></pre></td></tr></tbody></table></figure>

<p><strong>定义局部组件</strong></p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">com</span>&gt;</span><span class="tag">&lt;/<span class="name">com</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="keyword">var</span> com = {</span></span><br><span class="line"><span class="handlebars"><span class="xml">		template: '<span class="tag">&lt;<span class="name">h1</span>&gt;</span>这是一个自定义的组件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span></span><br><span class="line">	}</span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line">				</span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		components:{</span><br><span class="line"><span class="actionscript">			<span class="string">'com'</span>:com</span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>本例中的com就是局部组件，只能在这一个页面中使用。</p>
<p>如果自定义的组件是一个页面，那么使用<code>import</code>导入，例如你创建一个<code>tmp.vue</code>的文件作为模板，你可以这样使用它：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Tmp <span class="keyword">from</span> <span class="string">'@/commponents/tmp'</span>  <span class="comment">//@符号代表src目录</span></span><br><span class="line">Vue.component(<span class="string">"Tmp"</span>,Tmp)</span><br></pre></td></tr></tbody></table></figure>

<p>如果是要在全局引入，可以把上面代码写到<code>main.js</code>文件中去。</p>
<blockquote>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">HTML 中的特性名是大小写不敏感的，所以浏览器会把所有大写字符解释为小写字符。这意味着当你使用 DOM 中的模板时，camelCase (驼峰命名法) 的 prop 名需要使用其等价的 kebab-case (短横线分隔命名) 命名</span><br></pre></td></tr></tbody></table></figure>
</blockquote>
<h2 id="Prop"><a href="#Prop" class="headerlink" title="Prop"></a>Prop</h2><p>prop 是父组件用来传递数据的一个自定义属性。</p>
<p>父组件的数据需要通过 props 把数据传给子组件，子组件需要显式地用 props 选项声明 “prop”</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">com</span> <span class="attr">message</span>=<span class="string">"message属性"</span>&gt;</span><span class="tag">&lt;/<span class="name">com</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="keyword">var</span> com = {</span></span><br><span class="line"><span class="actionscript">		props:[<span class="string">"message"</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">		template: '<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">{{message}}</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span></span><br><span class="line">	}</span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		components:{</span><br><span class="line"><span class="actionscript">			<span class="string">'com'</span>:com</span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>前面静态绑定Prop，动态绑定可以通过<code>v-bind</code>指令来绑定：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-model</span>=<span class="string">"msg"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">com</span> <span class="attr">v-bind:message</span>=<span class="string">"msg"</span>&gt;</span><span class="tag">&lt;/<span class="name">com</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="keyword">var</span> com = {</span></span><br><span class="line"><span class="actionscript">		props: [<span class="string">"message"</span>],</span></span><br><span class="line"><span class="handlebars"><span class="xml">		template: '<span class="tag">&lt;<span class="name">h1</span>&gt;</span></span><span class="template-variable">{{message}}</span><span class="xml"><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>'</span></span></span><br><span class="line">	}</span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				msg: <span class="string">"动态绑定内容"</span></span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		components: {</span><br><span class="line"><span class="actionscript">			<span class="string">'com'</span>: com</span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>这里只要改变表单中的内容，自定义组件中的内容也会改变</p>
<h1 id="Vue自定义事件、指令"><a href="#Vue自定义事件、指令" class="headerlink" title="Vue自定义事件、指令"></a>Vue自定义事件、指令</h1><p>前面讲了父组件向子组件传值，那么从子组件向父组件传值就需要用到自定义事件了</p>
<h2 id="自定义事件"><a href="#自定义事件" class="headerlink" title="自定义事件"></a><strong>自定义事件</strong></h2><p>只配合一个事件名使用 <code>$emit</code>：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">my-button</span> <span class="attr">v-on:welcome</span>=<span class="string">"coInfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">my-button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="keyword">var</span> butt = {</span></span><br><span class="line"><span class="handlebars"><span class="xml">		template: '<span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"$emit(\'welcome\')"</span>&gt;</span>点击我<span class="tag">&lt;/<span class="name">button</span>&gt;</span>'</span></span></span><br><span class="line">	}</span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		methods:{</span><br><span class="line">			coInfo(){</span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(<span class="string">"123"</span>);</span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		components: {</span><br><span class="line"><span class="actionscript">			<span class="string">'my-button'</span>: butt</span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>上面实例是一个简单的自定义事件，使用了Vue的<a href="https://cn.vuejs.org/v2/api/#vm-emit" target="_blank" rel="noopener"><strong>$emit</strong> </a>API</p>
<p>创建一个普通的按钮自定义组件，给他一个自定义事件<code>welcome</code>然后在使用该组件的时候通过点击点击<code>coInfo</code>方法。</p>
<p>配合额外的参数使用 <code>$emit</code>：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">my-button</span> <span class="attr">v-on:welcome</span>=<span class="string">"coInfo"</span>&gt;</span><span class="tag">&lt;/<span class="name">my-button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="actionscript">	<span class="keyword">var</span> butt = {</span></span><br><span class="line"><span class="handlebars"><span class="xml">		template: '<span class="tag">&lt;<span class="name">button</span> <span class="attr">v-on:click</span>=<span class="string">"addValue"</span>&gt;</span>点击我<span class="tag">&lt;/<span class="name">button</span>&gt;</span>',</span></span></span><br><span class="line">		data(){</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span>{</span></span><br><span class="line">				num : 0</span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		methods:{</span><br><span class="line">			addValue(){</span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.num = <span class="keyword">this</span>.num +<span class="number">1</span>;</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.$emit(<span class="string">"welcome"</span>,<span class="keyword">this</span>.num);</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		methods:{</span><br><span class="line">			coInfo(num){</span><br><span class="line"><span class="javascript">				<span class="built_in">console</span>.log(num);</span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		components: {</span><br><span class="line"><span class="actionscript">			<span class="string">'my-button'</span>: butt</span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>在这里发现和上面不同的是$emit中多了个参数。现在解释一下全部代码。<code>butt</code>还是一个自定义组件，但是这个组件中包含了<code>data</code>参数（注意data格式）<code>num</code>,以及方法<code>addValue</code>。当点击自定义组件按钮时，num就会+1输出到控制台上。</p>
<h2 id="自定义指令"><a href="#自定义指令" class="headerlink" title="自定义指令"></a><strong>自定义指令</strong></h2><p>除了默认的指令（v-model和v-bind）,Vue也允许用户自定义指令。</p>
<p>举个聚焦输入框的例子：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">input</span> <span class="attr">v-focus</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		methods:{</span><br><span class="line">			</span><br><span class="line"><span class="actionscript">		},directives:{  <span class="comment">//自定义指令组件</span></span></span><br><span class="line"><span class="actionscript">			focus:{  <span class="comment">//指令名称</span></span></span><br><span class="line"><span class="actionscript">				inserted:<span class="function"><span class="keyword">function</span><span class="params">(el)</span></span>{  <span class="comment">//inserted为钩子函数</span></span></span><br><span class="line">					el.focus()</span><br><span class="line"><span class="actionscript">					el.placeholder = <span class="string">"获取到焦点"</span></span></span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<div><input name="inp" placeholder="获取到焦点"></div><script>inp.focus()</script>
## 钩子

<p><strong>钩子函数</strong></p>
<p>一个指令定义对象可以提供如下几个钩子函数 (均为可选)：</p>
<ul>
<li><p><code>bind</code>：只调用一次，指令第一次绑定到元素时调用。在这里可以进行一次性的初始化设置。</p>
</li>
<li><p><code>inserted</code>：被绑定元素插入父节点时调用 (仅保证父节点存在，但不一定已被插入文档中)。</p>
</li>
<li><p><code>update</code>：所在组件的 VNode 更新时调用，<strong>但是可能发生在其子 VNode 更新之前</strong>。指令的值可能发生了改变，也可能没有。但是你可以通过比较更新前后的值来忽略不必要的模板更新 (详细的钩子函数参数见下)。</p>
</li>
<li><p><code>componentUpdated</code>：指令所在组件的 VNode <strong>及其子 VNode</strong> 全部更新后调用。</p>
</li>
<li><p><code>unbind</code>：只调用一次，指令与元素解绑时调用。</p>
</li>
</ul>
<p><strong>钩子函数参数</strong></p>
<p>指令钩子函数会被传入以下参数：</p>
<ul>
<li><p><code>el</code>：指令所绑定的元素，可以用来直接操作 DOM 。</p>
<p><code>binding</code>:一个对象，包含以下属性：</p>
<p><code>name</code>：指令名，不包括 <code>v-</code> 前缀。</p>
<p><code>value</code>：指令的绑定值，例如：<code>v-my-directive="1 + 1"</code> 中，绑定值为 <code>2</code>。</p>
<p><code>oldValue</code>：指令绑定的前一个值，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。无论值是否改变都可用。</p>
<p><code>expression</code>：字符串形式的指令表达式。例如 <code>v-my-directive="1 + 1"</code> 中，表达式为 <code>"1 + 1"</code>。</p>
<p><code>arg</code>：传给指令的参数，可选。例如 <code>v-my-directive:foo</code> 中，参数为 <code>"foo"</code>。</p>
<p><code>modifiers</code>：一个包含修饰符的对象。例如：<code>v-my-directive.foo.bar</code> 中，修饰符对象为 <code>{ foo: true, bar: true }</code>。</p>
</li>
<li><p><code>vnode</code>：Vue 编译生成的虚拟节点。移步 <a href="https://cn.vuejs.org/v2/api/#VNode-接口" target="_blank" rel="noopener">VNode API</a> 来了解更多详情。</p>
</li>
<li><p><code>oldVnode</code>：上一个虚拟节点，仅在 <code>update</code> 和 <code>componentUpdated</code> 钩子中可用。</p>
</li>
</ul>
<p>钩子函数即为<code>directives</code>组件的函数，函数参数及为<code>function()</code>括号中的参数。</p>
<h1 id="Vue路由"><a href="#Vue路由" class="headerlink" title="Vue路由"></a>Vue路由</h1><p><strong>官方路由</strong></p>
<p>对于路由官方文档讲的非常详细。这里简单示范一下路由的基本用发，如果需要用查看更多的内容请去文档，<a href="https://router.vuejs.org/" target="_blank" rel="noopener">vue-router 文档</a></p>
<p><strong><font size="5">Vue项目中使用</font></strong></p>
<p>Vue项目因为是用webpack模板，所以src目录下会自带一个router目录，其中<code>index.js</code>及为路由的配置文件</p>
<p>默认<code>index.js</code>内容为：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router({</span><br><span class="line">  routes: [</span><br><span class="line">    {</span><br><span class="line">      path: <span class="string">'/'</span>,</span><br><span class="line">      name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">      component: HelloWorld</span><br><span class="line">    }</span><br><span class="line">  ]</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>

<p>在<code>main.js</code>中有一行<code>import router from './router'</code>,即为导入路由配置文件。</p>
<p>这里以一个登录项目为例、</p>
<p>首先在src/cpmponents目录下模仿HelloWorld新建两个vue文件。</p>
<p>Login.vue</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">form</span> <span class="attr">name</span>=<span class="string">"form1"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"username"</span>&gt;</span>用户名<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">v-model</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"password"</span>&gt;</span>密码<span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span>=<span class="string">"password"</span> <span class="attr">v-model</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">"login()"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">"color: red;"</span> <span class="attr">id</span>=<span class="string">"msg"</span>&gt;</span>{{msg}}<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span>{</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">"login"</span>,</span></span><br><span class="line">		data(){</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span>{</span></span><br><span class="line"><span class="actionscript">				username:<span class="string">''</span>,  <span class="comment">//用户名</span></span></span><br><span class="line"><span class="actionscript">				password:<span class="string">''</span>,  <span class="comment">//密码</span></span></span><br><span class="line"><span class="actionscript">				msg:<span class="string">""</span>        <span class="comment">//提示信息</span></span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		methods:{</span><br><span class="line">			login(){</span><br><span class="line"><span class="actionscript">				<span class="comment">// 登录的用户名为 'xiaoming'，密码为 '123'</span></span></span><br><span class="line"><span class="actionscript">				<span class="keyword">if</span>(<span class="keyword">this</span>.username == <span class="string">"xiaoming"</span> &amp;&amp; <span class="keyword">this</span>.password == <span class="string">"123"</span>){</span></span><br><span class="line"><span class="actionscript">					<span class="comment">// 路由的编程式导航，还有其他的看下面</span></span></span><br><span class="line"><span class="actionscript">					<span class="keyword">this</span>.$router.push({</span></span><br><span class="line"><span class="actionscript">						path:<span class="string">"/index"</span>,   <span class="comment">//跳转路径</span></span></span><br><span class="line"><span class="actionscript">						query:{  <span class="comment">//使用query携带参数，会显示在url上面</span></span></span><br><span class="line"><span class="actionscript">							username:<span class="keyword">this</span>.username</span></span><br><span class="line">						}</span><br><span class="line">					})</span><br><span class="line"><span class="actionscript">				}<span class="keyword">else</span>{</span></span><br><span class="line"><span class="actionscript">					<span class="keyword">this</span>.msg = <span class="string">"用户名或密码错误！"</span></span></span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>Index.vue</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-if</span>=<span class="string">"username!=''"</span>&gt;</span>欢迎您！{{username}}<span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  </span><br><span class="line">		<span class="tag">&lt;<span class="name">h1</span> <span class="attr">v-else</span>&gt;</span>您未登录！<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span>{</span></span><br><span class="line"><span class="actionscript">		namme:<span class="string">"index"</span>,</span></span><br><span class="line">		data(){</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span>{</span></span><br><span class="line"><span class="actionscript">				username :<span class="string">""</span></span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line"><span class="actionscript">		created() {  <span class="comment">//当页面创建时加载</span></span></span><br><span class="line"><span class="actionscript">			<span class="keyword">this</span>.username = <span class="keyword">this</span>.$route.query.username;  <span class="comment">//接收路由参数</span></span></span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>配置路由<code>index.js</code>文件：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line"><span class="keyword">import</span> Login <span class="keyword">from</span> <span class="string">'@/components/Login'</span></span><br><span class="line"><span class="keyword">import</span> Index <span class="keyword">from</span> <span class="string">'@/components/Index'</span></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router({</span><br><span class="line">	routes: [{</span><br><span class="line">			path: <span class="string">'/'</span>,</span><br><span class="line">			name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">			component: HelloWorld,</span><br><span class="line">			meta:{</span><br><span class="line">				title:<span class="string">"HelloWorld"</span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		{</span><br><span class="line">			path: <span class="string">'/login'</span>,</span><br><span class="line">			name: <span class="string">'login'</span>,</span><br><span class="line">			component: Login,</span><br><span class="line">			meta:{</span><br><span class="line">				title:<span class="string">"登录"</span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		{</span><br><span class="line">			path: <span class="string">'/index'</span>,</span><br><span class="line">			name: <span class="string">'index'</span>,</span><br><span class="line">			component: Index,</span><br><span class="line">			meta:{</span><br><span class="line">				title:<span class="string">"首页"</span></span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	]</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>

<p>默认模式，在<code>main.js</code>中加入：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">router.beforeEach(<span class="function">(<span class="params">to, <span class="keyword">from</span>, next</span>) =&gt;</span> {</span><br><span class="line">    <span class="keyword">if</span>(to.meta.title){</span><br><span class="line">        <span class="built_in">document</span>.title = to.meta.title</span><br><span class="line">    	next()</span><br><span class="line">    }</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>

<p>history模式在<code>main.js</code>中加入：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(router.history.current.meta.title){</span><br><span class="line">	<span class="built_in">document</span>.title = router.history.current.meta.title;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>这样配置在默认路由下可以显示title。</p>
<p>初步分析，页面之间的调用关系如图：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://img-blog.csdnimg.cn/20191111153212619.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2Jhb3ppMTQxOTkw,size_16,color_FFFFFF,t_70" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p><strong><font size="4">详解</font></strong></p>
<p>路由的导航分为声明式导航和编程式导航</p>
<table>
<thead>
<tr>
<th align="center">声明式</th>
<th align="center">编程式</th>
</tr>
</thead>
<tbody><tr>
<td align="center"><code>&lt;router-link :to="..."&gt;</code></td>
<td align="center"><code>router.push(...)</code></td>
</tr>
</tbody></table>
<ol>
<li><p>声明式路由<code>&lt;router-link&gt;</code>标签会被渲染成一个a标签，传递参数形式为：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">&lt;router-link :to=<span class="string">"{path:'/login', query:{name:username}}"</span>&gt;</span><br></pre></td></tr></tbody></table></figure>
</li>
<li><p>编程式路由</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 字符串</span></span><br><span class="line">router.push(<span class="string">'home'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 对象</span></span><br><span class="line">router.push({ <span class="attr">path</span>: <span class="string">'home'</span> })</span><br><span class="line"></span><br><span class="line"><span class="comment">// 命名的路由</span></span><br><span class="line">router.push({ <span class="attr">name</span>: <span class="string">'user'</span>, <span class="attr">params</span>: { <span class="attr">userId</span>: <span class="string">'123'</span> }})</span><br><span class="line"></span><br><span class="line"><span class="comment">// 带查询参数，变成 /register?plan=private</span></span><br><span class="line">router.push({ <span class="attr">path</span>: <span class="string">'register'</span>, <span class="attr">query</span>: { <span class="attr">plan</span>: <span class="string">'private'</span> }})</span><br></pre></td></tr></tbody></table></figure>

<p>注意，<code>path</code>和<code>params</code>不能同时使用，否则params会失效。使用path会在URL上面显示传递的数据，要想不显示就是用<code>name</code></p>
</li>
<li><p>数据获取</p>
<p>在路由到的界面使用<code>watch</code>组件来监听路由是否有变化。</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">watch: {</span><br><span class="line">    <span class="comment">// 如果路由有变化，会再次执行fetchData方法</span></span><br><span class="line">    <span class="string">'$route'</span>: <span class="string">'fetchData'</span></span><br><span class="line">}，</span><br><span class="line">methods:{</span><br><span class="line">    fetchData(){</span><br><span class="line">        <span class="keyword">this</span>.$route.params.userId;  <span class="comment">//若是使用的query则吧params换成`query`</span></span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>心细的人会发现，前面跳转页面为<code>$router</code>，接收数据为<code>$route</code>,这里要注意是不一样的。</p>
</li>
</ol>
<p><strong><font size="4">相关属性</font></strong></p>
<p><strong>replace</strong></p>
<p>跟 <code>router.push</code> 很像，唯一的不同就是，它不会向 history 添加新记录，而是跟它的方法名一样 —— 替换掉当前的 history 记录。<br>|              声明式               |       编程式       |<br>| :——————————-: | :—————-: |<br>| <code>&lt;router-link :to="..." replace&gt;</code> | <code>router.push(...)</code> |</p>
<p><strong>append</strong></p>
<p>设置 append 属性后，则在当前 (相对) 路径前添加基路径。例如，我们从 /a 导航到一个相对路径 b，如果没有配置 append，则路径为 /b，如果配了，则为 /a/b</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">&lt;router-link :to="{ path: '/b'}" append&gt;&lt;/router-link&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>例：</p>
<p>当前路径：<code>localhost:8080/a</code></p>
<p>使用append路由到<code>/b</code>后路径：<code>localhost:8080/a/b</code></p>
<p>不使用：<code>localhost:8080/b</code></p>
<p><strong>tag</strong></p>
<p>有时候想要 <code>渲染成某种标签，例如</code>。 于是我们使用 <code>tag</code> prop 类指定何种标签，同样它还是会监听点击，触发导航。</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">router-link</span> <span class="attr">to</span>=<span class="string">"/foo"</span> <span class="attr">tag</span>=<span class="string">"li"</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">router-link</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 渲染结果 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">li</span>&gt;</span>foo<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h1 id="VueAjax"><a href="#VueAjax" class="headerlink" title="VueAjax"></a>VueAjax</h1><p>官网只介绍了如何引入axios，这里是设置全局引入</p>
<h2 id="npm下载axios"><a href="#npm下载axios" class="headerlink" title="npm下载axios:"></a>npm下载axios:</h2><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></tbody></table></figure>

<h2 id="全局引入axios"><a href="#全局引入axios" class="headerlink" title="全局引入axios"></a>全局引入axios</h2><p>在main.js中加入如下代码：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">Vue.prototype.$ajax= axios</span><br></pre></td></tr></tbody></table></figure>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>添加之后就能在vue文件methods中使用<code>$ajax</code>,例：</p>
<p>执行 <code>GET</code> 请求</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">  axios.get(<span class="string">'/user?ID=12345'</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(response); <span class="comment">//回调函数</span></span><br><span class="line">  })</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(error); <span class="comment">//请求失败</span></span><br><span class="line">  });</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可选地，上面的请求可以这样做</span></span><br><span class="line">axios.get(<span class="string">'/user'</span>, {</span><br><span class="line">    params: {</span><br><span class="line">      ID: <span class="number">12345</span></span><br><span class="line">    }</span><br><span class="line">  })</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  })</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  });</span><br></pre></td></tr></tbody></table></figure>

<p>执行<code>POST</code>请求</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">axios.post('/user', {</span><br><span class="line">    firstName: 'Fred',</span><br><span class="line">    lastName: 'Flintstone'</span><br><span class="line">  })</span><br><span class="line">  .then(function (response) {</span><br><span class="line">    console.log(response);</span><br><span class="line">  })</span><br><span class="line">  .catch(function (error) {</span><br><span class="line">    console.log(error);</span><br><span class="line">  });</span><br></pre></td></tr></tbody></table></figure>

<h2 id="axios-API"><a href="#axios-API" class="headerlink" title="axios API"></a>axios API</h2><p>可以通过向 axios 传递相关配置来创建请求</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 发送 POST 请求</span></span><br><span class="line">axios({</span><br><span class="line">  method: <span class="string">'post'</span>,</span><br><span class="line">  url: <span class="string">'/user/12345'</span>,</span><br><span class="line">  data: {</span><br><span class="line">    firstName: <span class="string">'Fred'</span>,</span><br><span class="line">    lastName: <span class="string">'Flintstone'</span></span><br><span class="line">  }</span><br><span class="line">});</span><br><span class="line"><span class="comment">//axios(url[, config])</span></span><br><span class="line"><span class="comment">// 发送 GET 请求（默认的方法）</span></span><br><span class="line">axios(<span class="string">'/user/12345'</span>);</span><br></pre></td></tr></tbody></table></figure>

<h2 id="axios跨域问题"><a href="#axios跨域问题" class="headerlink" title="axios跨域问题"></a>axios跨域问题</h2><p>在config/index.js文件中找到<code>proxyTable{}</code>,在括号中添加：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">'/api'</span>: {</span><br><span class="line">        target: <span class="string">'http://localhost:8080/'</span>,<span class="comment">//设置你调用的接口域名和端口号 别忘了加http</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,<span class="comment">//如果需要跨域</span></span><br><span class="line">        pathRewrite: {</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">'/'</span></span><br><span class="line">                <span class="comment">//这里理解成用面的地址，</span></span><br><span class="line">                <span class="comment">//后面组件中我们掉接口时直接用api代替 比如我要调</span></span><br><span class="line">                <span class="comment">//用'http://425.0.100.100:8888/user/add'，直接写‘/api/user/add’即可</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure>

<p>但是这样处理有个问题啊，只能在开发环境使用。真正线上时还是需要封装一下</p>
<h2 id="封装axios"><a href="#封装axios" class="headerlink" title="封装axios"></a>封装axios</h2><p>在一些大型项目中会封装axios，并且添加拦截器。在src下创建目录utils，在utils下创建js文件<code>fetch.js</code>。内容如下：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Date</span>.prototype.Format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>{</span><br><span class="line">  <span class="keyword">let</span> o = {</span><br><span class="line">    <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>,</span><br><span class="line">    <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(),</span><br><span class="line">    <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(),</span><br><span class="line">    <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(),</span><br><span class="line">    <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(),</span><br><span class="line">    <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>),</span><br><span class="line">    <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds()</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt))</span><br><span class="line">    fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length))</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt))</span><br><span class="line">      fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)))</span><br><span class="line">  <span class="keyword">return</span> fmt</span><br><span class="line">}</span><br><span class="line"><span class="comment">// respone拦截器</span></span><br><span class="line">axios.interceptors.response.use(<span class="function"><span class="params">response</span> =&gt;</span> {</span><br><span class="line">  <span class="keyword">return</span> response.data</span><br><span class="line">}, error =&gt; {</span><br><span class="line">  <span class="keyword">return</span> error.data</span><br><span class="line">})</span><br><span class="line">axios.defaults.withCredentials = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkStatus</span>(<span class="params">response</span>) </span>{</span><br><span class="line">  <span class="comment">// loading</span></span><br><span class="line">  <span class="comment">// 如果http状态码正常，则直接返回数据</span></span><br><span class="line">  <span class="keyword">if</span> (response &amp;&amp; (response.status === <span class="number">200</span> || response.status === <span class="number">304</span> || response.status === <span class="number">400</span>)) {</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line">    <span class="comment">// 如果不需要除了data之外的数据，可以直接 return response.data</span></span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// 异常状态下，把错误信息返回去</span></span><br><span class="line">  <span class="keyword">return</span> {</span><br><span class="line">    status: <span class="number">-404</span>,</span><br><span class="line">    msg: <span class="string">'网络异常'</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCode</span>(<span class="params">res</span>) </span>{</span><br><span class="line">  <span class="comment">// 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户</span></span><br><span class="line">  <span class="keyword">if</span> (res.status === <span class="number">-404</span>) {</span><br><span class="line">    <span class="built_in">console</span>.log(res.msg)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">if</span> (res.data &amp;&amp; (!res.data.success)) {</span><br><span class="line">    <span class="comment">// alert(res.data.error_msg)</span></span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// console.log('loadding')</span></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timestampToTime</span>(<span class="params">timestamp</span>) </span>{</span><br><span class="line">  <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp),</span><br><span class="line">    Y = date.getFullYear() + <span class="string">'-'</span>,</span><br><span class="line">    M = (date.getMonth() + <span class="number">1</span> &lt; <span class="number">10</span> ? <span class="string">'0'</span> + (date.getMonth() + <span class="number">1</span>) : date.getMonth() + <span class="number">1</span>) + <span class="string">'-'</span>,</span><br><span class="line">    D = date.getDate() + <span class="string">' '</span>,</span><br><span class="line">    h = date.getHours() + <span class="string">':'</span>,</span><br><span class="line">    m = date.getMinutes() + <span class="string">':'</span>,</span><br><span class="line">    s = date.getSeconds()</span><br><span class="line">  <span class="keyword">return</span> Y + M + D + h + m + s</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> {</span><br><span class="line">  post(url, data) {</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      url,</span><br><span class="line">      <span class="comment">//data: qs.stringify(data),</span></span><br><span class="line">      data,</span><br><span class="line">      timeout: <span class="number">15000</span>,</span><br><span class="line">      headers: {</span><br><span class="line">        <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">        <span class="comment">// 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'</span></span><br><span class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json;charset=UTF-8'</span></span><br><span class="line">      }</span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  upload(url, data) {</span><br><span class="line">    <span class="keyword">let</span> form = <span class="keyword">new</span> FormData()</span><br><span class="line">    <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="params">value</span> =&gt;</span> {</span><br><span class="line">      form.append(value, data[value])</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      <span class="comment">// baseURL: process.env.BASE_API,</span></span><br><span class="line">      url,</span><br><span class="line">      data,</span><br><span class="line">      transformRequest: [<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> ret = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> it <span class="keyword">in</span> data) {</span><br><span class="line">          ret += <span class="built_in">encodeURIComponent</span>(it) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(data[it]) + <span class="string">'&amp;'</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line">      }],</span><br><span class="line">      timeout: <span class="number">15000</span>,</span><br><span class="line">      headers: {</span><br><span class="line">        <span class="comment">// 'X-Requested-With': 'XMLHttpRequest',</span></span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">      }</span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span>(url, params) {</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'get'</span>,</span><br><span class="line">      <span class="comment">// baseURL: process.env.BASE_API,</span></span><br><span class="line">      url,</span><br><span class="line">      params, <span class="comment">// get 请求时带的参数</span></span><br><span class="line">      timeout: <span class="number">15000</span></span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line">  put(url, data) {</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'put'</span>,</span><br><span class="line">      baseURL: process.env.BASE_API,</span><br><span class="line">      url,</span><br><span class="line">      data,</span><br><span class="line">      timeout: <span class="number">15000</span></span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line">  time(tamp) {</span><br><span class="line">    <span class="keyword">return</span> timestampToTime(tamp)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>然后再main.js中加入以下代码：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">'./utils/fetch'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> extend = Vue.prototype</span><br><span class="line">extend.$post = fetch.post</span><br><span class="line">extend.$<span class="keyword">get</span> = fetch.<span class="keyword">get</span></span><br><span class="line">extend.$form = fetch.form</span><br></pre></td></tr></tbody></table></figure>

<p>然后再vue文件使用的时候就很方便了：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$post(<span class="string">'http://localhost:8080/Mybatis_war_exploded/upload.do'</span>,imageFile)</span><br><span class="line">				  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">				    <span class="built_in">console</span>.log(response);</span><br><span class="line">				  })</span><br><span class="line">				  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">				    <span class="built_in">console</span>.log(error);</span><br><span class="line">				  });</span><br></pre></td></tr></tbody></table></figure>

<h1 id="结束"><a href="#结束" class="headerlink" title="结束"></a>结束</h1><p>教程到这里就结束了，新手小白。写这个一边写一边自己做的，如果有错误的地方请留言多多指教。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>学习</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue中localstorage和sessionstorage的使用</title>
    <url>/blog/posts/10dd2acd/</url>
    <content><![CDATA[<center>Vue中使用LocalStorage和SessionStorage</center>

<a id="more"></a>

<h1 id="LocalStorage和SessionStorage"><a href="#LocalStorage和SessionStorage" class="headerlink" title="LocalStorage和SessionStorage"></a>LocalStorage和SessionStorage</h1><p>在使用之前，我们先废话的了解一下LocalStorage和SessionStorage</p>
<p>1.sessionStorage(临时存储)：为没一个数据维持一个存储区域，浏览器打开会创建，关闭浏览器就会消失。</p>
<p>2.localStorage(长期存储)：和前者一样，区别在于浏览器关闭后数据依然存在。</p>
<p>因为两者差不多，所以我已localStorage为例</p>
<h1 id="localStorage使用方法"><a href="#localStorage使用方法" class="headerlink" title="localStorage使用方法"></a>localStorage使用方法</h1><p><strong>保存</strong></p>
<p>保存到localStorage，如果保存的是个对象，那么需要把数据转换为JSON格式，字符则不需要</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/*保存*/</span></span><br><span class="line"><span class="comment">/*对象*/</span></span><br><span class="line"><span class="keyword">var</span> user = {</span><br><span class="line">	name : <span class="string">'admin'</span>,</span><br><span class="line">	password: <span class="string">'password'</span></span><br><span class="line">}</span><br><span class="line"><span class="comment">/*字符*/</span></span><br><span class="line"><span class="keyword">var</span> str = <span class="string">'hello'</span>;</span><br><span class="line"></span><br><span class="line">localStorage.setItem(<span class="string">"user"</span>,<span class="built_in">JSON</span>.stringify(user)); <span class="comment">//需要先转换为JSON</span></span><br><span class="line"></span><br><span class="line">localStorage.setItem(<span class="string">"hello"</span>,<span class="built_in">JSON</span>.stringify(str));</span><br></pre></td></tr></tbody></table></figure>

<p><strong>获取</strong></p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/*对象*/</span></span><br><span class="line"><span class="keyword">var</span> user = localStorage.getItem(<span class="string">"user"</span>); <span class="comment">//现在user是一个字符串</span></span><br><span class="line"><span class="comment">//如果需要读取user中对象则需要把user转换为一个对象</span></span><br><span class="line">user = <span class="built_in">JSON</span>.parse(user);</span><br><span class="line">name = user.name</span><br></pre></td></tr></tbody></table></figure>

<p><strong>删除</strong></p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">/*指定删除*/</span></span><br><span class="line">localStorage.remove(<span class="string">"user"</span>);</span><br><span class="line"><span class="comment">/*全部删除*/</span></span><br><span class="line">localStorage.clear();</span><br></pre></td></tr></tbody></table></figure>

<p><strong>浏览器查看</strong></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210200301.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="Vue中实现用例"><a href="#Vue中实现用例" class="headerlink" title="Vue中实现用例"></a>Vue中实现用例</h1><p>本例中以登录为例，使用了Element-UI。</p>
<p>首先创建一个登录页面：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"hello"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">el-form</span> <span class="attr">ref</span>=<span class="string">"form"</span> <span class="attr">:model</span>=<span class="string">"form"</span> <span class="attr">label-width</span>=<span class="string">"80px"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"姓名:"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"form.name"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">el-form-item</span> <span class="attr">label</span>=<span class="string">"密码:"</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">el-input</span> <span class="attr">v-model</span>=<span class="string">"form.pwd"</span>&gt;</span><span class="tag">&lt;/<span class="name">el-input</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">				<span class="tag">&lt;<span class="name">el-button</span> @<span class="attr">click</span>=<span class="string">"login()"</span>&gt;</span>登录<span class="tag">&lt;/<span class="name">el-button</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;/<span class="name">el-form-item</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">el-form</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line">				form: {</span><br><span class="line"><span class="actionscript">					name: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">					pwd: <span class="string">""</span></span></span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		methods: {</span><br><span class="line">			login() {</span><br><span class="line"><span class="actionscript">				<span class="keyword">if</span> ((<span class="keyword">this</span>.form.name == <span class="string">"admin"</span>) &amp;&amp; (<span class="keyword">this</span>.form.pwd == <span class="string">"123"</span>)) {</span></span><br><span class="line"><span class="javascript">					<span class="keyword">var</span> user = <span class="built_in">JSON</span>.stringify(<span class="keyword">this</span>.form);</span></span><br><span class="line"><span class="actionscript">					<span class="keyword">this</span>.$message({</span></span><br><span class="line"><span class="actionscript">						message: <span class="string">'恭喜你，登录成功！'</span>,</span></span><br><span class="line"><span class="actionscript">						type: <span class="string">'success'</span></span></span><br><span class="line">					});</span><br><span class="line"><span class="actionscript">					localStorage.setItem(<span class="string">"user"</span>, user);</span></span><br><span class="line"><span class="actionscript">					<span class="keyword">this</span>.$router.push({</span></span><br><span class="line"><span class="actionscript">						path: <span class="string">'/index'</span></span></span><br><span class="line">					})</span><br><span class="line"><span class="actionscript">				} <span class="keyword">else</span> {</span></span><br><span class="line"><span class="actionscript">					<span class="keyword">this</span>.$message(<span class="string">"用户名或密码错误！"</span>);</span></span><br><span class="line">				}</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- Add "scoped" attribute to limit CSS to this component only --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">scoped</span>&gt;</span></span><br><span class="line"><span class="css">	<span class="selector-class">.hello</span> {</span></span><br><span class="line">		width: 50%;</span><br><span class="line">		margin: 0 auto;</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>然后是登录成功之后的页面：</p>
<figure class="highlight html"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">template</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">el-row</span> <span class="attr">v-if</span>=<span class="string">"name!=''"</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"3"</span>&gt;</span>欢迎您：<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"4"</span>&gt;</span>{{name}}!<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">a</span> @<span class="attr">click</span>=<span class="string">"loginout()"</span>&gt;</span>注销<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">el-row</span> <span class="attr">v-else</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">el-col</span> <span class="attr">:span</span>=<span class="string">"3"</span>&gt;</span>您还未登录！<span class="tag">&lt;/<span class="name">el-col</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">el-row</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="javascript">	<span class="keyword">export</span> <span class="keyword">default</span> {</span></span><br><span class="line"><span class="actionscript">		name: <span class="string">'HelloWorld'</span>,</span></span><br><span class="line">		data() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">return</span> {</span></span><br><span class="line"><span class="actionscript">				msg: <span class="string">""</span>,</span></span><br><span class="line"><span class="actionscript">				name: <span class="string">""</span></span></span><br><span class="line">			}</span><br><span class="line">		},</span><br><span class="line">		created() {</span><br><span class="line"><span class="actionscript">			<span class="keyword">this</span>.checkLogin()</span></span><br><span class="line">		},</span><br><span class="line">		methods: {</span><br><span class="line">			checkLogin() {</span><br><span class="line"><span class="javascript">				<span class="keyword">var</span> user = <span class="built_in">JSON</span>.parse(localStorage.getItem(<span class="string">"user"</span>));</span></span><br><span class="line">				if (user) {</span><br><span class="line"><span class="actionscript">					<span class="keyword">this</span>.name = user.name</span></span><br><span class="line">				}</span><br><span class="line">			},</span><br><span class="line">			loginout() {</span><br><span class="line"><span class="actionscript">				localStorage.removeItem(<span class="string">"user"</span>)</span></span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.$message({</span></span><br><span class="line"><span class="actionscript">					message: <span class="string">'注销成功！'</span>,</span></span><br><span class="line"><span class="actionscript">					type: <span class="string">'success'</span></span></span><br><span class="line">				});</span><br><span class="line"><span class="actionscript">				<span class="keyword">this</span>.$router.push({</span></span><br><span class="line"><span class="actionscript">					path: <span class="string">"/"</span></span></span><br><span class="line">				})</span><br><span class="line">			}</span><br><span class="line">		}</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="css">	<span class="selector-class">.el-col</span> {</span></span><br><span class="line">		font-size: 20px;</span><br><span class="line">	}</span><br><span class="line"><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>配置路由：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span></span><br><span class="line"><span class="keyword">import</span> Router <span class="keyword">from</span> <span class="string">'vue-router'</span></span><br><span class="line"><span class="keyword">import</span> HelloWorld <span class="keyword">from</span> <span class="string">'@/components/HelloWorld'</span></span><br><span class="line"><span class="keyword">import</span> index <span class="keyword">from</span> <span class="string">'@/components/index'</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vue.use(Router)</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> <span class="keyword">new</span> Router({</span><br><span class="line">	mode: <span class="string">"history"</span>,</span><br><span class="line">	routes: [{</span><br><span class="line">			path: <span class="string">"/index"</span>,</span><br><span class="line">			name: <span class="string">"index"</span>,</span><br><span class="line">			component: index</span><br><span class="line">		},</span><br><span class="line">		{</span><br><span class="line">			path: <span class="string">'/'</span>,</span><br><span class="line">			name: <span class="string">'HelloWorld'</span>,</span><br><span class="line">			component: HelloWorld,</span><br><span class="line"></span><br><span class="line">		}</span><br><span class="line">	]</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>

<p>展示</p>
<p>登录页面</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210194330.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>登录成功后</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191210194539.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>学习</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue问题记录</title>
    <url>/blog/posts/60aedc63/</url>
    <content><![CDATA[<center>出问题？来看一下吧</center>

<a id="more"></a>

<p>前面用使用vue出现了很多问题，一直没有记录，现在就最近再次遇到的问题记录一下。</p>
<p>版本：Vue 2.X    工具：Hbuilder X</p>
<h1 id="打包后页面无法加载"><a href="#打包后页面无法加载" class="headerlink" title="打包后页面无法加载"></a>打包后页面无法加载</h1><p>我这里打包后是放到tomcat服务器下运行的，但是运行的时候因为有些配置有问题，导致所有页面都加载不了。主要还是加载路径的问题，解决方法：</p>
<p><code>build</code>目录的<code>utils.js</code>文件,一般在<strong>47</strong>行左右。添加<code>publicPath:'../../'</code></p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (options.extract) {</span><br><span class="line">  <span class="keyword">return</span> ExtractTextPlugin.extract({</span><br><span class="line">    use: loaders,</span><br><span class="line">    fallback: <span class="string">'vue-style-loader'</span>,</span><br><span class="line">publicPath:<span class="string">'../../'</span>,</span><br><span class="line">  })</span><br><span class="line">} <span class="keyword">else</span> {</span><br><span class="line">  <span class="keyword">return</span> [<span class="string">'vue-style-loader'</span>].concat(loaders)</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><code>config</code>目录的<code>index.js</code>文件,一般是在<strong>46</strong>行的<code>assetsPublicPath</code>,修改为：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">assetsPublicPath: <span class="string">'/pc/'</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>pc</strong>就是你放在Tomcat服务器下的工程名</p>
<h1 id="手动刷新页面css样式错误问题"><a href="#手动刷新页面css样式错误问题" class="headerlink" title="手动刷新页面css样式错误问题"></a>手动刷新页面css样式错误问题</h1><p>运行项目时有时候点击浏览器的刷新或者F5刷新后css样式就会全部乱掉，这个问题解决方法是把css全部放进main.js中导入，就像这样：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">"../static/css/bootstrap.min.css"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"../static/css/essentials.css"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"../static/css/layout.css"</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">"../static/css/header-1.css"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"../static/css/layout-shop.css"</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">"../static/css/color_scheme/orange.css"</span></span><br></pre></td></tr></tbody></table></figure>

<p>注意路径问题。如果有路径错误项目就会运行不成功，仔细看看错误信息排查就好了。</p>
<h1 id="URL路径-号问题"><a href="#URL路径-号问题" class="headerlink" title="URL路径#号问题"></a>URL路径#号问题</h1><p>vue-router默认hash模式，如果不想要很丑的hash，我们可以用路由的<code>history</code>模式。修改router下的<code>index.js</code>文件：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="keyword">new</span> VueRouter({</span><br><span class="line">  mode: <span class="string">'history'</span>,</span><br><span class="line">  routes: [...]</span><br><span class="line">})</span><br></pre></td></tr></tbody></table></figure>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>学习</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>Java邮件发送</title>
    <url>/blog/posts/99746608/</url>
    <content><![CDATA[<center>用JAVA来发送邮件吧</center>
<a id="more"></a>

<h1 id="邮件发送"><a href="#邮件发送" class="headerlink" title="邮件发送"></a>邮件发送</h1><p>使用Java应用程序发送 E-mail 十分简单，但是你首先得下载javaMail API</p>
<ul>
<li><a href="http://static.runoob.com/download/mail.jar" target="_blank" rel="noopener">JavaMail mail.jar 1.4.5</a></li>
</ul>
<p>下载这个jar包加入到项目中去，本例中是以163邮箱发送邮件的。然后直接上代码：</p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">package</span> com.org.test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.mail.Message;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Session;</span><br><span class="line"><span class="keyword">import</span> javax.mail.Transport;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.InternetAddress;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage;</span><br><span class="line"><span class="keyword">import</span> javax.mail.internet.MimeMessage.RecipientType;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MailUtils</span> </span>{</span><br><span class="line">    <span class="comment">//邮件服务器</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String smtp_host = <span class="string">"smtp.163.com"</span>;</span><br><span class="line">    <span class="comment">//用户名</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="string">"xxxx@163.com"</span>;</span><br><span class="line">    <span class="comment">//授权码</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="string">"xxxx"</span>;</span><br><span class="line">    <span class="comment">//发件人信箱</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String from = <span class="string">"xxxx@163.com"</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">sendMail</span><span class="params">(String subject, String content, String to)</span> </span>{</span><br><span class="line"></span><br><span class="line">        Properties props = <span class="keyword">new</span> Properties();</span><br><span class="line">        props.setProperty(<span class="string">"mail.smtp.host"</span>, smtp_host); <span class="comment">//邮件服务器</span></span><br><span class="line">        props.setProperty(<span class="string">"mail.transport.protocol"</span>, <span class="string">"smtp"</span>); <span class="comment">//协议</span></span><br><span class="line">        props.setProperty(<span class="string">"mail.smtp.auth"</span>, <span class="string">"true"</span>); <span class="comment">//身份验证</span></span><br><span class="line"></span><br><span class="line">        Session session = Session.getInstance(props);  <span class="comment">//获取session对象</span></span><br><span class="line"></span><br><span class="line">        Message message = <span class="keyword">new</span> MimeMessage(session);</span><br><span class="line">        <span class="keyword">try</span> {</span><br><span class="line">            message.setFrom(<span class="keyword">new</span> InternetAddress(from)); <span class="comment">//// Set From: 发件人地址</span></span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set To: 加载收件人地址</span></span><br><span class="line">            message.setRecipient(RecipientType.TO, <span class="keyword">new</span> InternetAddress(to));</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set Subject: 加载标题</span></span><br><span class="line">            message.setSubject(subject);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// 发送的内容，可以插入html标签</span></span><br><span class="line">            message.setContent(<span class="string">"&lt;h2&gt;"</span>+subject+<span class="string">"&lt;/h2&gt;&lt;br&gt;&lt;p&gt;"</span>+content+<span class="string">"&lt;/p&gt;"</span>, <span class="string">"text/html;charset=utf-8"</span>);</span><br><span class="line"></span><br><span class="line">            Transport transport = session.getTransport(); <span class="comment">//连接邮件服务器</span></span><br><span class="line">            transport.connect(smtp_host, username, password); <span class="comment">//发送邮件</span></span><br><span class="line">            transport.sendMessage(message, message.getAllRecipients());</span><br><span class="line">        } <span class="keyword">catch</span> (Exception e) {</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"邮件发送失败..."</span>);</span><br><span class="line">        }</span><br><span class="line">    }</span><br><span class="line">	</span><br><span class="line">    <span class="comment">// 测试</span></span><br><span class="line">	<span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>{</span><br><span class="line">		sendMail(<span class="string">"测试邮件"</span>, <span class="string">"这是一封测试邮件"</span>, <span class="string">"1419908068@qq.com"</span>);</span><br><span class="line">	}</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>注意授权码是一个独立的密码，不是你登录的密码。</p>
<p>收到的邮件：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191209211728.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="授权码开启"><a href="#授权码开启" class="headerlink" title="授权码开启"></a>授权码开启</h1><p>每个邮箱的授权码需要单独开启，并且还需要开启POP3/SMTP/IMAP服务，各个邮箱开启步骤如下：</p>
<h2 id="网易163邮箱"><a href="#网易163邮箱" class="headerlink" title="网易163邮箱"></a>网易163邮箱</h2><p>登录后点击<strong>设置 –&gt; POP3/SMTP/IMAP</strong></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/QQ截图20191209205636.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>分别勾选图中箭头所指选项：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191209210310.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>点击右侧菜单中的客户端授权密码，然后再点击开启，安装提示信息发送完短信就可以设置授权码了：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191209211248.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191209211444.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="QQ邮箱"><a href="#QQ邮箱" class="headerlink" title="QQ邮箱"></a>QQ邮箱</h2><p>登录邮箱后点击<strong>设置–&gt;账户</strong>，往下翻找到这个地方：</p>
<p>像图中这样把<code>POP3/SMTP服务，IMAP/SMTP服务</code>开启，然后生成授权码就好了</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://raw.githubusercontent.com/ViJar-Wang/Figurebed/master/img/20191209211927.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>-Java -学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Vue-Cli中使用axios以及跨域问题</title>
    <url>/blog/posts/3038f3bf/</url>
    <content><![CDATA[<center>Vue</center>
<a id="more"></a>

<p>官网只介绍了如何引入axios，这里是设置全局引入</p>
<h2 id="npm下载axios"><a href="#npm下载axios" class="headerlink" title="npm下载axios:"></a>npm下载axios:</h2><figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">npm install axios --save</span><br></pre></td></tr></tbody></table></figure>

<h2 id="全局引入axios"><a href="#全局引入axios" class="headerlink" title="全局引入axios"></a>全局引入axios</h2><p>在main.js中加入如下代码：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line">Vue.prototype.$ajax= axios</span><br></pre></td></tr></tbody></table></figure>

<h2 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h2><p>添加之后就能在vue文件methods中使用<code>$ajax</code>,例：</p>
<p>执行 <code>GET</code> 请求</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line">  axios.get(<span class="string">'/user?ID=12345'</span>)</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(response); <span class="comment">//回调函数</span></span><br><span class="line">  })</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(error); <span class="comment">//请求失败</span></span><br><span class="line">  });</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可选地，上面的请求可以这样做</span></span><br><span class="line">axios.get(<span class="string">'/user'</span>, {</span><br><span class="line">    params: {</span><br><span class="line">      ID: <span class="number">12345</span></span><br><span class="line">    }</span><br><span class="line">  })</span><br><span class="line">  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(response);</span><br><span class="line">  })</span><br><span class="line">  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">    <span class="built_in">console</span>.log(error);</span><br><span class="line">  });</span><br></pre></td></tr></tbody></table></figure>

<p>执行<code>POST</code>请求</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">axios.post('/user', {</span><br><span class="line">    firstName: 'Fred',</span><br><span class="line">    lastName: 'Flintstone'</span><br><span class="line">  })</span><br><span class="line">  .then(function (response) {</span><br><span class="line">    console.log(response);</span><br><span class="line">  })</span><br><span class="line">  .catch(function (error) {</span><br><span class="line">    console.log(error);</span><br><span class="line">  });</span><br></pre></td></tr></tbody></table></figure>

<h2 id="axios-API"><a href="#axios-API" class="headerlink" title="axios API"></a>axios API</h2><p>可以通过向 axios 传递相关配置来创建请求</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="comment">// 发送 POST 请求</span></span><br><span class="line">axios({</span><br><span class="line">  method: <span class="string">'post'</span>,</span><br><span class="line">  url: <span class="string">'/user/12345'</span>,</span><br><span class="line">  data: {</span><br><span class="line">    firstName: <span class="string">'Fred'</span>,</span><br><span class="line">    lastName: <span class="string">'Flintstone'</span></span><br><span class="line">  }</span><br><span class="line">});</span><br><span class="line"><span class="comment">//axios(url[, config])</span></span><br><span class="line"><span class="comment">// 发送 GET 请求（默认的方法）</span></span><br><span class="line">axios(<span class="string">'/user/12345'</span>);</span><br></pre></td></tr></tbody></table></figure>

<h2 id="axios跨域问题"><a href="#axios跨域问题" class="headerlink" title="axios跨域问题"></a>axios跨域问题</h2><p>在config/index.js文件中找到<code>proxyTable{}</code>,在括号中添加：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="string">'/api'</span>: {</span><br><span class="line">        target: <span class="string">'http://localhost:8080/'</span>,<span class="comment">//设置你调用的接口域名和端口号 别忘了加http</span></span><br><span class="line">        changeOrigin: <span class="literal">true</span>,<span class="comment">//如果需要跨域</span></span><br><span class="line">        pathRewrite: {</span><br><span class="line">          <span class="string">'^/api'</span>: <span class="string">'/'</span></span><br><span class="line">                <span class="comment">//这里理解成用面的地址，</span></span><br><span class="line">                <span class="comment">//后面组件中我们掉接口时直接用api代替 比如我要调</span></span><br><span class="line">                <span class="comment">//用'http://425.0.100.100:8888/user/add'，直接写‘/api/user/add’即可</span></span><br><span class="line">        }</span><br><span class="line">      }</span><br></pre></td></tr></tbody></table></figure>

<p>但是这样处理有个问题啊，只能在开发环境使用。真正线上时还是需要封装一下</p>
<h2 id="封装axios"><a href="#封装axios" class="headerlink" title="封装axios"></a>封装axios</h2><p>在一些大型项目中会封装axios，并且添加拦截器。在src下创建目录utils，在utils下创建js文件<code>fetch.js</code>。内容如下：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Date</span>.prototype.Format = <span class="function"><span class="keyword">function</span> (<span class="params">fmt</span>) </span>{</span><br><span class="line">  <span class="keyword">let</span> o = {</span><br><span class="line">    <span class="string">"M+"</span>: <span class="keyword">this</span>.getMonth() + <span class="number">1</span>,</span><br><span class="line">    <span class="string">"d+"</span>: <span class="keyword">this</span>.getDate(),</span><br><span class="line">    <span class="string">"h+"</span>: <span class="keyword">this</span>.getHours(),</span><br><span class="line">    <span class="string">"m+"</span>: <span class="keyword">this</span>.getMinutes(),</span><br><span class="line">    <span class="string">"s+"</span>: <span class="keyword">this</span>.getSeconds(),</span><br><span class="line">    <span class="string">"q+"</span>: <span class="built_in">Math</span>.floor((<span class="keyword">this</span>.getMonth() + <span class="number">3</span>) / <span class="number">3</span>),</span><br><span class="line">    <span class="string">"S"</span>: <span class="keyword">this</span>.getMilliseconds()</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">if</span> (<span class="regexp">/(y+)/</span>.test(fmt))</span><br><span class="line">    fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="keyword">this</span>.getFullYear() + <span class="string">""</span>).substr(<span class="number">4</span> - <span class="built_in">RegExp</span>.$<span class="number">1.</span>length))</span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">var</span> k <span class="keyword">in</span> o)</span><br><span class="line">    <span class="keyword">if</span> (<span class="keyword">new</span> <span class="built_in">RegExp</span>(<span class="string">"("</span> + k + <span class="string">")"</span>).test(fmt))</span><br><span class="line">      fmt = fmt.replace(<span class="built_in">RegExp</span>.$<span class="number">1</span>, (<span class="built_in">RegExp</span>.$<span class="number">1.</span>length == <span class="number">1</span>) ? (o[k]) : ((<span class="string">"00"</span> + o[k]).substr((<span class="string">""</span> + o[k]).length)))</span><br><span class="line">  <span class="keyword">return</span> fmt</span><br><span class="line">}</span><br><span class="line"><span class="comment">// respone拦截器</span></span><br><span class="line">axios.interceptors.response.use(<span class="function"><span class="params">response</span> =&gt;</span> {</span><br><span class="line">  <span class="keyword">return</span> response.data</span><br><span class="line">}, error =&gt; {</span><br><span class="line">  <span class="keyword">return</span> error.data</span><br><span class="line">})</span><br><span class="line">axios.defaults.withCredentials = <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkStatus</span>(<span class="params">response</span>) </span>{</span><br><span class="line">  <span class="comment">// loading</span></span><br><span class="line">  <span class="comment">// 如果http状态码正常，则直接返回数据</span></span><br><span class="line">  <span class="keyword">if</span> (response &amp;&amp; (response.status === <span class="number">200</span> || response.status === <span class="number">304</span> || response.status === <span class="number">400</span>)) {</span><br><span class="line">    <span class="keyword">return</span> response</span><br><span class="line">    <span class="comment">// 如果不需要除了data之外的数据，可以直接 return response.data</span></span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// 异常状态下，把错误信息返回去</span></span><br><span class="line">  <span class="keyword">return</span> {</span><br><span class="line">    status: <span class="number">-404</span>,</span><br><span class="line">    msg: <span class="string">'网络异常'</span></span><br><span class="line">  }</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkCode</span>(<span class="params">res</span>) </span>{</span><br><span class="line">  <span class="comment">// 如果code异常(这里已经包括网络错误，服务器错误，后端抛出的错误)，可以弹出一个错误提示，告诉用户</span></span><br><span class="line">  <span class="keyword">if</span> (res.status === <span class="number">-404</span>) {</span><br><span class="line">    <span class="built_in">console</span>.log(res.msg)</span><br><span class="line">  }</span><br><span class="line">  <span class="keyword">if</span> (res.data &amp;&amp; (!res.data.success)) {</span><br><span class="line">    <span class="comment">// alert(res.data.error_msg)</span></span><br><span class="line">  }</span><br><span class="line">  <span class="comment">// console.log('loadding')</span></span><br><span class="line">  <span class="keyword">return</span> res</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">timestampToTime</span>(<span class="params">timestamp</span>) </span>{</span><br><span class="line">  <span class="keyword">let</span> date = <span class="keyword">new</span> <span class="built_in">Date</span>(timestamp),</span><br><span class="line">    Y = date.getFullYear() + <span class="string">'-'</span>,</span><br><span class="line">    M = (date.getMonth() + <span class="number">1</span> &lt; <span class="number">10</span> ? <span class="string">'0'</span> + (date.getMonth() + <span class="number">1</span>) : date.getMonth() + <span class="number">1</span>) + <span class="string">'-'</span>,</span><br><span class="line">    D = date.getDate() + <span class="string">' '</span>,</span><br><span class="line">    h = date.getHours() + <span class="string">':'</span>,</span><br><span class="line">    m = date.getMinutes() + <span class="string">':'</span>,</span><br><span class="line">    s = date.getSeconds()</span><br><span class="line">  <span class="keyword">return</span> Y + M + D + h + m + s</span><br><span class="line">}</span><br><span class="line"></span><br><span class="line"><span class="keyword">export</span> <span class="keyword">default</span> {</span><br><span class="line">  post(url, data) {</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      url,</span><br><span class="line">      <span class="comment">//data: qs.stringify(data),</span></span><br><span class="line">      data,</span><br><span class="line">      timeout: <span class="number">15000</span>,</span><br><span class="line">      headers: {</span><br><span class="line">        <span class="string">'X-Requested-With'</span>: <span class="string">'XMLHttpRequest'</span>,</span><br><span class="line">        <span class="comment">// 'Content-Type': 'application/x-www-form-urlencoded; charset=UTF-8'</span></span><br><span class="line">        <span class="string">'content-type'</span>: <span class="string">'application/json;charset=UTF-8'</span></span><br><span class="line">      }</span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  upload(url, data) {</span><br><span class="line">    <span class="keyword">let</span> form = <span class="keyword">new</span> FormData()</span><br><span class="line">    <span class="built_in">Object</span>.keys(data).forEach(<span class="function"><span class="params">value</span> =&gt;</span> {</span><br><span class="line">      form.append(value, data[value])</span><br><span class="line">    })</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'post'</span>,</span><br><span class="line">      <span class="comment">// baseURL: process.env.BASE_API,</span></span><br><span class="line">      url,</span><br><span class="line">      data,</span><br><span class="line">      transformRequest: [<span class="function"><span class="keyword">function</span> (<span class="params">data</span>) </span>{</span><br><span class="line">        <span class="keyword">let</span> ret = <span class="string">''</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> it <span class="keyword">in</span> data) {</span><br><span class="line">          ret += <span class="built_in">encodeURIComponent</span>(it) + <span class="string">'='</span> + <span class="built_in">encodeURIComponent</span>(data[it]) + <span class="string">'&amp;'</span></span><br><span class="line">        }</span><br><span class="line">        <span class="keyword">return</span> ret</span><br><span class="line">      }],</span><br><span class="line">      timeout: <span class="number">15000</span>,</span><br><span class="line">      headers: {</span><br><span class="line">        <span class="comment">// 'X-Requested-With': 'XMLHttpRequest',</span></span><br><span class="line">        <span class="string">'Content-Type'</span>: <span class="string">'application/x-www-form-urlencoded'</span></span><br><span class="line">      }</span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span>(url, params) {</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'get'</span>,</span><br><span class="line">      <span class="comment">// baseURL: process.env.BASE_API,</span></span><br><span class="line">      url,</span><br><span class="line">      params, <span class="comment">// get 请求时带的参数</span></span><br><span class="line">      timeout: <span class="number">15000</span></span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line">  put(url, data) {</span><br><span class="line">    <span class="keyword">return</span> axios({</span><br><span class="line">      method: <span class="string">'put'</span>,</span><br><span class="line">      baseURL: process.env.BASE_API,</span><br><span class="line">      url,</span><br><span class="line">      data,</span><br><span class="line">      timeout: <span class="number">15000</span></span><br><span class="line">    }).then(</span><br><span class="line">      (response) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> response</span><br><span class="line">      }</span><br><span class="line">    ).then(</span><br><span class="line">      (res) =&gt; {</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">      }</span><br><span class="line">    )</span><br><span class="line">  },</span><br><span class="line">  time(tamp) {</span><br><span class="line">    <span class="keyword">return</span> timestampToTime(tamp)</span><br><span class="line">  }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p>然后再main.js中加入以下代码：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> fetch <span class="keyword">from</span> <span class="string">'./utils/fetch'</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> extend = Vue.prototype</span><br><span class="line">extend.$post = fetch.post</span><br><span class="line">extend.$<span class="keyword">get</span> = fetch.<span class="keyword">get</span></span><br><span class="line">extend.$form = fetch.form</span><br></pre></td></tr></tbody></table></figure>

<p>然后再vue文件使用的时候就很方便了：</p>
<figure class="highlight js"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">this</span>.$post(<span class="string">'http://localhost:8080/Mybatis_war_exploded/upload.do'</span>,imageFile)</span><br><span class="line">				  .then(<span class="function"><span class="keyword">function</span> (<span class="params">response</span>) </span>{</span><br><span class="line">				    <span class="built_in">console</span>.log(response);</span><br><span class="line">				  })</span><br><span class="line">				  .catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>{</span><br><span class="line">				    <span class="built_in">console</span>.log(error);</span><br><span class="line">				  });</span><br></pre></td></tr></tbody></table></figure>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>学习</category>
        <category>Vue</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>Vue</tag>
      </tags>
  </entry>
  <entry>
    <title>MyBatis动态SQL</title>
    <url>/blog/posts/898886b4/</url>
    <content><![CDATA[<center>动态 SQL</center>
<a id="more"></a>

<h2 id="动态SQL"><a href="#动态SQL" class="headerlink" title="动态SQL"></a>动态SQL</h2><p>MyBatis 的强大特性之一便是它的动态 SQL。如果你有使用 JDBC 或其他类似框架的经验，你就能体会到根据不同条件拼接 SQL 语句有多么痛苦。拼接的时候要确保不能忘了必要的空格，还要注意省掉列名列表最后的逗号。利用动态 SQL 这一特性可以彻底摆脱这种痛苦。</p>
<p>通常使用动态 SQL 不可能是独立的一部分,MyBatis 当然使用一种强大的动态 SQL 语言来改进这种情形,这种语言可以被用在任意的 SQL 映射语句中。</p>
<p>动态 SQL 元素和使用 JSTL 或其他类似基于 XML 的文本处理器相似。在 MyBatis 之前的版本中,有很多的元素需要来了解。MyBatis 3 大大提升了它们,现在用不到原先一半的元素就可以了。MyBatis 采用功能强大的基于 OGNL 的表达式来消除其他元素。</p>
<ul>
<li>if</li>
<li>choose (when, otherwise)</li>
<li>trim (where, set)</li>
<li>foreach</li>
</ul>
<h2 id="if"><a href="#if" class="headerlink" title="if"></a>if</h2><p>动态SQL通常要做的事情就是有条件的包含where子句的一部分。比如：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  SELECT * FROM User </span><br><span class="line">  WHERE power = #{power}</span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">    AND name like #{title}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>如果没有传入<code>name</code>。那么所有<code>power = power</code>的User都会返回，否则就会返回根据那么模糊查询的值。（就这个例子而言，细心的读者会发现其中的参数值是可以包含一些掩码或通配符的）。</p>
<p>如果多加个属性<code>adress</code>，只需要多加一个条件：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  SELECT * FROM User </span><br><span class="line">  WHERE power = #{power}</span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">    AND name like #{title}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"adress!=null"</span>&gt;</span></span><br><span class="line">  	AND adress = #{adress}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="choose-when-otherwise"><a href="#choose-when-otherwise" class="headerlink" title="choose, when, otherwise"></a>choose, when, otherwise</h2><p>Mybatis提供的choose元素，就像是JAVA中的switch语句。还是上面的例子，改一下:</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  SELECT * FROM User WHERE power = #{power}</span><br><span class="line">  <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">when</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">       AND name like #{title}</span><br><span class="line">     <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">when</span>  <span class="attr">test</span>=<span class="string">"adress!=null"</span>&gt;</span></span><br><span class="line">       AND adress = #{adress}</span><br><span class="line">     <span class="tag">&lt;/<span class="name">when</span>&gt;</span></span><br><span class="line">     <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">       AND age &gt;= 18</span><br><span class="line">     <span class="tag">&lt;<span class="name">otherwise</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">choose</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>这样一来，sql语句就变成了提供了什么就查什么。</p>
<h2 id="trim-where"><a href="#trim-where" class="headerlink" title="trim, where"></a>trim, where</h2><p>前面的已经解决了SQL动态问题。现在再来考虑，这里将 <code>power = 'power'</code>也设置成动态条件。</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  SELECT * FROM User WHERE</span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"power != null"</span>&gt;</span></span><br><span class="line">  	power = #{power}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">    AND name like #{title}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"adress!=null"</span>&gt;</span></span><br><span class="line">  	AND adress = #{adress}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>那么会发现一个问题，如果所有条件都没有匹配上，sql语句就会变成这样：</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">User</span> <span class="keyword">WHERE</span></span><br></pre></td></tr></tbody></table></figure>

<p>如果只有第二个条件匹配上，sql语句就会变成这样：</p>
<figure class="highlight sql"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">SELECT</span> * <span class="keyword">FROM</span> <span class="keyword">User</span> <span class="keyword">WHERE</span></span><br><span class="line"><span class="keyword">AND</span> <span class="keyword">name</span> <span class="keyword">like</span> <span class="comment">#{title}</span></span><br></pre></td></tr></tbody></table></figure>

<p>这两种情况都会导致查询失败。但是Mybatis有方法解决，把<code>where</code>语句换成<code>&lt;where&gt;</code>标签：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span></span></span><br><span class="line"><span class="tag">     <span class="attr">resultType</span>=<span class="string">"User"</span>&gt;</span></span><br><span class="line">  SELECT * FROM User </span><br><span class="line">  <span class="tag">&lt;<span class="name">WHERE</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"power != null"</span>&gt;</span></span><br><span class="line">      power = #{power}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span></span><br><span class="line">      AND name like #{title}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"adress!=null"</span>&gt;</span></span><br><span class="line">      AND adress = #{adress}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">WHERE</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>&lt;where&gt;</code>会自动去除<code>AND</code>或<code>OR</code>，如果没有借据号这个问题，那就可以用自定义元素<code>trim</code></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">trim</span> <span class="attr">prefix</span>=<span class="string">"WHERE"</span> <span class="attr">prefixOverrides</span>=<span class="string">"AND |OR "</span>&gt;</span></span><br><span class="line">  ... </span><br><span class="line"><span class="tag">&lt;/<span class="name">trim</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><code>prefixOverrides</code>属性会忽略通过管道分隔的文本序列（<strong>注意此例中的空格也是必要的</strong>）。它带来的结果就是所有在 <code>prefixOverrides</code>属性中指定的内容将被移除，并且插入 <code>prefix</code>属性中指定的内容。</p>
<h2 id="动态更新"><a href="#动态更新" class="headerlink" title="动态更新"></a>动态更新</h2><p>类似的用于动态更新语句的解决方案叫做 set。set 元素可以被用于动态包含需要更新的列，而舍去其他的。比如：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">update</span> <span class="attr">id</span>=<span class="string">"updateUser"</span>&gt;</span></span><br><span class="line">  update User</span><br><span class="line">    <span class="tag">&lt;<span class="name">set</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"name != null"</span>&gt;</span>name=#{username},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"password != null"</span>&gt;</span>password=#{password},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"email != null"</span>&gt;</span>email=#{email},<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">if</span> <span class="attr">test</span>=<span class="string">"sex != null"</span>&gt;</span>sex=#{sex}<span class="tag">&lt;/<span class="name">if</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">set</span>&gt;</span></span><br><span class="line">  where id=#{id}</span><br><span class="line"><span class="tag">&lt;/<span class="name">update</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>这里，set 元素会动态前置 SET 关键字，同时也会消除无关的逗号，因为用了条件语句之后很可能就会在生成的赋值语句的后面留下这些逗号。</p>
<h2 id="foreach"><a href="#foreach" class="headerlink" title="foreach"></a>foreach</h2><p>动态 SQL 的另外一个常用的必要操作是需要对一个集合进行遍历，通常是在构建 IN 条件语句的时候。比如</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectPostIn"</span> <span class="attr">resultType</span>=<span class="string">"entity.Post"</span>&gt;</span></span><br><span class="line">  SELECT *</span><br><span class="line">  FROM POST P</span><br><span class="line">  WHERE ID in</span><br><span class="line">  <span class="tag">&lt;<span class="name">foreach</span> <span class="attr">item</span>=<span class="string">"item"</span> <span class="attr">index</span>=<span class="string">"index"</span> <span class="attr">collection</span>=<span class="string">"list"</span></span></span><br><span class="line"><span class="tag">      <span class="attr">open</span>=<span class="string">"("</span> <span class="attr">separator</span>=<span class="string">","</span> <span class="attr">close</span>=<span class="string">")"</span>&gt;</span></span><br><span class="line">        #{item}</span><br><span class="line">  <span class="tag">&lt;/<span class="name">foreach</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p>collection中是传入的要遍历的数组变量，<code>index</code>是索引，<code>item</code>是把遍历结果赋值</p>
<h2 id="bind"><a href="#bind" class="headerlink" title="bind"></a>bind</h2><p><code>bind</code> 元素可以从 OGNL 表达式中创建一个变量并将其绑定到上下文。比如：</p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"selectBlogsLike"</span> <span class="attr">resultType</span>=<span class="string">"Blog"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">bind</span> <span class="attr">name</span>=<span class="string">"pattern"</span> <span class="attr">value</span>=<span class="string">"'%' + _parameter.getTitle() + '%'"</span> /&gt;</span></span><br><span class="line">  SELECT * FROM BLOG</span><br><span class="line">  WHERE title LIKE #{pattern}</span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>学习</category>
        <category>MyBatis</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>MyBatis</tag>
      </tags>
  </entry>
  <entry>
    <title>各种单机游戏下载</title>
    <url>/blog/posts/c7383401/</url>
    <content><![CDATA[<center>你想要的这里都有</center>
<a id="more"></a>

<h2 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h2><p>下面全是游戏的链接，电脑上装“百度网盘”这个软件直接下载</p>
<p>游戏运行库 解决各种丢失DLL文件（重要）</p>
<p>链接：<a href="https://pan.baidu.com/s/1V6I_aqMgcx5izFA58LSqBg" target="_blank" rel="noopener">https://pan.baidu.com/s/1V6I_aqMgcx5izFA58LSqBg</a><br>提取码：j8l7<br>游戏下载完成-安装出错看这里<br>链接：<a href="https://pan.baidu.com/s/1tOezmco8VrVgwQPtdmoUgw" target="_blank" rel="noopener">https://pan.baidu.com/s/1tOezmco8VrVgwQPtdmoUgw</a><br>提取码：xht9<br>常用工具+解压软件<br>链接：<a href="https://pan.baidu.com/s/1i0J93HxMDVNPgjryFOZo1Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1i0J93HxMDVNPgjryFOZo1Q</a><br>提取码：p314</p>
<h2 id="恐怖类"><a href="#恐怖类" class="headerlink" title="恐怖类"></a>恐怖类</h2><p>*<em>1.生化危机系列1-2-3-4-5-6-7  （74G ）   *</em><br>链接：<a href="https://pan.baidu.com/s/1uN_4AHP-Hg2SGXsUTGLvUg" target="_blank" rel="noopener">https://pan.baidu.com/s/1uN_4AHP-Hg2SGXsUTGLvUg</a> 提取码：67ju </p>
<p><strong>2逃生2  (19.33G)</strong><br>链接：<a href="https://pan.baidu.com/s/1fPPd-5PuT4mBYsxK_CKUKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1fPPd-5PuT4mBYsxK_CKUKg</a> 提取码：f5gj </p>
<p><strong>3消逝的光芒系列 （31G）（打僵尸）</strong><br>链接：<a href="https://pan.baidu.com/s/1rSNGgBYNQgZhACBrI2ln_w" target="_blank" rel="noopener">https://pan.baidu.com/s/1rSNGgBYNQgZhACBrI2ln_w</a> 密码：34yw</p>
<p><strong>5掠食 （18.51G）</strong><br>链接：<a href="https://pan.baidu.com/s/1HNiE_k4AqqEcuMPjIzu53A" target="_blank" rel="noopener">https://pan.baidu.com/s/1HNiE_k4AqqEcuMPjIzu53A</a> 密码：r82g</p>
<p>*<em>6心灵杀手 （6.07G) *</em><br>链接：<a href="https://pan.baidu.com/s/1Dx3YgJ3OUUNXHIaP8XJ-Rw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Dx3YgJ3OUUNXHIaP8XJ-Rw</a> 密码：20sz</p>
<h2 id="射击类"><a href="#射击类" class="headerlink" title="射击类"></a>射击类</h2><p>*<em>1正当防卫3 (47G)   *</em><br>thunder://QUFodHRwOi8vYnRmaWxlLnNvZnQ1NTY2LmNvbS95L0p1c3QuQ2F1c2UuMy5YTC5DSFMuMi4yLUFMSTIxMy50b3JyZW50Wlo=</p>
<p><strong>2狙击精英2 （如果是WIN10不要下2，不兼容）（5.99G）</strong><br>链接：<a href="https://pan.baidu.com/s/1796FXxGHEAp2Uq7jTMEnjg" target="_blank" rel="noopener">https://pan.baidu.com/s/1796FXxGHEAp2Uq7jTMEnjg</a> 密码：h5w4</p>
<p><strong>3狙击精英3（18.25G）</strong><br>链接：<a href="https://pan.baidu.com/s/1U4QZwO_AvAQ5fLaSFUab-w" target="_blank" rel="noopener">https://pan.baidu.com/s/1U4QZwO_AvAQ5fLaSFUab-w</a> 密码：wtu1</p>
<p><strong>4狙击精英4（50.33G）</strong><br>链接：<a href="https://pan.baidu.com/s/1_oSMTZ8pQPsBA07VD3Luqg" target="_blank" rel="noopener">https://pan.baidu.com/s/1_oSMTZ8pQPsBA07VD3Luqg</a> 密码：v133</p>
<p><strong>5狙击手系列 1-2-3（狙击手射击游戏 ）(53G)</strong><br>链接：<a href="https://pan.baidu.com/s/1WdKEU-78Z_Ta5rvaOP68Jg" target="_blank" rel="noopener">https://pan.baidu.com/s/1WdKEU-78Z_Ta5rvaOP68Jg</a> 密码：kzw6</p>
<p><strong>6使命召唤14 (37G)</strong><br>链接：<a href="https://pan.baidu.com/s/1UvEB4zDx81laYdlBpNtUkg" target="_blank" rel="noopener">https://pan.baidu.com/s/1UvEB4zDx81laYdlBpNtUkg</a> 密码：q31n </p>
<p><strong>7使命召唤其他系列 1-13  (415G)</strong><br>链接：<a href="https://pan.baidu.com/s/1FdMgwTFYf1pONEPlwFFKBA" target="_blank" rel="noopener">https://pan.baidu.com/s/1FdMgwTFYf1pONEPlwFFKBA</a> 提取码：vbdh </p>
<p><strong>8质量效应系列 1-2-3  (34G)（RPG单机游戏）</strong><br> 游戏安装米玛：632584（重要！）<br> 安装路径不要用中文，用英文<br>链接：<a href="https://pan.baidu.com/s/1LXCIvEiRRZQU-7m5OfeUjw" target="_blank" rel="noopener">https://pan.baidu.com/s/1LXCIvEiRRZQU-7m5OfeUjw</a> 密码：d5qf</p>
<p>*<em>9仙女座  (50G） *</em><br> 装路径不要用中文，用英文<br>链接：<a href="https://pan.baidu.com/s/1FGMKqid_ADiSBy_-MZuzGw" target="_blank" rel="noopener">https://pan.baidu.com/s/1FGMKqid_ADiSBy_-MZuzGw</a> 密码：mcp2</p>
<p><strong>10孤岛惊魂系列 （65G）   （第一人称射击游戏）</strong><br>链接：<a href="https://pan.baidu.com/s/1wqas9lZianoFbhX9xz-uCw" target="_blank" rel="noopener">https://pan.baidu.com/s/1wqas9lZianoFbhX9xz-uCw</a> 提取码：5jqu </p>
<p><strong>11孤岛危机系列 （27G） （第一人称射击游戏）</strong><br>链接：<a href="https://pan.baidu.com/s/19abggAOJ_rI8dDDoqpal-g" target="_blank" rel="noopener">https://pan.baidu.com/s/19abggAOJ_rI8dDDoqpal-g</a> 密码：vbrd</p>
<p>*<em>12茶杯头 （2.34G）   *</em><br>链接：<a href="https://pan.baidu.com/s/1_Sh59hvKsePDgDal2yZOWA" target="_blank" rel="noopener">https://pan.baidu.com/s/1_Sh59hvKsePDgDal2yZOWA</a> 密码：t8q1</p>
<p><strong>13战地系列 （136G）（第一人称射击游戏）单机新手必玩</strong><br>链接：<a href="https://pan.baidu.com/s/1QJz9EcUe6IMIkpP-0c_G6w" target="_blank" rel="noopener">https://pan.baidu.com/s/1QJz9EcUe6IMIkpP-0c_G6w</a> 提取码：l5h7 </p>
<p>14幽灵行动系列 （现代战术射击游戏）（15G）<br>链接：<a href="https://pan.baidu.com/s/19rOFhY72j58c4fo5niPobg" target="_blank" rel="noopener">https://pan.baidu.com/s/19rOFhY72j58c4fo5niPobg</a> 提取码：s3at </p>
<p>15反恐精英CS系列（614.48M）<br>链接：<a href="https://pan.baidu.com/s/1fH8gleQrl2P0ekz5JeFA1w" target="_blank" rel="noopener">https://pan.baidu.com/s/1fH8gleQrl2P0ekz5JeFA1w</a> 密码：iv01</p>
<p>16生化奇兵系列 （射击类游戏）（64G）<br>链接：<a href="https://pan.baidu.com/s/1LQom3V2KP5FBqbTAK7rd0g" target="_blank" rel="noopener">https://pan.baidu.com/s/1LQom3V2KP5FBqbTAK7rd0g</a> 密码：c3ro</p>
<p>17荣誉勋章系列 （射击类游戏）（29G）<br>链接：<a href="https://pan.baidu.com/s/1OyL9lViO8W-S_YrmwN6MMQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1OyL9lViO8W-S_YrmwN6MMQ</a> 提取码：pe23 </p>
<p>18极度恐慌系列 （射击类型的心理惊悚游戏）（18G）不支持W10<br>链接：<a href="https://pan.baidu.com/s/1nx9dpMt0RhROkJuZRwgs_w" target="_blank" rel="noopener">https://pan.baidu.com/s/1nx9dpMt0RhROkJuZRwgs_w</a> 密码：wf46</p>
<p>19孤胆枪手系列（俯视角射击游戏，老游戏，WIN10不推荐下）（1G）<br>链接：<a href="https://pan.baidu.com/s/132r6ydlZjkRr8N3ZcXgQBQ" target="_blank" rel="noopener">https://pan.baidu.com/s/132r6ydlZjkRr8N3ZcXgQBQ</a> 密码：owgp</p>
<p>20地狱潜者（6.29G）（俯视角射击）（6.29G）<br>链接：<a href="https://pan.baidu.com/s/1vganmbYahV51maozTLrSPw" target="_blank" rel="noopener">https://pan.baidu.com/s/1vganmbYahV51maozTLrSPw</a> 密码：511f</p>
<p>21地铁最后的曙光：回归（8.30G）（第一人称射击）<br>链接：<a href="https://pan.baidu.com/s/1Aw7RPjScPZTHdHggvBk-QQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Aw7RPjScPZTHdHggvBk-QQ</a> 密码：c1vw</p>
<p>22绝对征服（18.38G）（动作射击）<br>链接：<a href="https://pan.baidu.com/s/1fwCEK0514eKLupeLqTebmQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1fwCEK0514eKLupeLqTebmQ</a> 密码：3tgl</p>
<p>23马克思佩恩3（30.38G）（第三人称射击类）<br>链接：<a href="https://pan.baidu.com/s/19ZIY8uJ-hngv2P5-YJ5hTg" target="_blank" rel="noopener">https://pan.baidu.com/s/19ZIY8uJ-hngv2P5-YJ5hTg</a> 密码：9p8l</p>
<p>24收获日2（15.66G）（第一人称射击游戏）<br>链接：<a href="https://pan.baidu.com/s/1gH_qb4y3l9nE60jZ2e0WcQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1gH_qb4y3l9nE60jZ2e0WcQ</a> 密码：o7vq</p>
<p>25疯狂MAX（32.95G）（第三人称射击，角色扮演）（32.95G）<br>链接：<a href="https://pan.baidu.com/s/1xEmH-lqrISQoXtL6bFrACQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1xEmH-lqrISQoXtL6bFrACQ</a> 提取码：49x8 </p>
<p>26细胞分裂6（17.08G）(潜入射击类游戏)<br>链接：<a href="https://pan.baidu.com/s/1cOCOsGHIu2FDlBthj7Tgog" target="_blank" rel="noopener">https://pan.baidu.com/s/1cOCOsGHIu2FDlBthj7Tgog</a> 密码：o8lo</p>
<p>28毁灭战士4（51.35G）（爽快第一人称射击类）<br>链接：<a href="https://pan.baidu.com/s/15Ok0R7YrkyIK8k6zsM5mKg" target="_blank" rel="noopener">https://pan.baidu.com/s/15Ok0R7YrkyIK8k6zsM5mKg</a> 密码：37vx</p>
<p>29量子破碎（40.67GB）<br>链接：<a href="https://pan.baidu.com/s/1-WPPlMcBGPCvCxQyUgTbVg" target="_blank" rel="noopener">https://pan.baidu.com/s/1-WPPlMcBGPCvCxQyUgTbVg</a> 提取码：tr6h </p>
<p>30影子武士（14.80G）（第一人称射击）<br>链接：<a href="https://pan.baidu.com/s/1qgjzxUuHiWu6TrnYgEzJ-A" target="_blank" rel="noopener">https://pan.baidu.com/s/1qgjzxUuHiWu6TrnYgEzJ-A</a> 密码：qz5w</p>
<p>31光晕：斯巴达突袭（1.27G）（第一人俯视角射击类）<br>链接：<a href="https://pan.baidu.com/s/1cD-BccZmbBNn1AbZaiwufQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1cD-BccZmbBNn1AbZaiwufQ</a> 密码：n3wn</p>
<p>32光晕：斯巴达进攻（1.25G）（俯视角射击）<br>链接：<a href="https://pan.baidu.com/s/1eU8GcPwfE_uADUOmqqCvDw" target="_blank" rel="noopener">https://pan.baidu.com/s/1eU8GcPwfE_uADUOmqqCvDw</a> 密码：zvko</p>
<p>33泰坦陨落2（48.67G）（第一人称射击）<br>链接：<a href="https://pan.baidu.com/s/1KSDjEe-VzfJ9qHZipvB6RA" target="_blank" rel="noopener">https://pan.baidu.com/s/1KSDjEe-VzfJ9qHZipvB6RA</a> 密码：zhcb</p>
<p>34阿廖欣的枪（3.69G）（第三人称射击）<br>链接：<a href="https://pan.baidu.com/s/1h4TZtVOqb2tsPjFZJG083Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1h4TZtVOqb2tsPjFZJG083Q</a> 密码：os4b</p>
<p>35第八区偏见（2.90G称射击）<br>链接：<a href="https://pan.baidu.com/s/1Gc2M-r0CrupLK95G34v5HQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Gc2M-r0CrupLK95G34v5HQ</a> 密码：2x67</p>
<p>36反恐特遣队2海豹突击队（1.12G）（第一人称射击）<br>链接：<a href="https://pan.baidu.com/s/1E6siyoum0rfjwm5MInAvjQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1E6siyoum0rfjwm5MInAvjQ</a> 密码：as69</p>
<p>37荣耀战场前进30高地（1.62G）（第一人称射击）<br>链接：<a href="https://pan.baidu.com/s/1rz6rnAnLh6mskvTAgJ7mow" target="_blank" rel="noopener">https://pan.baidu.com/s/1rz6rnAnLh6mskvTAgJ7mow</a> 密码：726o</p>
<p>38失落的星球：极限状态（3.66G）（第三人称射击）<br>链接：<a href="https://pan.baidu.com/s/1P6oq-l7s1tLa9idfhtuKmw" target="_blank" rel="noopener">https://pan.baidu.com/s/1P6oq-l7s1tLa9idfhtuKmw</a> 密码：ln79</p>
<p>39时空悍将（2.74G）（射击类游戏）<br>链接：<a href="https://pan.baidu.com/s/1plVTotfsIAEeM96weOtNTA" target="_blank" rel="noopener">https://pan.baidu.com/s/1plVTotfsIAEeM96weOtNTA</a> 密码：v9u3</p>
<p>三·动作冒险类<br>1侠盗列车手5 简称GTA5 神作 （66.2G） （全网最稳定版本）<br>链接：<a href="https://pan.baidu.com/s/1l4J48rCAdiaHFGDHoMgzxQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1l4J48rCAdiaHFGDHoMgzxQ</a> 密码：xmz6</p>
<p>3侠盗猎车-罪恶都市<br>链接：<a href="https://pan.baidu.com/s/1GesRjW9JHlnk_5_T39JlLg" target="_blank" rel="noopener">https://pan.baidu.com/s/1GesRjW9JHlnk_5_T39JlLg</a> 密码：2r4g</p>
<p>4侠盗猎车盗猎车之圣安地列斯中文豪华版<br>链接：<a href="https://pan.baidu.com/s/1bJwE6ZmQcpMGDPrDqYw4Cg" target="_blank" rel="noopener">https://pan.baidu.com/s/1bJwE6ZmQcpMGDPrDqYw4Cg</a> 密码：zkuq</p>
<p>5丧尸围城系列（动作类游戏） （85G）<br>链接：<a href="https://pan.baidu.com/s/1vgYrW4-2cLSmLvd0UJwNRQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1vgYrW4-2cLSmLvd0UJwNRQ</a> 提取码：nyuv </p>
<p>6讨鬼传系列（动作类游戏）（31G）<br>链接：<a href="https://pan.baidu.com/s/1wHqZQdv2o_C85RldFkJvLg" target="_blank" rel="noopener">https://pan.baidu.com/s/1wHqZQdv2o_C85RldFkJvLg</a> 密码：erfv</p>
<p>7古墓丽影系列 （特色动作冒险游戏）（51G）<br>链接：<a href="https://pan.baidu.com/s/1CgiU2x0tJrDjF3lGIPv4pg" target="_blank" rel="noopener">https://pan.baidu.com/s/1CgiU2x0tJrDjF3lGIPv4pg</a> 提取码：n1pi </p>
<p>8刺客信条系列 （动作类游戏）（126G）<br>链接：<a href="https://pan.baidu.com/s/1DPBGl80vwgvqlxFeYdoyNQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1DPBGl80vwgvqlxFeYdoyNQ</a> 提取码：j85s </p>
<p>9鬼泣系列 （动作类型单机电子游戏）（23G）<br>链接：<a href="https://pan.baidu.com/s/1VbcO_bUoMykskkAF_I_wQQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1VbcO_bUoMykskkAF_I_wQQ</a> 密码：3kue</p>
<p>10中土世界：战争之影          （132G）<br><a href="https://pan.baidu.com/s/1aXtyokTlinXW1xFc2M3zrg" target="_blank" rel="noopener">https://pan.baidu.com/s/1aXtyokTlinXW1xFc2M3zrg</a></p>
<p>11雷曼起源 （1.6G）<br>链接：<a href="https://pan.baidu.com/s/1t9t_R-FTbgPkOPTWttUfSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1t9t_R-FTbgPkOPTWttUfSw</a> 密码：san8</p>
<p>12雷曼传奇 （5.4G）<br>链接：<a href="https://pan.baidu.com/s/1tEVuDylZ9b15CG904or5_w" target="_blank" rel="noopener">https://pan.baidu.com/s/1tEVuDylZ9b15CG904or5_w</a> 密码：tvz8</p>
<p>13波斯王子系列 （动作游戏类的电子游戏）（10G）<br>链接：<a href="https://pan.baidu.com/s/1RpajY2OFeEU_AU35oqhkHQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1RpajY2OFeEU_AU35oqhkHQ</a> 密码：i5yr</p>
<p>14杀手系列 （动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/13Q2qfLgcUVQXIVkJYeuCkA" target="_blank" rel="noopener">https://pan.baidu.com/s/13Q2qfLgcUVQXIVkJYeuCkA</a> 提取码：146r </p>
<p>15虐杀原形系列 （动作类）<br>链接：<a href="https://pan.baidu.com/s/1oPi3uJbddqRC2WLhevz2Ww" target="_blank" rel="noopener">https://pan.baidu.com/s/1oPi3uJbddqRC2WLhevz2Ww</a> 密码：xtsn</p>
<p>16暗黑血统系列 （动作类）<br>链接：<a href="https://pan.baidu.com/s/1dbkNapAH72UlkHvMwZn6YA" target="_blank" rel="noopener">https://pan.baidu.com/s/1dbkNapAH72UlkHvMwZn6YA</a> 密码：6a8q</p>
<p>17乐高游戏系列 （动作类剧情多人游戏可）<br>链接：<a href="https://pan.baidu.com/s/1OE1y2y4CThJb27iZYryrnA" target="_blank" rel="noopener">https://pan.baidu.com/s/1OE1y2y4CThJb27iZYryrnA</a> 密码：hrof</p>
<p>18蝙蝠侠系列 （动作类）</p>
<p>蝙蝠侠 内敌 全5章<br>链接：<a href="https://pan.baidu.com/s/1BzoUOJgOmgf0_WRL7n2LXw" target="_blank" rel="noopener">https://pan.baidu.com/s/1BzoUOJgOmgf0_WRL7n2LXw</a></p>
<p>蝙蝠侠 故事版 全5章<br>链接: <a href="https://pan.baidu.com/s/1qYAx2Ny" target="_blank" rel="noopener">https://pan.baidu.com/s/1qYAx2Ny</a></p>
<p>蝙蝠侠 阿卡姆之城<br>链接: <a href="https://pan.baidu.com/s/1kWHitYR" target="_blank" rel="noopener">https://pan.baidu.com/s/1kWHitYR</a></p>
<p>蝙蝠侠 阿卡姆 起源<br>链接: <a href="http://pan.baidu.com/s/18bPng" target="_blank" rel="noopener">http://pan.baidu.com/s/18bPng</a></p>
<p>蝙蝠侠 阿卡姆骑士<br>链接: thunder://QUFodHRwOi8vZGwxMS5jdWRvd24uY29tLzNETUdBTUVfQmF0bWFuX0Fya2hhbV9LbmlnaHQuQ0hTLkdyZWVuLnYxLjYxLnJhclpa</p>
<p>蝙蝠侠 阿卡姆起源黑门<br>链接: <a href="https://pan.baidu.com/s/1smheEV7" target="_blank" rel="noopener">https://pan.baidu.com/s/1smheEV7</a></p>
<p>19尼尔机械纪元（动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1h5k1I89_wLfOKgT6HiAcCw" target="_blank" rel="noopener">https://pan.baidu.com/s/1h5k1I89_wLfOKgT6HiAcCw</a> 提取码：pxt6 </p>
<p>20迸发（10.03G）（科幻动作游戏）<br>链接：<a href="https://pan.baidu.com/s/1vmJbGdED5xS705Wu8Hb0oQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1vmJbGdED5xS705Wu8Hb0oQ</a> 提取码：yue8 </p>
<p>21迪士尼无限（12.48G）（动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1EE8TT_FYNF7BRIAu0MjBnw" target="_blank" rel="noopener">https://pan.baidu.com/s/1EE8TT_FYNF7BRIAu0MjBnw</a> 密码：zimi</p>
<p>22过气英雄（1.07G）（冒险类游戏）<br>链接：<a href="https://pan.baidu.com/s/107DuMbT_Rm7DHHcD9PZquQ" target="_blank" rel="noopener">https://pan.baidu.com/s/107DuMbT_Rm7DHHcD9PZquQ</a> 密码：8rnr</p>
<p>23进击的巨人（13.54G）（动作类）<br>链接：<a href="https://pan.baidu.com/s/1ZNQIOzafBy7twqzCTu8wRg" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZNQIOzafBy7twqzCTu8wRg</a> 密码：6q2o</p>
<p>24盐和避难所（483.55M）（横版动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1vxwUV6pT7vB57-lIcSEsqQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1vxwUV6pT7vB57-lIcSEsqQ</a> 密码：bh4a</p>
<p>25堕落之王（15.47G）（动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1I9C9SAEibsZW7G0fO1sLHA" target="_blank" rel="noopener">https://pan.baidu.com/s/1I9C9SAEibsZW7G0fO1sLHA</a> 密码：szvr</p>
<p>27忍者神龟：曼哈顿突变（7.56G）（动作类）<br>链接：<a href="https://pan.baidu.com/s/1i7z7BM5lgqYAboLvcfVp3Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1i7z7BM5lgqYAboLvcfVp3Q</a> 密码：0ci7</p>
<p>28塞伯利亚之谜系列 （22.46G）（冒险类游戏）<br>链接：<a href="https://pan.baidu.com/s/1kxr-eBlzBpl_MhxAXgwVjw" target="_blank" rel="noopener">https://pan.baidu.com/s/1kxr-eBlzBpl_MhxAXgwVjw</a> 密码：pwwz</p>
<p>29圣斗士星矢：斗士之魂（2.65G）（动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1RfPuPs8mYf97xLhwXMlofw" target="_blank" rel="noopener">https://pan.baidu.com/s/1RfPuPs8mYf97xLhwXMlofw</a> 密码：pofw</p>
<p>30侍道3（1.59G）（动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1zmREUfhY9FfD_hmOO08zxA" target="_blank" rel="noopener">https://pan.baidu.com/s/1zmREUfhY9FfD_hmOO08zxA</a> 密码：jpob</p>
<p>31侍道4（2.11G）（动作类游戏）<br>链接：<a href="https://pan.baidu.com/s/1XBbkSDNz-SRwfMtJVLterg" target="_blank" rel="noopener">https://pan.baidu.com/s/1XBbkSDNz-SRwfMtJVLterg</a> 密码：773l</p>
<p>32教父2（4.28G）（动作类）<br>链接：<a href="https://pan.baidu.com/s/1bWOgFKC3r20Wu4bmamf94Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1bWOgFKC3r20Wu4bmamf94Q</a> 密码：9bl4</p>
<p>33海盗王双重秘宝（2.45G）（动作冒险）<br>链接：<a href="https://pan.baidu.com/s/18OHwr8__3WalAEiPl2G8PQ" target="_blank" rel="noopener">https://pan.baidu.com/s/18OHwr8__3WalAEiPl2G8PQ</a> 密码：lggp<br>34红色派系末日审判（7.27G）（动作类）<br>链接：<a href="https://pan.baidu.com/s/1ze-DHFfDo7SBc8sE7lBoCA" target="_blank" rel="noopener">https://pan.baidu.com/s/1ze-DHFfDo7SBc8sE7lBoCA</a> 密码：s7ho<br>35寂静岭系列1-5（冒险类游戏）<br>链接：<a href="https://pan.baidu.com/s/1-_gK7XTZG2KAmwvSDg2_iQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1-_gK7XTZG2KAmwvSDg2_iQ</a> 密码：gyyz<br>36黑手党2 （8G）<br>链接：<a href="https://pan.baidu.com/s/1lU75q4T28o0KqibJk2uWGA" target="_blank" rel="noopener">https://pan.baidu.com/s/1lU75q4T28o0KqibJk2uWGA</a> 密码：zpbg<br>37黑手党3 （55G）<br>链接：<a href="https://pan.baidu.com/s/1UDZYjZSfs2acUFlb_F3pHw" target="_blank" rel="noopener">https://pan.baidu.com/s/1UDZYjZSfs2acUFlb_F3pHw</a> 提取码：dhnf<br>38彩虹6号围攻 （13G）<br>链接：<a href="https://pan.baidu.com/s/1x7odzeixYH-iwIx4bBvjJw" target="_blank" rel="noopener">https://pan.baidu.com/s/1x7odzeixYH-iwIx4bBvjJw</a></p>
<h2 id="角色扮演类"><a href="#角色扮演类" class="headerlink" title="角色扮演类"></a>角色扮演类</h2><p>1方舟 生存进化 （7.2G）<br>链接：<a href="https://pan.baidu.com/s/1c5PqEm4CofUWbZ8LBXdNrw" target="_blank" rel="noopener">https://pan.baidu.com/s/1c5PqEm4CofUWbZ8LBXdNrw</a> 密码：u5ln<br>2看门狗1（角色扮演，沙盒类） （ 17.19G）<br>链接：<a href="https://pan.baidu.com/s/1_bKRLUrkv_Vsx80O0ziG2Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1_bKRLUrkv_Vsx80O0ziG2Q</a> 密码：dvfq<br>3看门狗2 （27G）<br>链接：<a href="https://pan.baidu.com/s/1rM4AaMqqOGFSno-ZQfGgWw" target="_blank" rel="noopener">https://pan.baidu.com/s/1rM4AaMqqOGFSno-ZQfGgWw</a> 提取码：5pue<br>4火影龙珠系列 （角色扮演类）<br>火影忍者：究极忍者风暴<br><a href="https://pan.baidu.com/s/1K0uUK6-WrMW6fsVTFELJwg" target="_blank" rel="noopener">https://pan.baidu.com/s/1K0uUK6-WrMW6fsVTFELJwg</a><br>火影忍者：究极忍者风暴2<br><a href="http://pan.baidu.com/s/1pKTQojh" target="_blank" rel="noopener">http://pan.baidu.com/s/1pKTQojh</a><br>火影忍者：究极忍者风暴3完全爆发<br><a href="http://pan.baidu.com/s/1geWfbmr" target="_blank" rel="noopener">http://pan.baidu.com/s/1geWfbmr</a><br>火影忍者:究极忍者风暴4<br><a href="http://pan.baidu.com/s/1jHo5Ons" target="_blank" rel="noopener">http://pan.baidu.com/s/1jHo5Ons</a><br>火影忍者4：博人之路<br><a href="https://pan.baidu.com/s/1jHIqwTK" target="_blank" rel="noopener">https://pan.baidu.com/s/1jHIqwTK</a><br>龙珠：超宇宙<br><a href="https://pan.baidu.com/s/1i6Qac5J" target="_blank" rel="noopener">https://pan.baidu.com/s/1i6Qac5J</a><br>龙珠：超宇宙2<br><a href="https://pan.baidu.com/s/1tOaKkdtWH6yI5GPWJyjZFQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1tOaKkdtWH6yI5GPWJyjZFQ</a><br>龙珠战士Z<br><a href="https://pan.baidu.com/s/1yFNieN0cQ5q6kjxPm98Ldw" target="_blank" rel="noopener">https://pan.baidu.com/s/1yFNieN0cQ5q6kjxPm98Ldw</a></p>
<p>5巫师系列 （角色扮演类单机游戏，巫师3神作请下年度版）（74G）<br>链接：<a href="https://pan.baidu.com/s/17WCT2_ik2DYw0AubPnZ_OA" target="_blank" rel="noopener">https://pan.baidu.com/s/17WCT2_ik2DYw0AubPnZ_OA</a> 密码：llo8<br>6仙剑系列 （单机角色扮演游戏） （14G）<br>链接：<a href="https://pan.baidu.com/s/1OkEfiO0pLlWhIKJ9we9Ttw" target="_blank" rel="noopener">https://pan.baidu.com/s/1OkEfiO0pLlWhIKJ9we9Ttw</a> 提取码：tl4a<br>7轩辕剑系列 （单机角色扮演游戏）（28G）<br>链接：<a href="https://pan.baidu.com/s/1-FVPgKIHmDYzCre3vXGXvQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1-FVPgKIHmDYzCre3vXGXvQ</a> 密码：5nys<br>8蜘蛛侠系列 （单机角色扮演游戏）（20G）<br>链接：<a href="https://pan.baidu.com/s/1alLKxyzsxJt2qtiNwl15UA" target="_blank" rel="noopener">https://pan.baidu.com/s/1alLKxyzsxJt2qtiNwl15UA</a> 密码：nbtt<br>9辐射4（23.63G）<br>链接：<a href="https://pan.baidu.com/s/1xObr0z28yyt6QQRkeT1JSg" target="_blank" rel="noopener">https://pan.baidu.com/s/1xObr0z28yyt6QQRkeT1JSg</a> 提取码：s2yp<br>10龙腾世纪系列 （角色扮演游戏） 不支持W10<br>链接：<a href="https://pan.baidu.com/s/13BCmVZ_BDVaHjLmjgOAyGQ" target="_blank" rel="noopener">https://pan.baidu.com/s/13BCmVZ_BDVaHjLmjgOAyGQ</a> 密码：r3xg<br>11黑暗之魂系列 （高难度的硬派角色扮演游戏）<br>链接：<a href="https://pan.baidu.com/s/1WPNzIC2f-a8FEzDaZ7Yh2g" target="_blank" rel="noopener">https://pan.baidu.com/s/1WPNzIC2f-a8FEzDaZ7Yh2g</a> 提取码：tjyp<br>12龙之信条：黑暗 （角色扮演游戏）（20G）<br>链接：<a href="https://pan.baidu.com/s/1KkGtpYXW7x6chX7e2kN-VQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1KkGtpYXW7x6chX7e2kN-VQ</a> 密码：lisv<br>13最终幻想系列 （角色扮演类电视游戏）</p>
<p>-最终幻想10/10-2 HD<br><a href="https://pan.baidu.com/s/1qZPNPSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1qZPNPSw</a><br>迅雷thunder://QUFodHRwOi8vZGw0LmN1ZG93bi5jb20vM0RNR0FNRV9GSU5BTF9GQU5UQVNZX1hYMl9IRC5DSFQuR3JlZW4ucmFyWlo=</p>
<p>-最终幻想:零式HD<br><a href="https://pan.baidu.com/s/1NWegddyq6nneF8WpZELUcQ#list/path=%2F" target="_blank" rel="noopener">https://pan.baidu.com/s/1NWegddyq6nneF8WpZELUcQ#list/path=%2F</a><br>迅雷<br>thunder://QUFodHRwOi8vZGwyNC5jdWRvd24uY29tL3RvcnJlbnQvM0RNR0FNRV9GSU5BTC5GQU5UQVNZLlRZUEUtMC5IRC5SZXBhY2tfM0RNLnRvcnJlbnRaWg==</p>
<p>-最终幻想12 HD<br><a href="https://pan.baidu.com/s/1nw4UCYH" target="_blank" rel="noopener">https://pan.baidu.com/s/1nw4UCYH</a><br>迅雷<br>thunder://QUFodHRwOi8vZGwyMi5jdWRvd24uY29tLzNETUdBTUVfRklOQUxfRkFOVEFTWV9YSUlfVEhFX1pPRElBQ19BR0UuQ0hTLkdyZWVuLnJhclpa</p>
<p>-最终幻想13<br>种子<br><a href="http://btfile.soft5566.com/y/FINAL.FANTASY.XIII.ASIA.PC.Green.Edition.v2-ALI213.torrent" target="_blank" rel="noopener">http://btfile.soft5566.com/y/FINAL.FANTASY.XIII.ASIA.PC.Green.Edition.v2-ALI213.torrent</a><br>迅雷<br>thunder://QUFodHRwOi8vYnRmaWxlLnNvZnQ1NTY2LmNvbS95L0ZJTkFMLkZBTlRBU1kuWElJSS5BU0lBLlBDLkdyZWVuLkVkaXRpb24udjItQUxJMjEzLnRvcnJlbnRaWg==</p>
<p>最终幻想13-2<br>种子<br><a href="http://dl1.cudown.com/torrent1/3DMGAME-FINAL.FANTASY.XIII-2.Asia.Version.Cracked-3DM.torrent" target="_blank" rel="noopener">http://dl1.cudown.com/torrent1/3DMGAME-FINAL.FANTASY.XIII-2.Asia.Version.Cracked-3DM.torrent</a><br>迅雷<br>thunder://QUFodHRwOi8vZGwxLmN1ZG93bi5jb20vdG9ycmVudDEvM0RNR0FNRS1GSU5BTC5GQU5UQVNZLlhJSUktMi5Bc2lhLlZlcnNpb24uQ3JhY2tlZC0zRE0udG9ycmVudFpa</p>
<p>最终幻想13-雷霆归来<br>种子<br><a href="http://dl1.cudown.com/torrent1/3DMGAME-LIGHTNING.RETURNS.FINAL.FANTASY.XIII.Cracked-3DM.torrent" target="_blank" rel="noopener">http://dl1.cudown.com/torrent1/3DMGAME-LIGHTNING.RETURNS.FINAL.FANTASY.XIII.Cracked-3DM.torrent</a><br>迅雷<br>thunder://QUFodHRwOi8vZGwxLmN1ZG93bi5jb20vdG9ycmVudDEvM0RNR0FNRS1MSUdIVE5JTkcuUkVUVVJOUy5GSU5BTC5GQU5UQVNZLlhJSUkuQ3JhY2tlZC0zRE0udG9ycmVudFpa</p>
<p>最终幻想-世界<br><a href="https://pan.baidu.com/s/1QXJYMpPT79LcsX0SCOP11A" target="_blank" rel="noopener">https://pan.baidu.com/s/1QXJYMpPT79LcsX0SCOP11A</a><br>种子<br><a href="http://down.gcvchp.com/torrent/4625505.torrent" target="_blank" rel="noopener">http://down.gcvchp.com/torrent/4625505.torrent</a></p>
<p>14暴君（7.30G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/11TLgvKpcdInbhPW5K4Vldg" target="_blank" rel="noopener">https://pan.baidu.com/s/11TLgvKpcdInbhPW5K4Vldg</a> 密码：wrcb<br>15狂战传说（16.74G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1_3wFNMx0YEDFmvqSNN8BbQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1_3wFNMx0YEDFmvqSNN8BbQ</a> 密码：8bpp<br>16魔法对抗2/魔能2（3.23G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/12duLjXqpg_On9FQgwP1ILw" target="_blank" rel="noopener">https://pan.baidu.com/s/12duLjXqpg_On9FQgwP1ILw</a> 密码：xa2v<br>17索菲的工作室（6.23G）（回合制角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1WDK4OacRC5XLzjtx48NogQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1WDK4OacRC5XLzjtx48NogQ</a> 密码：gw40<br>19维克多弗兰（3.41G）（类暗黑游戏）<br>链接：<a href="https://pan.baidu.com/s/1S7QakLUavVIz70kVwhQwTw" target="_blank" rel="noopener">https://pan.baidu.com/s/1S7QakLUavVIz70kVwhQwTw</a> 密码：kf2d<br>20我是刹那（1.63G）（日式RPG）<br>链接：<a href="https://pan.baidu.com/s/1njcFvHWobaKQWPj6_gw_7w" target="_blank" rel="noopener">https://pan.baidu.com/s/1njcFvHWobaKQWPj6_gw_7w</a> 密码：9fwo<br>21傲世苍龙赵云传（808.92M）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1CablT54AXC5U28VneZb0cg" target="_blank" rel="noopener">https://pan.baidu.com/s/1CablT54AXC5U28VneZb0cg</a> 密码：5wfk<br>22超时空英雄传说3狂神降世（1.10G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1OO6Ded_xRCImk02YWZ8LIg" target="_blank" rel="noopener">https://pan.baidu.com/s/1OO6Ded_xRCImk02YWZ8LIg</a> 密码：h85v<br>23地牢围攻3（2.58G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1UrBR9lMSjnQnK8Akr-LLYg" target="_blank" rel="noopener">https://pan.baidu.com/s/1UrBR9lMSjnQnK8Akr-LLYg</a> 密码：xh2b<br>24堕落天使（1.55G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1vi5EBJa5_yNudHJbjjH4FQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1vi5EBJa5_yNudHJbjjH4FQ</a> 密码：3xjz<br>25废土2（8.17G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1sX2yqudhAFuHiPZ3OPJChg" target="_blank" rel="noopener">https://pan.baidu.com/s/1sX2yqudhAFuHiPZ3OPJChg</a> 密码：wr1e<br>26古龙群侠传（1.40G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1EwwJrA_KAq9oqPmg_wvpBw" target="_blank" rel="noopener">https://pan.baidu.com/s/1EwwJrA_KAq9oqPmg_wvpBw</a> 密码：avdq<br>27如来神掌宇宙争雄（1.77G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1u-mBQzqCkVL6au_4qzse5Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1u-mBQzqCkVL6au_4qzse5Q</a> 密码：cga4<br>28神界：龙之指挥官（8.95G）（动作角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1SKQdju1mfL6clreZAlVkgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1SKQdju1mfL6clreZAlVkgg</a> 密码：0180<br>29圣域1魔都魅影（1.70G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/19Yg3XiIiMK_GiFx0x-fFWw" target="_blank" rel="noopener">https://pan.baidu.com/s/19Yg3XiIiMK_GiFx0x-fFWw</a> 密码：jm9u<br>30双星物语2+2加强版（1.72G+1.73G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1b1IeqNpJwTtHnzBkP4sNqw" target="_blank" rel="noopener">https://pan.baidu.com/s/1b1IeqNpJwTtHnzBkP4sNqw</a> 密码：6akh<br>31天河传说（1.16G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1rnHocB0m_6BNd7Oh8_27oA" target="_blank" rel="noopener">https://pan.baidu.com/s/1rnHocB0m_6BNd7Oh8_27oA</a> 密码：71s6<br>32天之劫（1.09G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1EbXUbMXdNGYe9WbTkySJ-g" target="_blank" rel="noopener">https://pan.baidu.com/s/1EbXUbMXdNGYe9WbTkySJ-g</a> 密码：5wq3<br>33无双蛇魔Z（无双大蛇Z）（3.73G）<br>链接：<a href="https://pan.baidu.com/s/1BbbYP3re6trUeYdhj6C-Yg" target="_blank" rel="noopener">https://pan.baidu.com/s/1BbbYP3re6trUeYdhj6C-Yg</a> 密码：00sk<br>34武林立志传龙吟剑（5.84G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1lMaL_dUybtE-j5tBuqF3JA" target="_blank" rel="noopener">https://pan.baidu.com/s/1lMaL_dUybtE-j5tBuqF3JA</a> 密码：yrar<br>35西藏镇魔曲（1.29G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/10KpUCILClqkJxXXidiLctg" target="_blank" rel="noopener">https://pan.baidu.com/s/10KpUCILClqkJxXXidiLctg</a> 密码：xei3<br>36侠客风云传（8.62G）（角色扮演，养成）<br>链接：<a href="https://pan.baidu.com/s/1AY6s95VtZLCt3Dk9BKomgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1AY6s95VtZLCt3Dk9BKomgg</a> 密码：7u8h<br>37新冰城传奇（3.98G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1rxoIpyKmh-5T0jAvvKW2Eg" target="_blank" rel="noopener">https://pan.baidu.com/s/1rxoIpyKmh-5T0jAvvKW2Eg</a> 密码：01w9<br>38新绝代双骄1（角色扮演）（1G）<br>链接：<a href="https://pan.baidu.com/s/1v9Or9q0nQK9zcrVVgy1N9Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1v9Or9q0nQK9zcrVVgy1N9Q</a> 密码：8zbk<br>39新绝代双骄2    （0.7G）<br>链接：<a href="https://pan.baidu.com/s/14oD8BQrC41-pVI3BkimahQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14oD8BQrC41-pVI3BkimahQ</a> 密码：xc5r<br>40新绝代双骄3   （1.4G)<br>链接：<a href="https://pan.baidu.com/s/16qhG3x_vm5136kSWZmMpgw" target="_blank" rel="noopener">https://pan.baidu.com/s/16qhG3x_vm5136kSWZmMpgw</a> 密码：ekvy<br>41新绝代双骄前传-云海仙境  (2.37G)<br>链接：<a href="https://pan.baidu.com/s/1wW0xx-Pq6H986AWYqtD-Fg" target="_blank" rel="noopener">https://pan.baidu.com/s/1wW0xx-Pq6H986AWYqtD-Fg</a> 密码：quao<br>42月剑痕（2.02G）（角色扮演）<br>链接：<a href="https://pan.baidu.com/s/1D-_nUA3wv9h5pU4Abi8Mew" target="_blank" rel="noopener">https://pan.baidu.com/s/1D-_nUA3wv9h5pU4Abi8Mew</a> 密码：pj30<br>43仁王  (43G)<br>链接：<a href="https://pan.baidu.com/s/1qH0UUAwh6vyDOapTxsd3UA" target="_blank" rel="noopener">https://pan.baidu.com/s/1qH0UUAwh6vyDOapTxsd3UA</a> 提取码：a1ho<br>41使命召唤1-13(色扮演） (415G)<br>链接：<a href="https://pan.baidu.com/s/1FdMgwTFYf1pONEPlwFFKBA" target="_blank" rel="noopener">https://pan.baidu.com/s/1FdMgwTFYf1pONEPlwFFKBA</a> 提取码：vbdh<br>42使命召唤14<br>链接：<a href="https://pan.baidu.com/s/1UvEB4zDx81laYdlBpNtUkg" target="_blank" rel="noopener">https://pan.baidu.com/s/1UvEB4zDx81laYdlBpNtUkg</a> 提取码：q31n<br>43真三国无双系列<br>链接：<a href="https://pan.baidu.com/s/1TnzFWiaUqgLclY8lmStHLg" target="_blank" rel="noopener">https://pan.baidu.com/s/1TnzFWiaUqgLclY8lmStHLg</a> 提取码：0v84 </p>
<h2 id="策略类"><a href="#策略类" class="headerlink" title="策略类"></a>策略类</h2><p>1地球帝国3 （4.4G ）<br>链接：<a href="https://pan.baidu.com/s/1kgewyozqcJpdys0eHBr0fA" target="_blank" rel="noopener">https://pan.baidu.com/s/1kgewyozqcJpdys0eHBr0fA</a> 密码：56zh<br>2魔兽争霸III：冰封王座（1.03G）（即时战略）<br>链接：<a href="https://pan.baidu.com/s/1ZIlWS4JHwvQLNBySPjP8DA" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZIlWS4JHwvQLNBySPjP8DA</a> 密码：x8i7<br>3富甲天下（3.50G）（策略战棋）<br>链接：<a href="https://pan.baidu.com/s/1l-KiPEo9Z8_OjD7LypnVrQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1l-KiPEo9Z8_OjD7LypnVrQ</a> 密码：vxeq<br>4文明6和文明5 （策略类游戏）（8.6G）<br>链接：<a href="https://pan.baidu.com/s/16CuzWh_ozr4T5fdWEgCMzQ" target="_blank" rel="noopener">https://pan.baidu.com/s/16CuzWh_ozr4T5fdWEgCMzQ</a> 密码：4b3n<br>5合金装备系列 （著名战术谍报系列游戏）（71G）<br>链接：<a href="https://pan.baidu.com/s/16wN-fMJGzRN9PvlXzsJXow" target="_blank" rel="noopener">https://pan.baidu.com/s/16wN-fMJGzRN9PvlXzsJXow</a> 密码：m253<br>6王国风云2  （1.66G）<br>链接：<a href="https://pan.baidu.com/s/1cb9FzULU5yj2Ah5O5HpdZg" target="_blank" rel="noopener">https://pan.baidu.com/s/1cb9FzULU5yj2Ah5O5HpdZg</a> 密码：4mj0<br>7红色警戒游戏 （策略类游戏）<br>链接：<a href="https://pan.baidu.com/s/1i_JZqzRw5cC3qxcRZMAO3A" target="_blank" rel="noopener">https://pan.baidu.com/s/1i_JZqzRw5cC3qxcRZMAO3A</a> 密码：qhwp<br>8英雄无敌系列，最新的是英雄无敌7（1.8版） （策略类游戏）（23G）<br>链接：<a href="https://pan.baidu.com/s/1gb_Ec8XL_Gd7XB3ozUyjYA" target="_blank" rel="noopener">https://pan.baidu.com/s/1gb_Ec8XL_Gd7XB3ozUyjYA</a> 密码：86up<br>9全面战争系列 （回合策略与即时战术相结合的大战略游戏）（60G)<br>链接：<a href="https://pan.baidu.com/s/1AUOAnHqLnb5NcXtev8KaVw" target="_blank" rel="noopener">https://pan.baidu.com/s/1AUOAnHqLnb5NcXtev8KaVw</a> 密码：pf5v<br>10三国志13威力加强PK版1.13（7.63G）（策略战棋类游戏）(16G)<br>链接：<a href="https://pan.baidu.com/s/1YRKyRr4aWt3YLbQEiNL8Tw" target="_blank" rel="noopener">https://pan.baidu.com/s/1YRKyRr4aWt3YLbQEiNL8Tw</a> 密码：9cn9<br>11帝国时代系列 （策略类游戏） (17G)<br>链接：<a href="https://pan.baidu.com/s/1HRp4fSxjFDjsPo1HcVOrgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1HRp4fSxjFDjsPo1HcVOrgg</a> 密码：2c44<br>12骑马与砍杀系列 （策略类游戏）（11.4G）<br>连接：<a href="https://pan.baidu.com/s/1AaMXcSqXSi-u-gx21bmutg" target="_blank" rel="noopener">https://pan.baidu.com/s/1AaMXcSqXSi-u-gx21bmutg</a> 密码：6jl7<br>13盟军敢死队系列加修改器  （7.2G）<br>链接：<a href="https://pan.baidu.com/s/1AR6E7SPSsdw9P9-7Ls1zXQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1AR6E7SPSsdw9P9-7Ls1zXQ</a> 密码：lpc3<br>14星际争霸1母巢之战（1.22G）<br>链接：<a href="https://pan.baidu.com/s/1JJdxt3Bk58IOU6P3_kuwyQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1JJdxt3Bk58IOU6P3_kuwyQ</a> 密码：h2sr<br>15星际2（单机版）整合了三个资源片 （台版繁体中文版）（25G）<br>链接：<a href="https://pan.baidu.com/s/1vfkQRmWhQ4upiqw59VfKXw" target="_blank" rel="noopener">https://pan.baidu.com/s/1vfkQRmWhQ4upiqw59VfKXw</a> 密码：7gmr<br>17钢铁之师：诺曼底44（20.52G）（策略类游戏）<br>链接：<a href="https://pan.baidu.com/s/1j_oEa2dp8jcue57oaQLRHA" target="_blank" rel="noopener">https://pan.baidu.com/s/1j_oEa2dp8jcue57oaQLRHA</a> 密码：mtnr<br>18天使帝国IV（1.44G）（策略战棋）<br>链接：<a href="https://pan.baidu.com/s/1w19hwB5qQm9SE9v6mLdMhQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1w19hwB5qQm9SE9v6mLdMhQ</a> 密码：44cp<br>19信长 战国立志传（2.68G）（策略战棋类）<br>链接：<a href="https://pan.baidu.com/s/14AwVFZ9J98Vv-6wp9S7wwQ" target="_blank" rel="noopener">https://pan.baidu.com/s/14AwVFZ9J98Vv-6wp9S7wwQ</a> 密码：4ch2<br>20登陆日v2（1.02G）（即时战略）<br>链接：<a href="https://pan.baidu.com/s/1vqWkw5FNG6fktIRvMAWhrg" target="_blank" rel="noopener">https://pan.baidu.com/s/1vqWkw5FNG6fktIRvMAWhrg</a> 密码：w2q8<br>21地牢守护者（1.93G）（ARPG和塔防的混合系列游戏）<br>链接：<a href="https://pan.baidu.com/s/106mjWUYwX_CJKp4iIkU3IA" target="_blank" rel="noopener">https://pan.baidu.com/s/106mjWUYwX_CJKp4iIkU3IA</a> 密码：4tdt<br>22第9连队（1.26G）（即时战略）<br>链接：<a href="https://pan.baidu.com/s/1PFW3tuS5XH_Qk7uWnqirLA" target="_blank" rel="noopener">https://pan.baidu.com/s/1PFW3tuS5XH_Qk7uWnqirLA</a> 密码：xuee<br>24工人物语7：王国之路（1.10G）（策略战棋）<br>链接：<a href="https://pan.baidu.com/s/11dC3KqCl1PUtcG0heGCpcQ" target="_blank" rel="noopener">https://pan.baidu.com/s/11dC3KqCl1PUtcG0heGCpcQ</a> 密码：s1of<br>25信长之野望13：天道PK（686.28M）（策略战棋）<br>链接：<a href="https://pan.baidu.com/s/19q1Vbew4d4AEXaqHBsSXVg" target="_blank" rel="noopener">https://pan.baidu.com/s/19q1Vbew4d4AEXaqHBsSXVg</a> 密码：57yl<br>26罗马2：全面战争 （14G）<br>链接：<a href="https://pan.baidu.com/s/1tltJ6fP4h5zyPexWcWy6RA" target="_blank" rel="noopener">https://pan.baidu.com/s/1tltJ6fP4h5zyPexWcWy6RA</a> 密码：1j0b<br>27大富翁系列 （3.4G）<br>链接：<a href="https://pan.baidu.com/s/1d9rfincZQGyvE5efzz2qtg" target="_blank" rel="noopener">https://pan.baidu.com/s/1d9rfincZQGyvE5efzz2qtg</a> 密码：hr5q<br>28三国志系列<br>链接：<a href="https://pan.baidu.com/s/1-rFpjzktsdgM6vb8A1W5_w" target="_blank" rel="noopener">https://pan.baidu.com/s/1-rFpjzktsdgM6vb8A1W5_w</a> 密码：y0hi<br>39三国霸业<br>链接：<a href="https://pan.baidu.com/s/1lw-sqvdclzMIJyVxP38YSw" target="_blank" rel="noopener">https://pan.baidu.com/s/1lw-sqvdclzMIJyVxP38YSw</a> 密码：d4zn</p>
<h2 id="赛车类"><a href="#赛车类" class="headerlink" title="赛车类"></a>赛车类</h2><p>1尘埃系列 （赛车系列） （78G）<br>链接：<a href="https://pan.baidu.com/s/1ikDDm_v3jbslreLJ25peDg" target="_blank" rel="noopener">https://pan.baidu.com/s/1ikDDm_v3jbslreLJ25peDg</a> 密码：f303<br>2极品飞车系列 （赛车类游戏）<br>链接：<a href="https://pan.baidu.com/s/1921bv2Q2-CtZ5A5rbvxfFQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1921bv2Q2-CtZ5A5rbvxfFQ</a> 提取码：ex2r<br>3赛车计划（16.58G）（赛车游戏）<br>链接：<a href="https://pan.baidu.com/s/1NllRLV45rBAFbS_TQi1ckg" target="_blank" rel="noopener">https://pan.baidu.com/s/1NllRLV45rBAFbS_TQi1ckg</a> 密码：quhe<br>4越野摩托2（13.11G）（赛车类游戏）<br>链接：<a href="https://pan.baidu.com/s/1OpLttNJn6FMDSemV0gvWiQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1OpLttNJn6FMDSemV0gvWiQ</a> 密码：r4hs<br>5世界摩托大奖赛15（18.08G）（赛车类游戏）<br>链接：<a href="https://pan.baidu.com/s/1ZpivEtn4qvhHwECnOGSBLQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1ZpivEtn4qvhHwECnOGSBLQ</a> 密码：4gu3<br>6FIA世界汽车拉力锦标赛（2.95G）（赛车类游戏）<br>链接：<a href="https://pan.baidu.com/s/1svaVRAAjjQ_bWXHzRI_BuA" target="_blank" rel="noopener">https://pan.baidu.com/s/1svaVRAAjjQ_bWXHzRI_BuA</a> 密码：uy3v<br>7特技摩托进化黄金版（2.58G）（赛车类）<br>链接：<a href="https://pan.baidu.com/s/1XUW9A25wGPlCRU3vWX0s_A" target="_blank" rel="noopener">https://pan.baidu.com/s/1XUW9A25wGPlCRU3vWX0s_A</a> 密码：loji</p>
<h2 id="体育类"><a href="#体育类" class="headerlink" title="体育类"></a>体育类</h2><p>1NBA系列 （体育类） （145G）<br>链接：<a href="https://pan.baidu.com/s/1-ksB7qrdrUB6u8BfVjN80Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1-ksB7qrdrUB6u8BfVjN80Q</a> 密码：m82a<br>2实况足球系列 （体育类） （57G）<br>链接：<a href="https://pan.baidu.com/s/1dTn6dE7VLyL8rn5vZemBTw" target="_blank" rel="noopener">https://pan.baidu.com/s/1dTn6dE7VLyL8rn5vZemBTw</a> 密码：lxei<br>3足球经理 （4G）<br>链接：<a href="https://pan.baidu.com/s/1IC_ut8Cwddvlz_KQIwCTDg" target="_blank" rel="noopener">https://pan.baidu.com/s/1IC_ut8Cwddvlz_KQIwCTDg</a> 密码：fgzl<br>4镜之边缘2：催化剂<br>链接：<a href="https://pan.baidu.com/s/1TXuUOmUAyYCfZ_4m3jdsCA" target="_blank" rel="noopener">https://pan.baidu.com/s/1TXuUOmUAyYCfZ_4m3jdsCA</a> 密码：1wto</p>
<h2 id="格斗对打类"><a href="#格斗对打类" class="headerlink" title="格斗对打类"></a>格斗对打类</h2><p>1死侍  （5.2G）<br>链接：<a href="https://pan.baidu.com/s/1L5_RBLYPnpRamglzJsiC1w" target="_blank" rel="noopener">https://pan.baidu.com/s/1L5_RBLYPnpRamglzJsiC1w</a> 密码：sw3d<br>3街头霸王系列 （格斗对打类）（39G)<br>链接：<a href="https://pan.baidu.com/s/1TmH8elyEFNqOhgZkl4RqIA" target="_blank" rel="noopener">https://pan.baidu.com/s/1TmH8elyEFNqOhgZkl4RqIA</a> 提取码：buro </p>
<p>4苍翼默示录：神观之梦（27.62G）（格斗游戏）<br>链接：<a href="https://pan.baidu.com/s/1gpxoFD2OTGU2cqj3mbkNsg" target="_blank" rel="noopener">https://pan.baidu.com/s/1gpxoFD2OTGU2cqj3mbkNsg</a> 密码：hf9z</p>
<p>6街头霸王5（6.76G）（格斗类）<br>链接：<a href="https://pan.baidu.com/s/1VgF07Fb0hV9gLVYMYWc1iQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1VgF07Fb0hV9gLVYMYWc1iQ</a> 密码：iflm</p>
<p>7风卷残云（269.7M）（动作格斗）<br>链接：<a href="https://pan.baidu.com/s/1lJz7uss1lrLFzPc0qBa7HA" target="_blank" rel="noopener">https://pan.baidu.com/s/1lJz7uss1lrLFzPc0qBa7HA</a> 密码：08mj</p>
<p>8火影忍者究极风暴合集<br>游戏安装米玛：380298 （重要！） (73G)<br>链接：<a href="https://pan.baidu.com/s/19GNablcXkQH8Pc6aM9JXtw" target="_blank" rel="noopener">https://pan.baidu.com/s/19GNablcXkQH8Pc6aM9JXtw</a> 密码：q5j4</p>
<h2 id="模拟类"><a href="#模拟类" class="headerlink" title="模拟类"></a>模拟类</h2><p>1模拟经营系列 56G<br>链接：<a href="https://pan.baidu.com/s/1Mh6R00bnOxQ5fMbrimn4xw" target="_blank" rel="noopener">https://pan.baidu.com/s/1Mh6R00bnOxQ5fMbrimn4xw</a> 密码：98an</p>
<p>2放逐之城 0.45G<br>链接：<a href="https://pan.baidu.com/s/1Pe1D8zrrpTOaRaWM_NTi0Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1Pe1D8zrrpTOaRaWM_NTi0Q</a> 密码：ut2q</p>
<p>3急难先锋2017（7.75G）不带MD5检验文件部建议下载<br>链接：<a href="https://pan.baidu.com/s/1RBz6nS0HIgaydL2jZGA0-w" target="_blank" rel="noopener">https://pan.baidu.com/s/1RBz6nS0HIgaydL2jZGA0-w</a> 密码：dl1q</p>
<p>4城市天际线（3.11G）（模拟类游戏）3.1G<br>链接：<a href="https://pan.baidu.com/s/1wltJlrrWPzA_UUsxvCgeUw" target="_blank" rel="noopener">https://pan.baidu.com/s/1wltJlrrWPzA_UUsxvCgeUw</a> 提取码：1cx6 </p>
<p>5流放者柯南（21.38G）（生存建造类游戏）</p>
<p>链接：<a href="https://pan.baidu.com/s/1E2VjRTqh_ZJg8QfkNkSC0A" target="_blank" rel="noopener">https://pan.baidu.com/s/1E2VjRTqh_ZJg8QfkNkSC0A</a> 密码：o7wy</p>
<p>6热血无赖（15.37G）（动作类沙盒）<br><a href="https://pan.baidu.com/s/1NgIcFeDqacJCmIxoUnzNJg" target="_blank" rel="noopener">https://pan.baidu.com/s/1NgIcFeDqacJCmIxoUnzNJg</a> 密码：sgza</p>
<p>7这是警察（1.16G）（模拟经营游戏）<br>链接：<a href="https://pan.baidu.com/s/1_ORUic5D22PZB38G4Kb9KA" target="_blank" rel="noopener">https://pan.baidu.com/s/1_ORUic5D22PZB38G4Kb9KA</a> 密码：5hpm</p>
<p>8方舟：生存进化（26.01G）（求生，建造类）<br>链接：<a href="https://pan.baidu.com/s/1c5PqEm4CofUWbZ8LBXdNrw" target="_blank" rel="noopener">https://pan.baidu.com/s/1c5PqEm4CofUWbZ8LBXdNrw</a> 密码：u5ln</p>
<p>9黑道圣徒2  （3.82G）<br>链接：<a href="https://pan.baidu.com/s/1wbm_warfjtzFUvkUSErYAg" target="_blank" rel="noopener">https://pan.baidu.com/s/1wbm_warfjtzFUvkUSErYAg</a> 密码：yspq</p>
<p>10黑道圣徒3 （5.58G）<br>链接：<a href="https://pan.baidu.com/s/14Cot9WkwBarcQ5uMAWT1jw" target="_blank" rel="noopener">https://pan.baidu.com/s/14Cot9WkwBarcQ5uMAWT1jw</a> 提取码：dioe </p>
<p>11黑道圣徒4 （5.74G）<br>链接：<a href="https://pan.baidu.com/s/14Cot9WkwBarcQ5uMAWT1jw" target="_blank" rel="noopener">https://pan.baidu.com/s/14Cot9WkwBarcQ5uMAWT1jw</a> 提取码：dioe </p>
<p>12恶霸鲁尼奖学金版（2.63G）（沙盒类游戏）<br>链接：<a href="https://pan.baidu.com/s/1WN0ROE4YmmsqaRzQN4LqyA" target="_blank" rel="noopener">https://pan.baidu.com/s/1WN0ROE4YmmsqaRzQN4LqyA</a> 密码：npb1</p>
<p>13海岛大亨4（3.12G）（模拟经营）<br>链接：<a href="https://pan.baidu.com/s/1Ra8jcKjIQa_vCa65qc4dyQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1Ra8jcKjIQa_vCa65qc4dyQ</a> 密码：fqlx</p>
<p>14天使计划（2.01G）（SLG模拟养成游戏）<br>链接：<a href="https://pan.baidu.com/s/1Ae1ajfFlikwneoNqsr-E1g" target="_blank" rel="noopener">https://pan.baidu.com/s/1Ae1ajfFlikwneoNqsr-E1g</a> 密码：bdb6</p>
<h2 id="解密类"><a href="#解密类" class="headerlink" title="解密类"></a>解密类</h2><p>1Inside（1.34G）（横版解密类游戏）<br>链接：<a href="https://pan.baidu.com/s/1Ei9JsR8nv0oHgzxCFa3ong" target="_blank" rel="noopener">https://pan.baidu.com/s/1Ei9JsR8nv0oHgzxCFa3ong</a> 密码：4bqu</p>
<p>3三位一体2 权力的神器（3.38G）（横版卷轴解密）<br>链接：<a href="https://pan.baidu.com/s/119mHBf17NpBnLM9nQMS2qA" target="_blank" rel="noopener">https://pan.baidu.com/s/119mHBf17NpBnLM9nQMS2qA</a> 密码：wtn3</p>
<p>4海底两万里（2.25G）（探索解密）<br>链接：<a href="https://pan.baidu.com/s/1Q3Hr6Jy_wDyQtW5NiOF60w" target="_blank" rel="noopener">https://pan.baidu.com/s/1Q3Hr6Jy_wDyQtW5NiOF60w</a> 密码：wkkd</p>
<p>十一·飞行游戏<br>手足兄弟连兵临绝境（4.05G）（飞行射击）<br>链接：<a href="https://pan.baidu.com/s/1S_CYMu7o0XLf3kK1gMngdQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1S_CYMu7o0XLf3kK1gMngdQ</a> 密码：ldsd</p>
<p>十二·卡牌类游戏<br>游戏王（770.90M）（卡牌类游戏）<br>链接：<a href="https://pan.baidu.com/s/1j8GS9XbMKxU5BS43yTjTTQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1j8GS9XbMKxU5BS43yTjTTQ</a> 密码：beow</p>
<p>十三·养成类战棋<br>侠客风云传（8.62G）<br>链接：<a href="https://pan.baidu.com/s/1cttz0ryN_3EF93QpKFuEgg" target="_blank" rel="noopener">https://pan.baidu.com/s/1cttz0ryN_3EF93QpKFuEgg</a> 提取码：i6c4 </p>
<p>十四·互动电影类<br>1水之旋律（1.20G）（AVG恋爱冒险游戏）<br>链接：<a href="https://pan.baidu.com/s/1EXKeQzUJa3Ey5cKrgxpVlQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1EXKeQzUJa3Ey5cKrgxpVlQ</a> 密码：uh7b</p>
<p>2水之旋律2绯之记忆（1.80G）（AVG恋爱冒险游戏）<br>链接：<a href="https://pan.baidu.com/s/1SsbsCMYT0XxbxvfwjlylAA" target="_blank" rel="noopener">https://pan.baidu.com/s/1SsbsCMYT0XxbxvfwjlylAA</a> 密码：7lql</p>
<h2 id="问题解决"><a href="#问题解决" class="headerlink" title="问题解决"></a>问题解决</h2><p>以下内容建议大家咨询看看，基本上可以解决99%反馈的问题哦。<br><strong>1、 如果碰到游戏玩不了，请看下这个文档：图文对照，简单易懂</strong><br><a href="https://pan.baidu.com/s/1eHgkn5k_hl6ENzsiQT2Clg" target="_blank" rel="noopener">https://pan.baidu.com/s/1eHgkn5k_hl6ENzsiQT2Clg</a><br>（这个是WORD文档，我写的非常详细。大家如果碰到问题请看一下）<br><strong>2、 游戏如何解压、安装</strong><br>我们的游戏主要是分安装版和解压版。<br>安装版，的意思就是游戏全下完后。有一个EXE文件，和很多BIN文件。安装版的游戏下完后，直接双击EXE文件。等游戏安装完就可以玩了。（大形游戏需要1个小时左右）<br>解压版，就全是RAR格式的文件。这种格式。也很简单。<br>直接右键解压任意一个文件。解压完之后也就可以正常玩了。<br>图文教程打开下面链接：<br><a href="https://pan.baidu.com/s/1pb2GChBpkMGuBv0H1fWlhA" target="_blank" rel="noopener">https://pan.baidu.com/s/1pb2GChBpkMGuBv0H1fWlhA</a> (图文教程，游戏下完后不懂怎么办的可以看一下）<br><strong>3、 解压安装遇到问题</strong><br>如果在“解压”或”安装“文件时，提示源文件缺失或损坏<br>（解压和安装报错，很大一部分原因是因为网络运营商原因导致数据丢包所致！！！）<br>（1）解压版本的游戏如果解压时报错，处理方法如下：<br>解压文件时先退出百度网盘客户端。<br>出现压缩包损坏的原因：由于百度网盘客户端会占用压缩包文件，解压软件（2345好压）会提示压缩包已损坏<br>另外一种原因解压报错就是因为下载时网络波动。或断断续续的下载。让文件在下载时损坏了。出现这种情况的话。<br>要把出错解压包删除掉。回收站也要清空。重新把出错的解压包下下来。再一起解压就行了。<br>MD5文件检查工具：<a href="https://pan.baidu.com/s/1rFS6E_57RroR5fW6eXdG7A（内有工具连接）" target="_blank" rel="noopener">https://pan.baidu.com/s/1rFS6E_57RroR5fW6eXdG7A（内有工具连接）</a><br>（2）如果是安装版的游戏。安装时出错。<br>因为安装时不会告诉你详细是哪个文件损坏了，所以就要用到这个文件检查工具。<br>就可以用这个工具检查哪一个BIN文件损坏了。我们的每个安装版的游戏下一般都放了MD5检查文件<br>MD5文件检查教程：<a href="https://pan.baidu.com/s/1vcJgOS6iCeGtbSUkM5dfUQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1vcJgOS6iCeGtbSUkM5dfUQ</a> （内有工具连接）<br>这个工具非常好用，用来检查解压版的也可以。非常强大的工具。<br>4、 其他游戏问题<br>我们的游戏都是自己电脑上下载过。然后亲测玩通后。再传到网盘上让大家下载的。不用怀疑游戏的完整性，<br>链接：<a href="https://pan.baidu.com/s/1Wg4_yuXgCBPJ1O5oyeR0Gg" target="_blank" rel="noopener">https://pan.baidu.com/s/1Wg4_yuXgCBPJ1O5oyeR0Gg</a><br>（这个是解决游戏少文件，和进不去闪退和修复插件的系统软件,我整合在一起，方便大家下载，不用一个一个百度去找了）<br>本店游戏只供学习交流使用,下载后24小时内请删除,多多支持正版,谢谢<br>补充部分</p>
<p>文件校验工具链接：<a href="https://pan.baidu.com/s/1wF4hr6idROEzfjaixKCBuA" target="_blank" rel="noopener">https://pan.baidu.com/s/1wF4hr6idROEzfjaixKCBuA</a></p>
<hr>
<p>源文件损坏解决办法<br>视频  <a href="http://pan.baidu.com/s/1hrUIiJM" target="_blank" rel="noopener">http://pan.baidu.com/s/1hrUIiJM</a></p>
<p>检测工具  <a href="http://pan.baidu.com/s/1ge9f1Cn" target="_blank" rel="noopener">http://pan.baidu.com/s/1ge9f1Cn</a></p>
<hr>
<p>提示缺少DLL 请下载这个修复<br>视频教你解决  <a href="http://pan.baidu.com/s/1nvC7qXV" target="_blank" rel="noopener">http://pan.baidu.com/s/1nvC7qXV</a></p>
<p>DX修复工具 链接：<a href="http://pan.baidu.com/s/1hrNq9fQ" target="_blank" rel="noopener">http://pan.baidu.com/s/1hrNq9fQ</a> 密码：xwa9</p>
<hr>
<p>游戏运行库合集<br>链接：<a href="http://pan.baidu.com/s/1dFhbQG5" target="_blank" rel="noopener">http://pan.baidu.com/s/1dFhbQG5</a> 密码：y05o</p>
<p>解压后 全部打钩安装</p>
<h2 id="以下游戏链接可以保存到-自己的百度网盘-永久不丢失"><a href="#以下游戏链接可以保存到-自己的百度网盘-永久不丢失" class="headerlink" title="以下游戏链接可以保存到 自己的百度网盘 永久不丢失"></a>以下游戏链接可以保存到 自己的百度网盘 永久不丢失</h2><p>猎人：野性的呼唤<br><a href="https://pan.baidu.com/s/18pSITX6Lj7ziUdAZIfmi9g" target="_blank" rel="noopener">https://pan.baidu.com/s/18pSITX6Lj7ziUdAZIfmi9g</a></p>
<p>极品飞车20<br>链接：<a href="https://pan.baidu.com/s/1921bv2Q2-CtZ5A5rbvxfFQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1921bv2Q2-CtZ5A5rbvxfFQ</a> 提取码：ex2r </p>
<p>刺客信条7<br>链接：<a href="https://pan.baidu.com/s/1FkyyZIhTM2eSYDHNIWbcCw" target="_blank" rel="noopener">https://pan.baidu.com/s/1FkyyZIhTM2eSYDHNIWbcCw</a> 提取码：3ztr</p>
<p>真三国无双8<br><a href="https://pan.baidu.com/s/1we1gY7JvcFyqDGTYGTrc7Q#list/path=%2F" target="_blank" rel="noopener">https://pan.baidu.com/s/1we1gY7JvcFyqDGTYGTrc7Q#list/path=%2F</a></p>
<p>辐射4<br><a href="https://pan.baidu.com/s/1hqxxXxq" target="_blank" rel="noopener">https://pan.baidu.com/s/1hqxxXxq</a></p>
<p>黑暗之魂3<br>链接：<a href="https://pan.baidu.com/s/1WPNzIC2f-a8FEzDaZ7Yh2g" target="_blank" rel="noopener">https://pan.baidu.com/s/1WPNzIC2f-a8FEzDaZ7Yh2g</a> 提取码：tjyp </p>
<p>NBA2k18<br>链接：<a href="http://pan.baidu.com/s/1jHPVB4i" target="_blank" rel="noopener">http://pan.baidu.com/s/1jHPVB4i</a> 密码：mzsv</p>
<p>刀剑神域虚空幻界<br>链接：<a href="http://pan.baidu.com/s/1nvKIqUX" target="_blank" rel="noopener">http://pan.baidu.com/s/1nvKIqUX</a> 密码：cnf3</p>
<p>上古卷轴5<br><a href="https://pan.baidu.com/s/1dFjwpdn" target="_blank" rel="noopener">https://pan.baidu.com/s/1dFjwpdn</a></p>
<p>泰坦陨落2<br>链接：<a href="http://pan.baidu.com/s/1hsH3eVa" target="_blank" rel="noopener">http://pan.baidu.com/s/1hsH3eVa</a> 密码：v4vq</p>
<p>神界：原罪2<br>链接：<a href="https://pan.baidu.com/s/1sV-Vq6WYNAPol_msK8pJHg" target="_blank" rel="noopener">https://pan.baidu.com/s/1sV-Vq6WYNAPol_msK8pJHg</a> 密码：rqo0</p>
<p>伊苏8<br>链接：<a href="https://pan.baidu.com/s/1t4itw6WCoFUtX-EMR_qjqw" target="_blank" rel="noopener">https://pan.baidu.com/s/1t4itw6WCoFUtX-EMR_qjqw</a> 密码：q92b</p>
<p>汽车修理工模拟2015<br>链接：<a href="https://pan.baidu.com/s/1RcE9PnLP1L_7UYWgxwam5Q" target="_blank" rel="noopener">https://pan.baidu.com/s/1RcE9PnLP1L_7UYWgxwam5Q</a> 密码：1pgx</p>
<p>恶灵附身2<br>链接：<a href="http://pan.baidu.com/s/1kVFvhMv" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVFvhMv</a> 密码：qr9z</p>
<p>FIFA18<br>链接：<a href="http://pan.baidu.com/s/1kVoqJen" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVoqJen</a> 密码：7qtd</p>
<p>实况足球2018<br>链接：<a href="http://pan.baidu.com/s/1slukiBz" target="_blank" rel="noopener">http://pan.baidu.com/s/1slukiBz</a> 密码：el19</p>
<p>战国无双真田丸<br>链接：<a href="http://pan.baidu.com/s/1hste4S0" target="_blank" rel="noopener">http://pan.baidu.com/s/1hste4S0</a> 密码：o600</p>
<p>狙击精英4<br>链接：<a href="http://pan.baidu.com/s/1mikOUnQ" target="_blank" rel="noopener">http://pan.baidu.com/s/1mikOUnQ</a> 密码：04ve</p>
<p>足球经理2017<br>链接: <a href="https://pan.baidu.com/s/1nvJotV7" target="_blank" rel="noopener">https://pan.baidu.com/s/1nvJotV7</a> 密码: 3ixw</p>
<p>三国志13<br>链接：<a href="http://pan.baidu.com/s/1dF6bM9N" target="_blank" rel="noopener">http://pan.baidu.com/s/1dF6bM9N</a> 密码：3klz</p>
<p>热血无赖：终极版<br>链接：<a href="http://pan.baidu.com/s/1hs2AHwC" target="_blank" rel="noopener">http://pan.baidu.com/s/1hs2AHwC</a> 密码：ce0k</p>
<p>杀手6</p>
<p>链接：<a href="https://pan.baidu.com/s/1JnxAzJg2rppSIqoiZW-Ztw" target="_blank" rel="noopener">https://pan.baidu.com/s/1JnxAzJg2rppSIqoiZW-Ztw</a> 密码：ghxh</p>
<p>巫师3<br>链接：<a href="https://pan.baidu.com/s/17WCT2_ik2DYw0AubPnZ_OA" target="_blank" rel="noopener">https://pan.baidu.com/s/17WCT2_ik2DYw0AubPnZ_OA</a> 密码：llo8</p>
<p>丧尸围城4   不支持W7<br>链接：<a href="http://pan.baidu.com/s/1mih1fQg" target="_blank" rel="noopener">http://pan.baidu.com/s/1mih1fQg</a> 密码：qd0l</p>
<p>光环战争终极版<br>链接：<a href="https://pan.baidu.com/s/1Z7sHM2mp6JdfrzyhtSFsIA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Z7sHM2mp6JdfrzyhtSFsIA</a> 提取码：d7rx </p>
<p>战锤40K战争黎明3<br>链接: <a href="http://pan.baidu.com/s/1hrNRpEO" target="_blank" rel="noopener">http://pan.baidu.com/s/1hrNRpEO</a> 密码: vj9q</p>
<p>小小噩梦<br>链接: <a href="http://pan.baidu.com/s/1slEvJe1" target="_blank" rel="noopener">http://pan.baidu.com/s/1slEvJe1</a> 密码: skc4</p>
<p>过山车之星<br>链接：<a href="http://pan.baidu.com/s/1qXIq1bQ" target="_blank" rel="noopener">http://pan.baidu.com/s/1qXIq1bQ</a> 密码：83ko</p>
<p>尘埃4<br>链接：<a href="http://pan.baidu.com/s/1hspGJLq" target="_blank" rel="noopener">http://pan.baidu.com/s/1hspGJLq</a> 密码：yzce</p>
<p>迸发<br>链接: <a href="http://pan.baidu.com/s/1dFAGu4L" target="_blank" rel="noopener">http://pan.baidu.com/s/1dFAGu4L</a> 密码: d3tm</p>
<p>羞辱2<br>链接：<a href="http://pan.baidu.com/s/1i4OApBv" target="_blank" rel="noopener">http://pan.baidu.com/s/1i4OApBv</a> 密码：pjfq</p>
<p>铁拳7<br>链接：<a href="https://pan.baidu.com/s/148WJ4pD2J1DHaiGDziRjIw" target="_blank" rel="noopener">https://pan.baidu.com/s/148WJ4pD2J1DHaiGDziRjIw</a>  密码：r7ak</p>
<p>银河历险记3<br>链接: <a href="https://pan.baidu.com/s/1boE6T23" target="_blank" rel="noopener">https://pan.baidu.com/s/1boE6T23</a> 密码: abde</p>
<p>质量效益仙女座<br>链接：<a href="http://pan.baidu.com/s/1dE8vhuT" target="_blank" rel="noopener">http://pan.baidu.com/s/1dE8vhuT</a> 密码：5u48</p>
<p>城市天际线<br>链接: <a href="https://pan.baidu.com/s/1pKXfrBH" target="_blank" rel="noopener">https://pan.baidu.com/s/1pKXfrBH</a> 密码: crcn</p>
<p>恶灵附身<br>链接:<a href="https://pan.baidu.com/s/1jIkM8QE" target="_blank" rel="noopener">https://pan.baidu.com/s/1jIkM8QE</a> 密码: kqtf</p>
<p>911接线员<br>链接：<a href="http://pan.baidu.com/s/1o7UykFC" target="_blank" rel="noopener">http://pan.baidu.com/s/1o7UykFC</a> 密码：cv16</p>
<p>银河历险记3<br>链接: <a href="https://pan.baidu.com/s/1boE6T23" target="_blank" rel="noopener">https://pan.baidu.com/s/1boE6T23</a> 密码: abde</p>
<p>狙击手幽灵战士3<br>链接：<a href="https://pan.baidu.com/s/1zLImvEBXmTU3DHCHarMs5g" target="_blank" rel="noopener">https://pan.baidu.com/s/1zLImvEBXmTU3DHCHarMs5g</a> 密码：szpr</p>
<p>掠食2017<br>链接: <a href="https://pan.baidu.com/s/1miMEIOK" target="_blank" rel="noopener">https://pan.baidu.com/s/1miMEIOK</a> 密码: f4gn</p>
<p>逃生2 (19.33G)<br>链接：<a href="https://pan.baidu.com/s/1fPPd-5PuT4mBYsxK_CKUKg" target="_blank" rel="noopener">https://pan.baidu.com/s/1fPPd-5PuT4mBYsxK_CKUKg</a> 提取码：f5gj </p>
<p>看门狗1-2<br>链接：<a href="http://pan.baidu.com/s/1gfb9DkB" target="_blank" rel="noopener">http://pan.baidu.com/s/1gfb9DkB</a> 密码：nyk1<br>链接：<a href="http://pan.baidu.com/s/1i4VvUfj" target="_blank" rel="noopener">http://pan.baidu.com/s/1i4VvUfj</a> 密码：t6p5</p>
<p>正当防卫3<br>链接：<a href="http://pan.baidu.com/s/1slr0ssl" target="_blank" rel="noopener">http://pan.baidu.com/s/1slr0ssl</a> 密码：fb8o</p>
<p>生化危机7<br>链接：<a href="https://pan.baidu.com/s/1uN_4AHP-Hg2SGXsUTGLvUg" target="_blank" rel="noopener">https://pan.baidu.com/s/1uN_4AHP-Hg2SGXsUTGLvUg</a> 提取码：67ju </p>
<p>茶杯头<br>链接：<a href="http://pan.baidu.com/s/1hsMmHlq" target="_blank" rel="noopener">http://pan.baidu.com/s/1hsMmHlq</a> 密码：ptqp</p>
<p>暗黑破坏神2毁灭之王<br>链接：<a href="http://pan.baidu.com/s/1geC558v" target="_blank" rel="noopener">http://pan.baidu.com/s/1geC558v</a> 密码：f9hj</p>
<p>帝国时代系列  (9.15G)<br>链接：<a href="https://pan.baidu.com/s/1DOy4VqyTJJM5ifq_sGGL0w" target="_blank" rel="noopener">https://pan.baidu.com/s/1DOy4VqyTJJM5ifq_sGGL0w</a> 提取码：vrc3 </p>
<p>旋转轮胎<br>链接：<a href="https://pan.baidu.com/s/1Eo9XarRmGBU5foVBJPgy6g" target="_blank" rel="noopener">https://pan.baidu.com/s/1Eo9XarRmGBU5foVBJPgy6g</a> 密码：xx8c</p>
<p>欧洲卡车模拟2<br>链接：<a href="http://pan.baidu.com/s/1jIveIQq" target="_blank" rel="noopener">http://pan.baidu.com/s/1jIveIQq</a> 密码：ck4y</p>
<p>英雄传说 闪之轨迹<br>链接：<a href="http://pan.baidu.com/s/1eRYPUeu" target="_blank" rel="noopener">http://pan.baidu.com/s/1eRYPUeu</a> 密码：yuxc</p>
<p>求生之路2<br>链接：<a href="https://pan.baidu.com/s/1s79q0FkvVq3tIjNW5EeELg" target="_blank" rel="noopener">https://pan.baidu.com/s/1s79q0FkvVq3tIjNW5EeELg</a> 密码：533w</p>
<p>神偷4<br>链接：<a href="http://pan.baidu.com/s/1eRX6GnC" target="_blank" rel="noopener">http://pan.baidu.com/s/1eRX6GnC</a> 密码：v4x5</p>
<p>收获日2<br>链接：<a href="http://pan.baidu.com/s/1nvMJvKX" target="_blank" rel="noopener">http://pan.baidu.com/s/1nvMJvKX</a> 密码：1lbv</p>
<p>猎天使魔女<br>链接：<a href="https://pan.baidu.com/s/147GI_UsOttJEYcisF81Kdw" target="_blank" rel="noopener">https://pan.baidu.com/s/147GI_UsOttJEYcisF81Kdw</a> 密码：ppzp</p>
<p>消逝的光芒<br>链接：<a href="http://pan.baidu.com/s/1mhRVYbQ" target="_blank" rel="noopener">http://pan.baidu.com/s/1mhRVYbQ</a> 密码：5ros</p>
<p>骑马与砍杀  (100.88G)<br>链接：<a href="https://pan.baidu.com/s/1j5fVFA8g-dYb9cUTTZygqw" target="_blank" rel="noopener">https://pan.baidu.com/s/1j5fVFA8g-dYb9cUTTZygqw</a> 提取码：yctm </p>
<p>CS1.6<br>链接： <a href="https://pan.baidu.com/s/1wsP-2Ye6HIx3Vfq18P3lSQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1wsP-2Ye6HIx3Vfq18P3lSQ</a>  密码：0rvv</p>
<hr>
<h2 id="游戏系列分类"><a href="#游戏系列分类" class="headerlink" title="游戏系列分类"></a>游戏系列分类</h2><p>英雄无敌系列<br>链接：<a href="http://pan.baidu.com/s/1pLsmrqF" target="_blank" rel="noopener">http://pan.baidu.com/s/1pLsmrqF</a> 密码：7rzw</p>
<p>黑道圣徒系列<br>链接：<a href="https://pan.baidu.com/s/1FuVMCclx2xDe4d4lZTVD8g" target="_blank" rel="noopener">https://pan.baidu.com/s/1FuVMCclx2xDe4d4lZTVD8g</a> 密码：j2kh</p>
<p>合金装备系列<br>链接：<a href="https://pan.baidu.com/s/12eQm3_KN5tJp5Z_73w5B5g" target="_blank" rel="noopener">https://pan.baidu.com/s/12eQm3_KN5tJp5Z_73w5B5g</a> 密码：m22z</p>
<p>孤岛惊魂系列<br>链接：<a href="http://pan.baidu.com/s/1o7LKuBS" target="_blank" rel="noopener">http://pan.baidu.com/s/1o7LKuBS</a> 密码：nv4k</p>
<p>文明系列<br>链接：<a href="http://pan.baidu.com/s/1mhNkpZE" target="_blank" rel="noopener">http://pan.baidu.com/s/1mhNkpZE</a> 密码：5mjr</p>
<p>其他热门游戏<br>链接：<a href="http://pan.baidu.com/s/1eRHkDfc" target="_blank" rel="noopener">http://pan.baidu.com/s/1eRHkDfc</a> 密码：203u</p>
<p>虐杀原形系列<br>链接：<a href="http://pan.baidu.com/s/1o8UibCA" target="_blank" rel="noopener">http://pan.baidu.com/s/1o8UibCA</a> 密码：oorl</p>
<p>质量效益系列<br>链接：<a href="http://pan.baidu.com/s/1kVh4Zv5" target="_blank" rel="noopener">http://pan.baidu.com/s/1kVh4Zv5</a> 密码：9k0n</p>
<p>NBA系列<br>链接：<a href="http://pan.baidu.com/s/1hsviwOc" target="_blank" rel="noopener">http://pan.baidu.com/s/1hsviwOc</a> 密码：r2av</p>
<p>孤岛危机系列<br>链接：<a href="http://pan.baidu.com/s/1eSdBAE2" target="_blank" rel="noopener">http://pan.baidu.com/s/1eSdBAE2</a> 密码：ehct</p>
<p>火影系列<br>链接：<a href="http://pan.baidu.com/s/1nvKGDs9" target="_blank" rel="noopener">http://pan.baidu.com/s/1nvKGDs9</a> 密码：kskq</p>
<p>龙珠系列<br>链接：<a href="http://pan.baidu.com/s/1c4ickm" target="_blank" rel="noopener">http://pan.baidu.com/s/1c4ickm</a> 密码：js43</p>
<p>海贼系列<br>链接：<a href="http://pan.baidu.com/s/1miBprUo" target="_blank" rel="noopener">http://pan.baidu.com/s/1miBprUo</a> 密码：qksq</p>
<p>波斯王子系列<br>链接：<a href="http://pan.baidu.com/s/1eRM6jAy" target="_blank" rel="noopener">http://pan.baidu.com/s/1eRM6jAy</a> 密码：hw6d</p>
<p>极品飞车系列<br>链接：<a href="https://pan.baidu.com/s/1921bv2Q2-CtZ5A5rbvxfFQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1921bv2Q2-CtZ5A5rbvxfFQ</a> 提取码：ex2r </p>
<p>街头霸王系列<br>链接：<a href="http://pan.baidu.com/s/1geSKmnL" target="_blank" rel="noopener">http://pan.baidu.com/s/1geSKmnL</a> 密码：gbna</p>
<p>模拟经营系列<br>链接：<a href="http://pan.baidu.com/s/1bprnp99" target="_blank" rel="noopener">http://pan.baidu.com/s/1bprnp99</a> 密码：kgg5</p>
<p>全面战争系列<br>链接：<a href="https://pan.baidu.com/s/151H88VwFQ9fqL_sjIJKBWA" target="_blank" rel="noopener">https://pan.baidu.com/s/151H88VwFQ9fqL_sjIJKBWA</a> 密码：4wws</p>
<p>实况足球 FIFA系列<br>链接：<a href="http://pan.baidu.com/s/1o7HaD6q" target="_blank" rel="noopener">http://pan.baidu.com/s/1o7HaD6q</a> 密码：5inj</p>
<p>三国群英传系列  (5.52G)<br>链接：<a href="https://pan.baidu.com/s/1tsK-gXD7bMFnneEQukAzIw" target="_blank" rel="noopener">https://pan.baidu.com/s/1tsK-gXD7bMFnneEQukAzIw</a> 提取码：drti </p>
<p>巫师系列<br>链接：<a href="http://pan.baidu.com/s/1cavTMI" target="_blank" rel="noopener">http://pan.baidu.com/s/1cavTMI</a> 密码：1uu1</p>
<p>仙剑系列<br>链接：<a href="http://pan.baidu.com/s/1eSiQQ22" target="_blank" rel="noopener">http://pan.baidu.com/s/1eSiQQ22</a> 密码：jc96</p>
<p>轩辕剑系列<br>链接：<a href="http://pan.baidu.com/s/1i5DUk9B" target="_blank" rel="noopener">http://pan.baidu.com/s/1i5DUk9B</a> 密码：g72t</p>
<p>真三国系列<br>链接：<a href="https://pan.baidu.com/s/1gBElFtJwpX34KFUnwM9kdA" target="_blank" rel="noopener">https://pan.baidu.com/s/1gBElFtJwpX34KFUnwM9kdA</a> 密码：zuhz</p>
<p>蜘蛛侠系列<br>链接：<a href="http://pan.baidu.com/s/1gfs2AHl" target="_blank" rel="noopener">http://pan.baidu.com/s/1gfs2AHl</a> 密码：r3p3</p>
<p>乐高系列<br>链接: <a href="https://pan.baidu.com/s/1qYS9OqK" target="_blank" rel="noopener">https://pan.baidu.com/s/1qYS9OqK</a> 密码: tq44</p>
<p>重返德军总部系列<br>链接：<a href="http://pan.baidu.com/s/1slTvYyD" target="_blank" rel="noopener">http://pan.baidu.com/s/1slTvYyD</a> 密码：yyhe</p>
<p>无主之地系列<br>链接：<a href="http://pan.baidu.com/s/1bpGrwOf" target="_blank" rel="noopener">http://pan.baidu.com/s/1bpGrwOf</a> 密码：m6qv</p>
<p>战神系列<br>链接：<a href="https://pan.baidu.com/s/1LpjhTgb9-SQ2ImWVVjtYjA" target="_blank" rel="noopener">https://pan.baidu.com/s/1LpjhTgb9-SQ2ImWVVjtYjA</a> 密码：kxcr</p>
<p>街机游戏<br>链接：<a href="https://pan.baidu.com/s/1DMO1GbwLuqxswOZRNnOqeA" target="_blank" rel="noopener">https://pan.baidu.com/s/1DMO1GbwLuqxswOZRNnOqeA</a> 密码：yuik</p>
<p>饥荒<br>链接：<a href="https://pan.baidu.com/s/1xx7ruAcYu7EoCSVs2cUrhg" target="_blank" rel="noopener">https://pan.baidu.com/s/1xx7ruAcYu7EoCSVs2cUrhg</a> 密码：4x8r</p>
<p>冰汽时代<br>链接：<a href="https://pan.baidu.com/s/1L3bg0NIV7C5FRIQ3KKLbfQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1L3bg0NIV7C5FRIQ3KKLbfQ</a> 密码：2bte</p>
<p>最终幻想15  游戏巨大 电脑配置差的 网速差的别下<br>链接：<a href="https://pan.baidu.com/s/1zl_cbOyZrRzDxGseekv1Dw" target="_blank" rel="noopener">https://pan.baidu.com/s/1zl_cbOyZrRzDxGseekv1Dw</a> 密码：1e5b</p>
<p>模拟人生4生儿育女<br>链接：<a href="https://pan.baidu.com/s/1_JdGquPJzT_KK9kQ7v4Ddg" target="_blank" rel="noopener">https://pan.baidu.com/s/1_JdGquPJzT_KK9kQ7v4Ddg</a> 密码：47oh</p>
<p>塞尔达传说：荒野之息  模拟器游戏比较繁琐需要耐心看教学<br>种子下载<br><a href="http://btfile.soft5566.com/y/The.Legend.Of.Zelda.Breath.Of.The.Wild.v1.3.0.DLC2.0.EUR.CEMU.v1.8.1b.CHS.3.1-ALI213.torrent" target="_blank" rel="noopener">http://btfile.soft5566.com/y/The.Legend.Of.Zelda.Breath.Of.The.Wild.v1.3.0.DLC2.0.EUR.CEMU.v1.8.1b.CHS.3.1-ALI213.torrent</a></p>
<p>古剑奇谭<br>链接：<a href="https://pan.baidu.com/s/1QYxa2dD4RCvBxjBzyrvAYw" target="_blank" rel="noopener">https://pan.baidu.com/s/1QYxa2dD4RCvBxjBzyrvAYw</a> 密码：iaez</p>
<p>模拟人生3<br>链接：<a href="https://pan.baidu.com/s/1S7UJIl3Dzkn0oO0u43Bxdw" target="_blank" rel="noopener">https://pan.baidu.com/s/1S7UJIl3Dzkn0oO0u43Bxdw</a> 密码：p01b</p>
<p>刀剑神域-虚空断章<br>链接：<a href="https://pan.baidu.com/s/1AuuFz_8ZV-gu2w165_ki9g" target="_blank" rel="noopener">https://pan.baidu.com/s/1AuuFz_8ZV-gu2w165_ki9g</a> 密码：h1kt</p>
<p>无双全明星<br>链接：<a href="https://pan.baidu.com/s/1miEBjPu" target="_blank" rel="noopener">https://pan.baidu.com/s/1miEBjPu</a> 密码：nig1</p>
<p>深海迷航<br>链接：<a href="https://pan.baidu.com/s/1CKI1Ni3c4igiWMqJKDN9_g" target="_blank" rel="noopener">https://pan.baidu.com/s/1CKI1Ni3c4igiWMqJKDN9_g</a> 密码：x2pq</p>
<p>幻想三国志5 虚拟机版 很多人玩不了<br>链接：<a href="https://pan.baidu.com/s/14RkQcdt0TYwavub106vLIg" target="_blank" rel="noopener">https://pan.baidu.com/s/14RkQcdt0TYwavub106vLIg</a> 密码：ye2n</p>
<p>钢铁雄心4<br>链接：<a href="https://pan.baidu.com/s/1nuKiZw9" target="_blank" rel="noopener">https://pan.baidu.com/s/1nuKiZw9</a> 密码：8un4</p>
<p>无人深空中文豪华版 整合v1.50档+全DLC<br><a href="https://pan.baidu.com/s/1kywb1IQKOyzGLJolgwzwsQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1kywb1IQKOyzGLJolgwzwsQ</a></p>
<p>《模拟人生4：猫与狗》<br>链接：<a href="https://pan.baidu.com/s/1jmnGN-gbV6TKngGU99QQTg" target="_blank" rel="noopener">https://pan.baidu.com/s/1jmnGN-gbV6TKngGU99QQTg</a> 密码：3ual</p>
<p>龙珠格斗z<br>链接：<a href="https://pan.baidu.com/s/1oiK5KAa59y8uPUzR2aKSVA" target="_blank" rel="noopener">https://pan.baidu.com/s/1oiK5KAa59y8uPUzR2aKSVA</a> 密码：t8cp</p>
<p>NBA2K19  游戏巨大   解压 都需要两个小时<br>链接：<a href="https://pan.baidu.com/s/1IWgdh5FEWjmXzFMq3OI3pg" target="_blank" rel="noopener">https://pan.baidu.com/s/1IWgdh5FEWjmXzFMq3OI3pg</a> 密码：3b84</p>
<p>遨游中国 C盘文档游戏 必须看教程 需要安装到C盘 比较繁琐<br>链接：<a href="https://pan.baidu.com/s/1vCWdQS1AiimSyPLSFeHwNg" target="_blank" rel="noopener">https://pan.baidu.com/s/1vCWdQS1AiimSyPLSFeHwNg</a> 密码：z9pn</p>
<p>火影忍者忍者先锋<br>链接：<a href="https://pan.baidu.com/s/1Y_4PDQ5xXwCXOy6KN13qDA" target="_blank" rel="noopener">https://pan.baidu.com/s/1Y_4PDQ5xXwCXOy6KN13qDA</a> 提取码：jde5</p>
<p>真人快打<br>链接：<a href="https://pan.baidu.com/s/1oYYBsYIkkWIchoELIbvRdw" target="_blank" rel="noopener">https://pan.baidu.com/s/1oYYBsYIkkWIchoELIbvRdw</a> 提取码：f0nc</p>
<p>进击巨人2<br>链接：<a href="https://pan.baidu.com/s/1ir_B7hp5lCNg_3y4iJClYQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1ir_B7hp5lCNg_3y4iJClYQ</a> 提取码：y8md</p>
<p>信长之野望15大志2018最新DLC<br>链接：<a href="https://pan.baidu.com/s/1qNga-OOcar-D5HC4CW2ctg" target="_blank" rel="noopener">https://pan.baidu.com/s/1qNga-OOcar-D5HC4CW2ctg</a> 提取码：jqzv</p>
<p>天国拯救<br>链接：<a href="https://pan.baidu.com/s/1lPJwU2Bj5coRZHQaiIgMQQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1lPJwU2Bj5coRZHQaiIgMQQ</a> 提取码：awoc</p>
<p>大蛇无双3  由此必须解压到英文目录里<br>链接：<a href="https://pan.baidu.com/s/1cafY4zAQc9jxU7YUL2r9EA" target="_blank" rel="noopener">https://pan.baidu.com/s/1cafY4zAQc9jxU7YUL2r9EA</a> 提取码：hbg0</p>
<p>全面战争：战锤2 豪华版含凡世帝国+古墓王等全DLCs<br>链接：<a href="https://pan.baidu.com/s/1_PNNMk_3PH_wOqkkUpTh2w" target="_blank" rel="noopener">https://pan.baidu.com/s/1_PNNMk_3PH_wOqkkUpTh2w</a> 提取码：2o2r</p>
<p>《全面战争：战锤1》 豪华版<br>链接：<a href="https://pan.baidu.com/s/16Cf938ZienOE7gykisPRqA" target="_blank" rel="noopener">https://pan.baidu.com/s/16Cf938ZienOE7gykisPRqA</a> 提取码：zq6n</p>
<p>刺客信条奥德赛<br>链接：<a href="https://pan.baidu.com/s/1aLgkgyAmPVy6HVq97UwRXQ" target="_blank" rel="noopener">https://pan.baidu.com/s/1aLgkgyAmPVy6HVq97UwRXQ</a> 提取码：iirq</p>
<p>泰坦之旅不朽王座<br>链接：<a href="https://pan.baidu.com/s/1tObvzCqueFL45l5zh1NbJg" target="_blank" rel="noopener">https://pan.baidu.com/s/1tObvzCqueFL45l5zh1NbJg</a> 提取码：2ccu</p>
<p>古墓丽影暗影<br>链接：<a href="https://pan.baidu.com/s/1xZtceMM0WvwcWPZ-1iW7RA" target="_blank" rel="noopener">https://pan.baidu.com/s/1xZtceMM0WvwcWPZ-1iW7RA</a> 提取码：lsjz</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <tags>
        <tag>Windows</tag>
        <tag>游戏</tag>
      </tags>
  </entry>
  <entry>
    <title>Mybatis+Spring+SpringMVC整合</title>
    <url>/blog/posts/5a9fc4fe/</url>
    <content><![CDATA[<center>Mybatis+Spring+SpringMVC实例</center>
<a id="more"></a>

<p><strong>本项目以登录为例。</strong></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>JDK:1.8    IDE:IDEA    数据库:MySQL5.7</p>
<h2 id="创建工程"><a href="#创建工程" class="headerlink" title="创建工程"></a>创建工程</h2><p>创建javaweb工程，目录结构如下：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/5a9fc4fe/bao1.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="导入jar包"><a href="#导入jar包" class="headerlink" title="导入jar包"></a>导入jar包</h2><p>1.Spring所需包，可在<a href="https://repo.spring.io/libs-release-local/org/springframework/spring/" target="_blank" rel="noopener">Spring官网下载</a>找到合适的版本，一把下载4.2以后的版本。</p>
<p>2.log4j所需jar包，下载<a href="http://logging.apache.org/log4j/2.x/download.html" target="_blank" rel="noopener">Apache Log4h</a>点击.zip文件下载，解压后即可使用</p>
<p>3.Mybatis所需jar包，<a href="http://www.mybatis.org/mybatis-3/" target="_blank" rel="noopener">Mybatis官网</a></p>
<p>4.数据库连接所需包，<a href="http://mvnrepository.com/artifact/mysql/mysql-connector-java" target="_blank" rel="noopener">点击下载</a></p>
<p>5.Junit测试所需包：<a href="https://search.maven.org/remotecontent?filepath=junit/junit/4.13-rc-2/junit-4.13-rc-2.jar" target="_blank" rel="noopener">点击下载</a></p>
<h2 id="创建实体类User"><a href="#创建实体类User" class="headerlink" title="创建实体类User"></a>创建实体类User</h2><figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">User</span> </span>{</span><br><span class="line">    <span class="keyword">private</span> Integer id;</span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line">    <span class="keyword">private</span> String password;</span><br><span class="line">    <span class="comment">//下面省略get与set方法，自行添加</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="创建Dao接口以及Mapper映射文件"><a href="#创建Dao接口以及Mapper映射文件" class="headerlink" title="创建Dao接口以及Mapper映射文件"></a>创建Dao接口以及Mapper映射文件</h2><p><strong>UserDao</strong></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">USerDao</span> </span>{</span><br><span class="line">	<span class="function">List&lt;User&gt; <span class="title">findUser</span><span class="params">(User user)</span> </span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><strong>UserMapper.xml</strong></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE mapper</span></span><br><span class="line"><span class="meta">        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="meta">        "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.org.dao.UserDao"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"findUser"</span> <span class="attr">parameterType</span>=<span class="string">"com.org.entity.User"</span> <span class="attr">resultType</span>=<span class="string">"com.org.entity.User"</span>&gt;</span></span><br><span class="line">        select * from user where name = #{name} and password = #{password}</span><br><span class="line">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="编写配置文件"><a href="#编写配置文件" class="headerlink" title="编写配置文件"></a>编写配置文件</h2><p>以下配置文件全部放在src目录下</p>
<p><strong>数据库配置文件jdbc.properties</strong></p>
<figure class="highlight properties"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">database.url</span>=<span class="string">jdbc:mysql://localhost:3306/mybatis?characterEncoding=utf8&amp;zeroDateTimeBehavior=convertToNull</span></span><br><span class="line"><span class="meta">database.username</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">database.password</span>=<span class="string">root</span></span><br><span class="line"><span class="meta">database.driverClassName</span>=<span class="string">com.mysql.jdbc.Driver</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>Mybatis配置文件mybatis-config.xml</strong></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">	  <span class="comment">&lt;!-- settings --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">settings</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打开延迟加载的开关 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"lazyLoadingEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 将积极加载改为消极加载（即按需加载） --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"aggressiveLazyLoading"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 打开全局缓存开关（二级缓存）默认值就是 true --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">setting</span> <span class="attr">name</span>=<span class="string">"cacheEnabled"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">settings</span>&gt;</span>	</span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>Spring配置文件spring-config.xml</strong></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">       "</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 加载配置文件 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:property-placeholder</span></span></span><br><span class="line"><span class="tag">		<span class="attr">location</span>=<span class="string">"classpath:jdbc.properties"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 配置数据源 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"dataSource"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DriverManagerDataSource"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"driverClassName"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">value</span>=<span class="string">"${database.driverClassName}"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"url"</span> <span class="attr">value</span>=<span class="string">"${database.url}"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">"${database.username}"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">"${database.password}"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- sqlSessionFactory --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"sqlSessionFactory"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"org.mybatis.spring.SqlSessionFactoryBean"</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 加载 MyBatis 的配置文件 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"configLocation"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">value</span>=<span class="string">"classpath:mybatis-config.xml"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"typeAliasesPackage"</span> <span class="attr">value</span>=<span class="string">"com.org.entity"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mapperLocations"</span> <span class="attr">value</span>=<span class="string">"classpath*:com/org/dao/*.xml"</span> /&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 数据源 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line">	 <span class="comment">&lt;!-- 扫描Dao包，加载接口映射类 --&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.mybatis.spring.mapper.MapperScannerConfigurer"</span>&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"basePackage"</span> <span class="attr">value</span>=<span class="string">"com.org.dao"</span> /&gt;</span></span><br><span class="line"> 	<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"sqlSessionFactoryBeanName"</span> <span class="attr">value</span>=<span class="string">"sqlSessionFactory"</span> /&gt;</span> 	</span><br><span class="line"> <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	</span><br><span class="line"><span class="tag">&lt;<span class="name">context:component-scan</span> <span class="attr">base-package</span>=<span class="string">"com.org"</span> /&gt;</span> <span class="comment">&lt;!-- 注解扫描 --&gt;</span></span><br><span class="line">    </span><br><span class="line">	<span class="comment">&lt;!-- 定义事务管理器 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span>=<span class="string">"transactionManager"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"org.springframework.jdbc.datasource.DataSourceTransactionManager"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"dataSource"</span> <span class="attr">ref</span>=<span class="string">"dataSource"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 定义事务策略 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">tx:advice</span> <span class="attr">id</span>=<span class="string">"txAdvice"</span></span></span><br><span class="line"><span class="tag">		<span class="attr">transaction-manager</span>=<span class="string">"transactionManager"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--所有以query开头的方法都是只读的 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"query*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"get*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"find*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"select*"</span> <span class="attr">read-only</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">			<span class="comment">&lt;!--其他方法使用默认事务策略 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">tx:method</span> <span class="attr">name</span>=<span class="string">"*"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">tx:attributes</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">tx:advice</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>SpringMVC配置文件spring-mvc.xml</strong></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">         http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">         http://www.springframework.org/schema/mvc/spring-mvc.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">       http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">		http://www.springframework.org/schema/context/spring-context.xsd"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="tag">&lt;<span class="name">context:component-scan</span></span></span><br><span class="line"><span class="tag">		<span class="attr">base-package</span>=<span class="string">"com.org.controller"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">bean</span></span></span><br><span class="line"><span class="tag">		<span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.view.InternalResourceViewResolver"</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"prefix"</span> <span class="attr">value</span>=<span class="string">"/"</span> /&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suffix"</span> <span class="attr">value</span>=<span class="string">".jsp"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:cors</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!--实现跨域的配置代码 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">mvc:mapping</span> <span class="attr">path</span>=<span class="string">"/**"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">allowed-origins</span>=<span class="string">"*"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">allowed-methods</span>=<span class="string">"POST,GET, OPTIONS,DELETE,PUT"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">allowed-headers</span>=<span class="string">"Content-Type,ContentType,Access-Control-Allow-Headers, Authorization, X-Requested-With"</span></span></span><br><span class="line"><span class="tag">			<span class="attr">allow-credentials</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">mvc:cors</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">mvc:annotation-driven</span>&gt;</span><span class="tag">&lt;/<span class="name">mvc:annotation-driven</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>web.xml</strong></p>
<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">web-app</span> <span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xmlns</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">xsi:schemaLocation</span>=<span class="string">"http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"</span></span></span><br><span class="line"><span class="tag">	<span class="attr">id</span>=<span class="string">"WebApp_ID"</span> <span class="attr">version</span>=<span class="string">"3.1"</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">display-name</span>&gt;</span>Test<span class="tag">&lt;/<span class="name">display-name</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>login.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>index.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.html<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.htm<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">welcome-file</span>&gt;</span>default.jsp<span class="tag">&lt;/<span class="name">welcome-file</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">welcome-file-list</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 加载spring相关配置 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">context-param</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath:spring-config.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">context-param</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!--Spring的ApplicationContext 载入 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">listener</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">listener-class</span>&gt;</span>org.springframework.web.context.ContextLoaderListener<span class="tag">&lt;/<span class="name">listener-class</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">listener</span>&gt;</span></span><br><span class="line"></span><br><span class="line">	<span class="comment">&lt;!-- 编码过滤器，以UTF8编码 --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-class</span>&gt;</span>org.springframework.web.filter.CharacterEncodingFilter<span class="tag">&lt;/<span class="name">filter-class</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>encoding<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>UTF8<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">filter-name</span>&gt;</span>encodingFilter<span class="tag">&lt;/<span class="name">filter-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>/*<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">filter-mapping</span>&gt;</span></span><br><span class="line">	<span class="comment">&lt;!-- 配置SpringMVC --&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-class</span>&gt;</span>org.springframework.web.servlet.DispatcherServlet<span class="tag">&lt;/<span class="name">servlet-class</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">init-param</span>&gt;</span></span><br><span class="line">			<span class="comment">&lt;!-- 指定加载外部的spring-mvc配置文件 --&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-name</span>&gt;</span>contextConfigLocation<span class="tag">&lt;/<span class="name">param-name</span>&gt;</span></span><br><span class="line">			<span class="tag">&lt;<span class="name">param-value</span>&gt;</span>classpath*:spring-mvc.xml<span class="tag">&lt;/<span class="name">param-value</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;/<span class="name">init-param</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 这个可以不配，可以省略 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">load-on-startup</span>&gt;</span>1<span class="tag">&lt;/<span class="name">load-on-startup</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">servlet</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">servlet-name</span>&gt;</span>springmvc<span class="tag">&lt;/<span class="name">servlet-name</span>&gt;</span></span><br><span class="line">		<span class="comment">&lt;!-- 拦截所有.do结尾的请求，除了jsp。&nbsp; /xx.html js css 会 --&gt;</span></span><br><span class="line">		<span class="tag">&lt;<span class="name">url-pattern</span>&gt;</span>*.do<span class="tag">&lt;/<span class="name">url-pattern</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;/<span class="name">servlet-mapping</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">web-app</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure>

<p><strong>日志信息配置文件log4j.properties</strong></p>
<figure class="highlight properties"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">log4j.rootLogger</span>=<span class="string">DEBUG, A1</span></span><br><span class="line"><span class="meta">log4j.appender.A1</span>=<span class="string">org.apache.log4j.ConsoleAppender</span></span><br><span class="line"><span class="meta">log4j.appender.A1.layout</span>=<span class="string">org.apache.log4j.PatternLayout</span></span><br><span class="line"><span class="meta">log4j.appender.A1.layout.ConversionPattern</span>=<span class="string">%-4r [%t] %-5p %c %x - %m%n</span></span><br></pre></td></tr></tbody></table></figure>

<h2 id="创建Service层接口以及实现类"><a href="#创建Service层接口以及实现类" class="headerlink" title="创建Service层接口以及实现类"></a>创建Service层接口以及实现类</h2><p><strong>UserService</strong></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    <span class="function">List&lt;User&gt; <span class="title">findUser</span><span class="params">(User user)</span></span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<p><strong>UseServiceImpl</strong></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@Service</span></span><br><span class="line"><span class="meta">@Transactional</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserServiceImpl</span> <span class="keyword">implements</span> <span class="title">UserService</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserDao userDao;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;User&gt; <span class="title">findUser</span><span class="params">(User user)</span> </span>{</span><br><span class="line">        <span class="keyword">return</span> userDao.findUser(user);</span><br><span class="line">    }</span><br><span class="line"></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="创建Controller层"><a href="#创建Controller层" class="headerlink" title="创建Controller层"></a>创建Controller层</h2><p><strong>UserController</strong></p>
<figure class="highlight java"><table><tbody><tr><td class="code"><pre><span class="line"><span class="meta">@Controller</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">UserController</span> </span>{</span><br><span class="line">    <span class="meta">@Autowired</span></span><br><span class="line">    <span class="keyword">private</span> UserService userService;</span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"userLogin"</span>)</span><br><span class="line">    <span class="function"><span class="keyword">public</span> ModelAndView <span class="title">userLogin</span><span class="params">(User user)</span></span>{</span><br><span class="line">        ModelAndView view = <span class="keyword">new</span> ModelAndView();</span><br><span class="line">        List&lt;User&gt; userList = userService.findUser(user);</span><br><span class="line">        <span class="keyword">if</span>(userList.size()!=<span class="number">0</span>){</span><br><span class="line">            view.addObject(<span class="string">"msg"</span>,userList.get(<span class="number">0</span>));</span><br><span class="line">        }<span class="keyword">else</span>{</span><br><span class="line">            view.addObject(<span class="string">"msg"</span>,<span class="string">"密码或用户名错误"</span>);</span><br><span class="line">        }</span><br><span class="line">        view.setViewName(<span class="string">"index"</span>);</span><br><span class="line">        <span class="keyword">return</span>  view;</span><br><span class="line">    }</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure>

<h2 id="编写前台页面"><a href="#编写前台页面" class="headerlink" title="编写前台页面"></a>编写前台页面</h2><p>因为测试用的，有点丑不要介意</p>
<figure class="highlight"><table><tbody><tr><td class="code"><pre><span class="line">&lt;%@ page contentType=<span class="string">"text/html;charset=UTF-8"</span> language=<span class="string">"java"</span> %&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;Login&lt;/title&gt;</span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">  &lt;form name=<span class="string">"form"</span> action=<span class="string">"userLogin.do"</span> method=<span class="string">"post"</span>&gt;</span><br><span class="line">    name:&lt;input name=<span class="string">"name"</span>  /&gt;&lt;br/&gt;</span><br><span class="line">    password&lt;input name=<span class="string">"password"</span>  /&gt;&lt;br/&gt;</span><br><span class="line">    &lt;input type=<span class="string">"submit"</span>&gt;</span><br><span class="line">  &lt;/form&gt;</span><br><span class="line">  ${msg}</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></tbody></table></figure>

<p><strong>登录成功</strong></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/5a9fc4fe/success.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>*<em>登录失败 *</em></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/5a9fc4fe/error.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><p>1.访问controller层时一定要加上<code>.do</code></p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>学习</category>
        <category>SSM</category>
      </categories>
      <tags>
        <tag>学习</tag>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>adobe软件 PS、PR。。</title>
    <url>/blog/posts/1e860bba/</url>
    <content><![CDATA[<center>来学习吧</center>
<a id="more"></a>

<p>先直接上连接，拿了连接不要跑啊！<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f4a2.png?v8">💢</span>破解才是最重要的点 <span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f609.png?v8">😉</span></p>
<p>链接: <a href="https://pan.baidu.com/s/1T_lABCKmUtXnGva3FBq86w" target="_blank" rel="noopener">https://pan.baidu.com/s/1T_lABCKmUtXnGva3FBq86w</a> 提取码: ehw7  </p>
<p>我这里收集了adobe的一些软件，目前也正在使用。下载安装即可</p>
<p>目前收录的软件有 DWcc2017、Flash CC 2015、PS2015 、 AE CC 2015、PR CC 2015</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/adobe.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p><strong><span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/2757.png?v8">❗</span>注意事项：</strong></p>
<ol>
<li>安装的时候记得断开网络，否则要验证帐号,不过你要是有帐号就登录也没事</li>
<li>默认安装路径在C盘。请保证C盘有足够空间。想更改请看这篇文章<a href="https://cloud.tencent.com/developer/news/423633" target="_blank" rel="noopener">https://cloud.tencent.com/developer/news/423633</a></li>
<li>默认安装路径为：C:\Program Files (x86)\Adobe。上面那个方法是一键更改的，还可以等安装完成后进入该路径直接复制文件夹到你想要的路径，不过之后要记得改快捷方式的属性。</li>
</ol>
<h2 id="一、图片"><a href="#一、图片" class="headerlink" title="一、图片"></a>一、图片</h2><h4 id="1、PS"><a href="#1、PS" class="headerlink" title="1、PS"></a>1、PS</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/PS.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h4 id="2、PR"><a href="#2、PR" class="headerlink" title="2、PR"></a>2、PR</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/PR.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h4 id="3、DW"><a href="#3、DW" class="headerlink" title="3、DW"></a>3、DW</h4><figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/DW.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="二、破解"><a href="#二、破解" class="headerlink" title="二、破解"></a>二、破解</h2><p>好了，重点来了<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f62c.png?v8">😬</span>用过的都是知道的，这几个软件最不爽的就是要钱。学校里面用的都是破解版呢。</p>
<p>就以破解PS2015来做个教程把</p>
<p>步骤如下：</p>
<p>下载好2017破解补丁那个文件夹。名字叫做：PS cc 2017 win版破解补丁.rar</p>
<p>然后解压打开就是这个界面：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/pojie1.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>没错。全英文的。中文我也没有“<span class="github-emoji" style="color: transparent;background:no-repeat url(https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8) center/contain" data-src="https://github.githubassets.com/images/icons/emoji/unicode/1f60a.png?v8">😊</span>。本来想用有道词典翻译下，看看还是算了吧。还有，电脑声音注意不要开最大。</p>
<p>首先，第一个下拉框：</p>
<p>点击一下出来一堆：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/pojie2.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>选择好自己要破解的软件的全名称，比如我这里要破解PS2015，就选择<strong>Adobe Photoshop CC 2015</strong></p>
<p>下面的东西都会自动生成，直接点击install</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/1e860bba/pojie3.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>出来一个文件选择框。要选择的文件就在你<strong>安装路径里面的amtlib.dll</strong>,点击<strong>打开</strong>。然后点击<strong>Advanced</strong>.一路ok下去就可以成功破解了。</p>
<p>好了，这次教程就到这里了，有什么问题可以在下面评论。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>Git教程</title>
    <url>/blog/posts/518e617c/</url>
    <content><![CDATA[<center>Git教程</center>
<a id="more"></a>

<h2 id="Git简介"><a href="#Git简介" class="headerlink" title="Git简介"></a>Git简介</h2><blockquote>
<p>Git(读音为/gɪt/。)是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1] Git 是 [Linus Torvalds](<a href="https://baike.baidu.com/item/Linus" target="_blank" rel="noopener">https://baike.baidu.com/item/Linus</a> Torvalds/9336769) 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</p>
</blockquote>
<p>以上来自于百度百科</p>
<p>看了一个大佬的介绍，总结下来：</p>
<p>当你和同事同时做一个文档的时候，Git不但能自动帮我记录每次文件的改动，还可以让同事协作编辑，这样就不用自己管理一堆类似的文件了，也不需要把文件传来传去。如果想查看某次改动，只需要在软件里瞄一眼就可以。</p>
<h2 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h2><p>在Windows上安装Git，可以从Git<a href="https://git-scm.com/downloads" target="_blank" rel="noopener">官网下载</a>，一路默认下去就好了，安装完成后按键盘的<strong>win+R</strong>,输入<strong>cmd</strong>，弹出命令符见面再输入<strong>git</strong>，出现如下命令则安装成功：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/cmd.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>之后在命令行输入：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git config --global user.name "Your Name"</span><br><span class="line">$ git config --global user.email "email@example.com"</span><br></pre></td></tr></tbody></table></figure>

<p>这里user.name和user.email可自定义，到这里就安装完成了。</p>
<h2 id="创建版本库"><a href="#创建版本库" class="headerlink" title="创建版本库"></a>创建版本库</h2><p>什么是版本库？版本库又名仓库，英文repository(/rɪˈpɑːzətɔːri/)。可以简单的理解成一个目录。</p>
<p>开始创建版本库。</p>
<p>1.创建一个空文件夹jar，进入jar文件夹（注意：座位了避免出现问题，文件夹及路径不包含中文）</p>
<p>2.鼠标右键，单击<strong>Git Bash here</strong>，出现如下界面：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/gitBash.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>输入命令初始化仓库：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></tbody></table></figure>

<p>这个时候jar文件夹就是一个仓库了，并且文件夹下面会多出一个.git文件夹</p>
<h2 id="跟踪新文件"><a href="#跟踪新文件" class="headerlink" title="跟踪新文件"></a>跟踪新文件</h2><p>首先创建一个文本文件readme.txt。内容如下</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">This is a text file.</span><br></pre></td></tr></tbody></table></figure>

<p>一定要在jar这个文件夹目录下，否则会找不到。然后开始放入git仓库</p>
<p>第一步，把文件添加到仓库：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git add readme.txt</span><br></pre></td></tr></tbody></table></figure>

<p>执行完上面命令后没有任何显示就说明添加成功，否则百度去吧。我也不知道。</p>
<p>第二部，提交文件</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git commit -m 'add text file'</span><br></pre></td></tr></tbody></table></figure>

<p>-m后面是本次提交的说明，可以输入任何内容，这样就可以从历史记录中查看</p>
<p>执行完命令后会告诉你，<code>1 file changed</code> 一个文件被改动；<code>1 insertions</code>：插入了一行内容</p>
<p>为什么Git添加文件需要<code>add</code>，<code>commit</code>一共两步呢？因为<code>commit</code>可以一次提交很多文件，所以你可以多次<code>add</code>不同的文件，比如：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git add file1.txt</span><br><span class="line">$ git add file2.txt file3.txt</span><br><span class="line">$ git commit -m "add <span class="number">3</span> files."</span><br></pre></td></tr></tbody></table></figure>

<p>跟踪改目录下所有文件可以使用：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git add .</span><br></pre></td></tr></tbody></table></figure>

<h2 id="查看状态"><a href="#查看状态" class="headerlink" title="查看状态"></a>查看状态</h2><p>如果你修改了文件，但是你忘了你修改的是什么东西了。这个时候可以使用这个语句查看修改状态。</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git status</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight xml"><table><tbody><tr><td class="code"><pre><span class="line">On branch master</span><br><span class="line">nothing to commit, working directory clean</span><br></pre></td></tr></tbody></table></figure>

<p>如果显示的是上面的语句，那么说明工作目录非常干净，没有被修改过。</p>
<p>如果像这样：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/gitStudy.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>说明git之前的提交中没有这样的文件，就要使用<code>git add &lt;file&gt;</code>来跟踪文件</p>
<h2 id="查看历史提交"><a href="#查看历史提交" class="headerlink" title="查看历史提交"></a>查看历史提交</h2><p>默认不是用任何参数的话，<code>git log</code>会按提交时间列出所有的更新</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git log</span><br></pre></td></tr></tbody></table></figure>

<p>git log 有许多选项可以帮助你搜寻你所要找的提交， 接下来我们介绍些最常用的。</p>
<p>个常用的选项是 <code>-p</code>，用来显示每次提交的内容差异。 你也可以加上 <code>-2</code> 来仅显示最近两次提交：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git log -p</span><br><span class="line">git log -2</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git log --stat</span><br></pre></td></tr></tbody></table></figure>

<p><code>--stat</code>选项查看每次提交的简略统计信息</p>
<p>最有意思的还是format，可以定制要显示的记录格式。当你记录变了时，只要你指定了及时，输出的内容就不会随着Git的更新而改变：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git log --pretty=<span class="built_in">format</span>:"%h - %an, %ar : %s"</span><br><span class="line"><span class="number">9</span>d8d940 - <span class="number">1419908068</span>, <span class="number">30</span> minutes ago : <span class="number">1</span></span><br><span class="line"><span class="number">8</span>fc3932 - <span class="number">1419908068</span>, <span class="number">4</span> days ago : 博客源文件</span><br><span class="line">d347c60 - <span class="number">1419908068</span>, <span class="number">2</span> weeks ago : <span class="built_in">append</span> GPL</span><br><span class="line">a137c1d - <span class="number">1419908068</span>, <span class="number">2</span> weeks ago : add distrubute</span><br><span class="line"><span class="number">7908392</span> - <span class="number">1419908068</span>, <span class="number">2</span> weeks ago : wrote a readme file</span><br></pre></td></tr></tbody></table></figure>

<p>git log – pretty=format 常用的选项 列出了常用的格式占位符写法及其代表的意义。</p>
<table>
<thead>
<tr>
<th>选项</th>
<th>说明</th>
</tr>
</thead>
<tbody><tr>
<td><code>%H</code></td>
<td>提交对象(commit)的完整哈希字串</td>
</tr>
<tr>
<td><code>%</code>T</td>
<td>树对象的完整哈希</td>
</tr>
<tr>
<td><code>%P</code></td>
<td>父对象（parent）的完整哈希</td>
</tr>
<tr>
<td><code>%an</code></td>
<td>作者</td>
</tr>
<tr>
<td><code>%ae</code></td>
<td>电子邮件</td>
</tr>
<tr>
<td><code>%ad</code></td>
<td>修订日期，可以定制格式</td>
</tr>
<tr>
<td><code>%ar</code></td>
<td>修订日期</td>
</tr>
<tr>
<td><code>%cn</code></td>
<td>提交者名字</td>
</tr>
<tr>
<td><code>%ce</code></td>
<td>提交者邮件</td>
</tr>
<tr>
<td><code>%cd</code></td>
<td>提交日期</td>
</tr>
<tr>
<td><code>%cr</code></td>
<td></td>
</tr>
<tr>
<td><code>%s</code></td>
<td>提交说明</td>
</tr>
</tbody></table>
<h2 id="版本回退"><a href="#版本回退" class="headerlink" title="版本回退"></a>版本回退</h2><p>现在已经会上传文件到仓库了，那么在来一遍。修改readme.txt文件如下：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">This is a text file.</span><br><span class="line">Git is free software.</span><br></pre></td></tr></tbody></table></figure>

<p>然后提交：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git add readme.txt</span><br><span class="line">$ git commit -m "first update readme.txt"</span><br><span class="line">[master <span class="number">778</span>d2dd] first update readme.txt</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">2</span> insertions(+), <span class="number">1</span> deletion(-)</span><br></pre></td></tr></tbody></table></figure>

<p>这个时候你发现你更改的内容错了，想回到上个版本或者上上上个版本。那么你怎么还记得内容呢。但是Git就会记得。使用<code>git log</code>查看：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/gitlog.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>如果你文件更改次数多，输出的信息非常多，那么可以输入<code>git log --pretty=oneline</code>：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/gitlog2.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>友情提示，这里看到的似<code>778d2ddf...</code>的叽里呱啦的是<code>commit id</code>（版本号）</p>
<p>好了，现在我们启动时光穿梭机，准备把<code>readme.txt</code>回退到上一个版本，也就是<code>add distributed</code>的那个版本，怎么做呢？</p>
<p>首先，Git必须知道当前版本是哪个版本，在Git中，用<code>HEAD</code>表示当前版本，也就是最新的提交<code>778d2ddf...</code>（注意我的提交ID和你的肯定不一样），上一个版本就是<code>HEAD^</code>，上上一个版本就是<code>HEAD^^</code>，当然往上100个版本写100个<code>^</code>比较容易数不过来，所以写成<code>HEAD~100</code>。</p>
<p>现在，我们要把当前版本<code>first update readme.txt</code>回退到上一个版本<code>add text file</code>，就可以使用<code>git reset</code>命令：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git reset --hard HEAD^</span><br></pre></td></tr></tbody></table></figure>

<p>先不要关闭命令窗口，在窗口输入<code>cat readme.txt</code>看看内容是不是上个版本的。</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ cat readme.txt</span><br><span class="line">This is a text file.</span><br></pre></td></tr></tbody></table></figure>

<p>果然回到了上个版本，不过如果又想回到最新版本，那么问题来了。先输入<code>git log</code>查看一下状态:</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git log</span><br><span class="line">commit <span class="number">7</span>b0fa712b2de80d7978dab94643c2cb59aca7c38 (HEAD -&gt; master)</span><br><span class="line"><span class="function">Author: 1419908068 &lt;1419908068@<span class="title">qq.com</span>&gt;</span></span><br><span class="line"><span class="function"><span class="title">Date</span>:   <span class="title">Mon</span> <span class="title">Dec</span> 2 16:29:25 2019 +0800</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">    <span class="title">add</span> <span class="title">text</span> <span class="title">file</span></span></span><br></pre></td></tr></tbody></table></figure>

<p>这里已经没有最新的那个版本的，那么你需要找到之前看的log，找到commit id。输入如下命令可以回到最新版本：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line"> 778d2ddf</span><br><span class="line">HEAD is now at 778d2dd first update readme.txt</span><br></pre></td></tr></tbody></table></figure>

<p>版本号可以不用写全，前几位就好了。再查看一下内容</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ cat readme.txt</span><br><span class="line">This is a text file.</span><br><span class="line">Git is free software.</span><br></pre></td></tr></tbody></table></figure>

<p>没有commit id怎么办，git提供了后悔药，<code>git reflog</code>命令查看你每次的命令</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git reflog</span><br></pre></td></tr></tbody></table></figure>

<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">778d2dd (HEAD -&gt; master) HEAD@{0}: reset: moving to 778d2ddf</span><br><span class="line">7b0fa71 HEAD@{1}: reset: moving to HEAD^</span><br><span class="line">778d2dd (HEAD -&gt; master) HEAD@{2}: commit: first update readme.txt</span><br><span class="line">7b0fa71 HEAD@{3}: commit (initial): add text file</span><br></pre></td></tr></tbody></table></figure>

<p>这样又可以找到<code>first update readme.txt</code>的commit id是<code>7b0fa71</code>，然后就又可以改回去了</p>
<h2 id="撤销操作"><a href="#撤销操作" class="headerlink" title="撤销操作"></a>撤销操作</h2><p><strong>撤销提交</strong></p>
<p>有时候我们提交完后发现还漏了几个文件，或者提交信息写错了。此时可以使用<code>--amend</code>选项尝试重新提交：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></tbody></table></figure>

<p><strong>撤销对文件的修改</strong></p>
<p>如果你修改了文件，但是发现改错了，想回到没修改之前，那么可以使用：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git checkout -- &lt;file&gt;</span><br></pre></td></tr></tbody></table></figure>

<p>注意空格</p>
<h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><p>现在的情景是，你已经在本地创建了一个Git仓库后，又想在GitHub创建一个Git仓库，并且让这两个仓库进行远程同步，这样，GitHub上的仓库既可以作为备份，又可以让其他人通过该仓库来协作，真是一举多得。</p>
<p>首先，登录<a href="https://github.com/login" target="_blank" rel="noopener">GitHub</a>,然后在右上角找到<code>New reposotpry</code>，创建一个新的仓库</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/github1.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>在Repository name填入<code>jar</code>，其他保持默认设置，点击“Create repository”按钮，就成功地创建了一个新的Git仓库：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/github2.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>目前github上的jar仓库是个空的，那么需要上传本地仓库的话需要吧本地仓库和它关联。根据提示，在命令行中输入命令：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git remote add origin https://github.com/ViJar-Wang/jar.git</span><br></pre></td></tr></tbody></table></figure>

<p>上面那段网址是github提供的，一眼就能看到，复制下来用就好了。然后通过命令提交。</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git push -u origin master</span><br></pre></td></tr></tbody></table></figure>

<p>如果你是第一次push或者clone，那么会得到一个警告：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">The authenticity of host 'github.com (xx.xx.xx.xx)' can't be established.</span><br><span class="line">RSA key fingerprint is xx.xx.xx.xx.xx.</span><br><span class="line">Are you sure you want to continue connecting (yes/no)?</span><br></pre></td></tr></tbody></table></figure>

<p>这里输入<strong>yes</strong>然后回车就好</p>
<p>Git会输出一个警告，告诉你已经把GitHub的Key添加到本机的一个信任列表里了：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Warning: Permanently added 'github.com' (RSA) to the list of known hosts.</span><br></pre></td></tr></tbody></table></figure>

<p>这个警告只会出现一次，后面的操作就不会有任何警告了。</p>
<p>如果你实在担心有人冒充GitHub服务器，输入<code>yes</code>前可以对照<a href="https://help.github.com/articles/what-are-github-s-ssh-key-fingerprints/" target="_blank" rel="noopener">GitHub的RSA Key的指纹信息</a>是否与SSH连接给出的一致。</p>
<p>回到正题。这个时候去远程仓库看一下：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/518e617c/github3.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>会发现github上已经有readme.txt这个文件了。</p>
<h3 id="从远程仓库克隆"><a href="#从远程仓库克隆" class="headerlink" title="从远程仓库克隆"></a>从远程仓库克隆</h3><p>当你需要从远处仓库下载的时候，你可以直接下载压缩包文件，也可以通过命令克隆到本地</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git clone https://github.com/ViJar-Wang/ViJar-Wang.github.io.git</span><br></pre></td></tr></tbody></table></figure>

<p>注意把Git仓库地址换成你自己的，克隆也可以指定目录，在末尾加个路径就好了</p>
<h2 id="分支操作"><a href="#分支操作" class="headerlink" title="分支操作"></a>分支操作</h2><h3 id="创建、合并以及删除分支"><a href="#创建、合并以及删除分支" class="headerlink" title="创建、合并以及删除分支"></a>创建、合并以及删除分支</h3><p><strong>创建</strong></p>
<p>首先，创建<code>test</code>分支然后切换到：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git checkout -b test</span><br></pre></td></tr></tbody></table></figure>

<p><code>git checkout</code>命令加上<code>-b</code>参数表示创建并切换，相当于以下两条命令：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git branch test</span><br><span class="line">git checkout test</span><br></pre></td></tr></tbody></table></figure>

<p>然后，用<code>git branch</code>命令查看当前分支：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* test</span><br><span class="line">  master</span><br></pre></td></tr></tbody></table></figure>

<p><code>git branch</code>命令会列出所有分支，当前分支前面会标一个<code>*</code>号。</p>
<p><strong>合并</strong></p>
<p>现在，我们把test分支的工作成果合并到<code>master</code>分支上：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git merge test</span><br></pre></td></tr></tbody></table></figure>

<p><strong>删除</strong></p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git branch -d dev</span><br></pre></td></tr></tbody></table></figure>

<h2 id="服务器上的Git"><a href="#服务器上的Git" class="headerlink" title="服务器上的Git"></a>服务器上的Git</h2><p>本文说明在局域网中用一台电脑作为服务器，在服务器中创建一个文件夹，并设置文共享。然后该文件夹作为公开的版本库，局域网内其他电脑都可以访问。</p>
<h3 id="windows配置公开版本库"><a href="#windows配置公开版本库" class="headerlink" title="windows配置公开版本库"></a>windows配置公开版本库</h3><p><strong>服务器端</strong></p>
<p>首先在d盘创建一个文件夹，名字为GitTest.</p>
<p>1.在GitTest目录下新建一个裸仓库名字为test,命令如下：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git init --bare test</span><br></pre></td></tr></tbody></table></figure>

<p>test目录结构如下：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://i.loli.net/2019/12/08/kpsXHReKd1ZEB3V.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>2.设置文件夹为共享文件夹：</p>
<p>右键 –&gt; 属性，如下：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://ftp.bmp.ovh/imgs/2019/12/5bdff26a039ed3d7.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>3.然后设置为所用用户，点击Everyone – &gt; 共享：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://ftp.bmp.ovh/imgs/2019/12/ab1cc3e6d99a7f22.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>4.这个时候该文件夹属性上有个网络路径：</p>
<img src="https://ftp.bmp.ovh/imgs/2019/12/0bb4e404892c1983.png">

<p><strong>客户端</strong></p>
<p>1.在客户端右键我的电脑–&gt;映射网络驱动器，如下图所示：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://ftp.bmp.ovh/imgs/2019/12/b34191994eece74a.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>这个时候会发现电脑下多了个Z盘。Z盘就是公开文件夹</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://i.loli.net/2019/12/08/814zXjZ3GSdqhLt.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>test就是公共版本库。</p>
<h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><p>在客户端，创建本地版本库，加入该版本库下有一个项目。名字叫pc,</p>
<p>先把项目push到版本库中，命令：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m "pc"</span><br><span class="line">git remote add origin z:\\test</span><br><span class="line">git push origin master</span><br></pre></td></tr></tbody></table></figure>

<p>这个时候在另一个客户端需要修改该工程，只需在另一个客户端配置好公开版本库，把项目克隆下来：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git clone z:\\test</span><br></pre></td></tr></tbody></table></figure>

<p>这样这个项目就在test目录下了。</p>
<p>最后记得在不使用时要把共享文件夹取消共享。</p>
<h2 id="远程仓库分支操作"><a href="#远程仓库分支操作" class="headerlink" title="远程仓库分支操作"></a>远程仓库分支操作</h2><p>还是在上面公开版本库的基础上，假如现在有三个开发者，三台客户端，第四台为服务器。服务器地址为：<code>z:\\test</code>.我们现在需要做的是每个人开发一条分支，最后再把所有分支合并起来。</p>
<p>首先我们在服务器的仓库上分配三条新分支：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git breanch b1</span><br><span class="line">git breanch b2</span><br><span class="line">git breanch b3</span><br></pre></td></tr></tbody></table></figure>

<p>在客户端1克隆下来仓库中的项目：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git clone z:\\test</span><br></pre></td></tr></tbody></table></figure>

<p>这个时候你会发现，客户端1克隆的下来的仓库里面只有一条分支：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">* master</span><br></pre></td></tr></tbody></table></figure>

<p>但是在服务器是有三条分支的：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git branch</span><br><span class="line">  b1</span><br><span class="line">  b2</span><br><span class="line">  b3</span><br><span class="line">* master</span><br></pre></td></tr></tbody></table></figure>

<p>如果你修改了文件内容，然后往b1分支push，</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git push origin b1</span><br><span class="line"><span class="function">error: <span class="title">src</span> <span class="title">refspec</span> <span class="title">b1</span> <span class="title">does</span> <span class="title">not</span> <span class="title">match</span> <span class="title">any</span></span></span><br></pre></td></tr></tbody></table></figure>

<p>它会提示你没有足够的权限去操作，那么此时你需要在本地创建一个分支和远程的那个<strong>分支绑定</strong>起来：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">git checkout -b b1 origin/b1</span><br></pre></td></tr></tbody></table></figure>

<p>这条语句的意思是创建一个b1分支并切换到，同时和origin中的b1分支绑定。<strong>注意</strong>：你创建的本地的分支名必须要和远程的分支名一致，否则远程会创建一条新的分支。</p>
<p>现在我们有了和远程绑定的分支，然后把修改的文件push到远程分支b1中去</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git add readme.txt</span><br><span class="line">$ git commit -m "提交到b1"</span><br><span class="line">[b1 <span class="number">341</span>f980] 提交到b1</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">2</span> insertions(+), <span class="number">1</span> deletion(-)</span><br><span class="line"> $ git push origin b1</span><br><span class="line">Enumerating objects: <span class="number">5</span>, done.</span><br><span class="line">Counting objects: <span class="number">100</span>% (<span class="number">5</span>/<span class="number">5</span>), done.</span><br><span class="line">Delta compression using up to <span class="number">4</span> threads</span><br><span class="line">Compressing objects: <span class="number">100</span>% (<span class="number">2</span>/<span class="number">2</span>), done.</span><br><span class="line">Writing objects: <span class="number">100</span>% (<span class="number">3</span>/<span class="number">3</span>), <span class="number">289</span> bytes | <span class="number">289</span>.<span class="number">00</span> KiB/s, done.</span><br><span class="line">Total <span class="number">3</span> (delta <span class="number">0</span>), reused <span class="number">0</span> (delta <span class="number">0</span>)</span><br><span class="line">To d:\testFile\repo</span><br><span class="line">   <span class="number">8169059</span>..<span class="number">341</span>f980  b1 -&gt; b1</span><br></pre></td></tr></tbody></table></figure>

<p>这样就成功提交到远程仓库中去了。</p>
<p>我们在服务器通过<code>git branch -v</code>查看一下分支最新提交记录：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git branch -vv</span><br><span class="line">  b1     <span class="number">341</span>f980 提交到b1</span><br><span class="line">  b2     <span class="number">8169059</span> test1</span><br><span class="line">  b3     <span class="number">8169059</span> test1</span><br><span class="line">* master <span class="number">9330421</span> 第一次修改</span><br></pre></td></tr></tbody></table></figure>

<p>提交成功。当你在本地不知道远程仓库有哪些分支时，可通过<code>git branch -a</code>来查看远程仓库的分支：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://ftp.bmp.ovh/imgs/2019/12/73ba313d7e215338.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p>图中红色部分就是远程仓库的分支。</p>
<p><strong>远程分支的合并</strong></p>
<p>现在远程仓库的上床已经搞完了，开始搞定分支的合并</p>
<p>现在我转到客户端2，首先把从库中的东西克隆下来，里面有一个文件<code>readme.txt</code></p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git clone d:/testFile/repo</span><br><span class="line">Cloning into 'repo'...</span><br><span class="line">done.</span><br><span class="line">$ <span class="built_in">cd</span> repo</span><br><span class="line">$ cat readme.txt</span><br><span class="line">Hello ,this is the first text.</span><br><span class="line">Hello ,this is the second text.</span><br></pre></td></tr></tbody></table></figure>

<p>创建一个分支与服务器绑定：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git checkout -b b2 origin/b2</span><br></pre></td></tr></tbody></table></figure>

<p>现在我们分别修改客户端1的readme.txt文件和客户端2的readme.txt。并且修改同一处地方，添加不同的内容：</p>
<p>客户端1：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Hello ,this is the first text.</span><br><span class="line">Hello ,this is the second text.</span><br><span class="line">Hello ,this is the third text.</span><br></pre></td></tr></tbody></table></figure>

<p>客户端2：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">Hello ,this is the first text.</span><br><span class="line">Hello ,this is the second text.</span><br><span class="line">thi is the b2 branch</span><br></pre></td></tr></tbody></table></figure>

<p>分别提交到b1、b2分支中去：</p>
<p>查看服务器分支修改情况：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git branch -v</span><br><span class="line">  b1     fa8a5ae b1提交</span><br><span class="line">  b2     c95dbf8 b2修改</span><br><span class="line">  b3     <span class="number">8169059</span> test1</span><br><span class="line">* master <span class="number">9330421</span> 第一次修改</span><br></pre></td></tr></tbody></table></figure>

<p>修改成功。但是合并有和问题，我们知道是不能在裸仓库操作内容的，所以我们需要先把最后完成的仓库再从远处库克隆下来：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git clone z:\\test</span><br><span class="line">Cloning into 'repo'...</span><br><span class="line">done.</span><br><span class="line">$ <span class="built_in">cd</span> repo</span><br><span class="line">$ cat readme.txt</span><br><span class="line">Hello ,this is the first text.</span><br><span class="line">Hello ,this is the second text.</span><br></pre></td></tr></tbody></table></figure>

<p>我们会发现这里的文件还是修改之前的，因为我们还没有合并分支。首先创建并绑定分支，再查看一下提交记录：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git checkout -b b1 origin/b1</span><br><span class="line">Switched to a new branch 'b1'</span><br><span class="line">Branch 'b1' <span class="built_in">set</span> up to track remote branch 'b1' from 'origin'.</span><br><span class="line">$ git log --pretty=<span class="built_in">format</span>:"%an : %s - %<span class="built_in">cd</span>"</span><br><span class="line"><span class="number">1419908068</span> : b1提交 - Mon Dec <span class="number">9</span> <span class="number">10</span>:<span class="number">29</span>:<span class="number">34</span> <span class="number">2019</span> +<span class="number">0800</span></span><br><span class="line"><span class="number">1419908068</span> : 提交到b1 - Mon Dec <span class="number">9</span> <span class="number">09</span>:<span class="number">44</span>:<span class="number">24</span> <span class="number">2019</span> +<span class="number">0800</span></span><br><span class="line"><span class="number">1419908068</span> : test1 - Mon Dec <span class="number">9</span> <span class="number">09</span>:<span class="number">29</span>:<span class="number">10</span> <span class="number">2019</span> +<span class="number">0800</span></span><br></pre></td></tr></tbody></table></figure>

<p>在这里可以看到已经和远程仓库绑定了，在同样的操作绑定b2。然后开始合并，首先把b1合并到master中去：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git merge b1</span><br><span class="line">Auto-merging readme.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> readme.txt</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br></pre></td></tr></tbody></table></figure>

<p>cat查看一下<code>readme.txt</code>中的内容：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">$ cat readme.txt</span><br><span class="line">Hello ,this is the first text.</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">Hello ,this is the second text.</span><br><span class="line">=======</span><br><span class="line">Hello ,this is the second text.</span><br><span class="line">Hello ,this is the third text.</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; b1</span><br></pre></td></tr></tbody></table></figure>

<p>出错了啊。<code>HEAD</code>是只上个版本的内容，<code>======</code>下面是合并的内容，如果想要保留合并的内容只需要执行以下命令：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git reset --hard HEAD^</span><br><span class="line">HEAD is now <span class="built_in">at</span> <span class="number">8169059</span> test1</span><br><span class="line">$ git merge b1</span><br><span class="line">Updating <span class="number">8169059</span>..fa8a5ae</span><br><span class="line">Fast-forward</span><br><span class="line"> readme.txt | <span class="number">4</span> +++-</span><br><span class="line"> <span class="number">1</span> file changed, <span class="number">3</span> insertions(+), <span class="number">1</span> deletion(-)</span><br></pre></td></tr></tbody></table></figure>

<p>在查看一下：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ cat readme.txt</span><br><span class="line">Hello ,this is the first text.</span><br><span class="line">Hello ,this is the second text.</span><br><span class="line">Hello ,this is the third text.</span><br></pre></td></tr></tbody></table></figure>

<p>这样b1就合并成功了。同理合并完b2也会出现同样的错误：</p>
<figure class="highlight cmd"><table><tbody><tr><td class="code"><pre><span class="line">$ git merge b2</span><br><span class="line">Auto-merging readme.txt</span><br><span class="line">CONFLICT (content): Merge conflict <span class="keyword">in</span> readme.txt</span><br><span class="line">Automatic merge failed; fix conflicts and then commit the result.</span><br><span class="line">$ cat readme.txt</span><br><span class="line">Hello ,this is the first text.</span><br><span class="line">Hello ,this is the second text.</span><br><span class="line">&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</span><br><span class="line">Hello ,this is the third text.</span><br><span class="line">=======</span><br><span class="line">thi is the b2 branch</span><br><span class="line">&gt;&gt;&gt;&gt;&gt;&gt;&gt; b2</span><br></pre></td></tr></tbody></table></figure>

<p>你想好保留哪个版本的只要回退一个版本再合并一次就好了。</p>
<h2 id="图形化界面"><a href="#图形化界面" class="headerlink" title="图形化界面"></a>图形化界面</h2><p> Git 的原生环境是终端。 在那里，你可以体验到最新的功能，也只有在那里，你才能尽情发挥 Git 的全部能 </p>
<p>力。 但是对于某些任务而言，纯文本并不是最佳的选择；有时候你确实需要一个可视化的展示方式，而且有些</p>
<p>用户更习惯那种能点击的界面。</p>
<p>git-gui是在安装git的同时也会装好的可视化工具。默认界面为英文，我这里参考这里修改成了中文。</p>
<p><a href="https://www.cnblogs.com/webSong/p/11009403.html" target="_blank" rel="noopener">https://www.cnblogs.com/webSong/p/11009403.html</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="https://ftp.bmp.ovh/imgs/2019/12/160907a99263230f.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="错误收集"><a href="#错误收集" class="headerlink" title="错误收集"></a>错误收集</h2><p><strong>1.报错<code>fatal: remote origin already exists.</code></strong></p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git remote rm origin</span><br></pre></td></tr></tbody></table></figure>

<p><strong>2.报错<code>The authenticity of host 'github.com ' can't be established</code></strong></p>
<p>这是由于你的git地址采用了ssh方式，切换为https方式即可，也可能是你的仓库地址不对，可以用命令先查看一下：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git remote -v</span><br></pre></td></tr></tbody></table></figure>

<p>如果跟你的github地址不一样，那就去你的github上复制一下仓库地址<br> 然后在终端中输入：</p>
<figure class="highlight cpp"><table><tbody><tr><td class="code"><pre><span class="line">git remote <span class="built_in">set</span>-url origin https:<span class="comment">//github.com/yourname/learngit.git (这个是你的复制的仓库地址)</span></span><br></pre></td></tr></tbody></table></figure>

<p>最后再push下就可以了！</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git push origin master</span><br></pre></td></tr></tbody></table></figure>

<p><strong>3.报错<code>Updates were rejected because the remote contains work that you do</code></strong></p>
<p>在push之前输入：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></tbody></table></figure>

<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>学习</category>
        <category>git</category>
      </categories>
      <tags>
        <tag>Windows</tag>
        <tag>学习</tag>
      </tags>
  </entry>
  <entry>
    <title>Windows激活，超简单的方法</title>
    <url>/blog/posts/72b51333/</url>
    <content><![CDATA[<center>Windows激活</center>

<a id="more"></a>

<p>话不多说，开始操作</p>
<h2 id="卸载电脑当前密匙"><a href="#卸载电脑当前密匙" class="headerlink" title="卸载电脑当前密匙"></a>卸载电脑当前密匙</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">slmgr.vbs /upk</span><br></pre></td></tr></tbody></table></figure>

<p>输入后稍等一下会弹出提示框，确认即可</p>
<h2 id="安装产品密码"><a href="#安装产品密码" class="headerlink" title="安装产品密码"></a>安装产品密码</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">slmgr /ipk  PVMJN-6DFY6-9CCP6-7BKTT-D3WVR</span><br></pre></td></tr></tbody></table></figure>

<p>其中PVMJN-6DFY6-9CCP6-7BKTT-D3WVR是产品密匙，你可以百度最新的产品密匙，注意要对应好版本</p>
<p>查看方法。右键此电脑 -&gt; 属性即可查看：</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/72b51333/win10.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="设置kms服务器地址"><a href="#设置kms服务器地址" class="headerlink" title="设置kms服务器地址"></a>设置kms服务器地址</h2><p>kms地址如果失效了可以百度一下，一大堆呢！</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">slmgr /skms zh.us.to</span><br></pre></td></tr></tbody></table></figure>

<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">slmgr /ato</span><br></pre></td></tr></tbody></table></figure>

<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/72b51333/win102.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>一些好用的实用工具和网址</title>
    <url>/blog/posts/b65f578a/</url>
    <content><![CDATA[<center>这里有一些好玩的东西</center>
<a id="more"></a>

<h1 id="PDF转Word"><a href="#PDF转Word" class="headerlink" title="PDF转Word"></a>PDF转Word</h1><h2 id="加加pdf"><a href="#加加pdf" class="headerlink" title="加加pdf"></a>加加pdf</h2><p>打开这个网站，<a href="https://link.zhihu.com/?target=https%3A//www.addpdf.cn/">https://www.addpdf.cn</a>，如下图，选择要转换的pdf文件或者直接拖过去，等待上传完成，下载，OK，搞定！</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/1.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="迅捷PDF转换器"><a href="#迅捷PDF转换器" class="headerlink" title="迅捷PDF转换器"></a>迅捷PDF转换器</h2><p>迅捷pdf转换成word转换器是一款功能强大、界面简洁、操作简单的PDF转Word软件，你只需把PDF文件拖拽到软件界面中，然后单击“转换”即可完成转换。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/ChMlWV0d4R2IcJAoAAGD8CSBOvkAALiWQHDJVwAAYQI474.jpg" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p><a href="https://pan.baidu.com/s/16X0lkF7p1Co-8IFynWNHTQ" target="_blank" rel="noopener">迅捷PDF转换器下载地址</a> 提取码: 9eev </p>
<h2 id="Smallpdf"><a href="#Smallpdf" class="headerlink" title="Smallpdf"></a>Smallpdf</h2><p>打开网站，<a href="https://smallpdf.com/cn/pdf-to-word" target="_blank" rel="noopener">https://smallpdf.com/cn/pdf-to-word</a> 同样的选择要转换的文件或者拖过去，上传，转换完成之后，下载就OK了！</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/20191201091559.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="文档下载"><a href="#文档下载" class="headerlink" title="文档下载"></a>文档下载</h1><h2 id="冰点文库下载器"><a href="#冰点文库下载器" class="headerlink" title="冰点文库下载器"></a>冰点文库下载器</h2><p>冰点文库是一款网络分享文档的下载工具。用户使用冰点文库无需积分就可以自由下载百度、mbalib、豆丁、畅享、max.book118文档。</p>
<p>冰点文库无需安装，直接解压缩，点击“Fish-1106.exe”即可。直接将要下载的豆丁文库或者<strong>百度文库</strong>的网页地址粘贴到冰点文库的地址栏中.点击“下载”就可以了。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/16a.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<p><a href="https://pan.baidu.com/s/1q9QxfvXlbXsz-9re7O46Bg" target="_blank" rel="noopener">冰点文库下载</a>  提取码: masv </p>
<h1 id="影视网站"><a href="#影视网站" class="headerlink" title="影视网站"></a>影视网站</h1><h2 id="人人影视"><a href="#人人影视" class="headerlink" title="人人影视"></a>人人影视</h2><p>人人影视起初是一个以分享、交流、学习为宗旨的外国影视节目非专业字幕组。<br>地址：<a href="http://www.yyets.com" target="_blank" rel="noopener">http://www.yyets.com</a><br>海量海外影视等你来看</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/renren.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="两个BT"><a href="#两个BT" class="headerlink" title="两个BT"></a>两个BT</h2><p>两个BT网站排版非常美观，可在线播放，可下载！<br>分有最新电影、热门下载、本月热门、电视剧等，再分有科幻、喜剧、爱情、冒险、动作、动画、奇幻、悬疑、惊悚、武侠、犯罪、高分电影等类型。</p>
<p>地址：<a href="http://www.bttwo.com" target="_blank" rel="noopener">http://www.bttwo.com</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/btwo.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="6v电影网"><a href="#6v电影网" class="headerlink" title="6v电影网"></a>6v电影网</h2><p>老牌子了,强大毋庸置疑。</p>
<p>各种细致的影视分类，甚至连有3D效果的影片也可以下载，有私人影院的小伙伴必备哟!</p>
<p>6V电影网还有各种福利片哟！我没看过，我没看过[手动狗头]</p>
<p>地址：<a href="http://www.6vhao.tv/" target="_blank" rel="noopener">http://www.6vhao.tv/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/6vhao.webp" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="IACG"><a href="#IACG" class="headerlink" title="IACG"></a>IACG</h2><p>凭名字可知道这是一个ACG资源分享网站，不止有各种B站有的没的番剧，还有AGC图片漫画等。重要的是没有广告。</p>
<p>地址：<a href="https://iacg.rip/anime/week-anime/" target="_blank" rel="noopener">https://iacg.rip/anime/week-anime/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/iacg.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="免费PPT模板网站"><a href="#免费PPT模板网站" class="headerlink" title="免费PPT模板网站"></a>免费PPT模板网站</h1><h2 id="第1PPT"><a href="#第1PPT" class="headerlink" title="第1PPT"></a>第1PPT</h2><p>各种免费模板随便你用，但是要小心有些链接是广告</p>
<p>地址：<a href="http://www.1ppt.com/" target="_blank" rel="noopener">http://www.1ppt.com/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/di1ppt.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="摄图网"><a href="#摄图网" class="headerlink" title="摄图网"></a>摄图网</h2><p>这个网站每天可以免费下一个模板，要登录的。如果想下多个的话，发送改模板的链接到我的邮箱，我看到会及时回复的。</p>
<p>地址：<a href="http://699pic.com/" target="_blank" rel="noopener">http://699pic.com/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/shetuwang.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="免费HTML模板网站"><a href="#免费HTML模板网站" class="headerlink" title="免费HTML模板网站"></a>免费HTML模板网站</h1><h2 id="模板之家"><a href="#模板之家" class="headerlink" title="模板之家"></a>模板之家</h2><p>关键字：免费。是的，个中好看与不好看的模板，都有。小心别点到广告啊。</p>
<p>地址：<a href="http://www.cssmoban.com/" target="_blank" rel="noopener">http://www.cssmoban.com/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/mubanzhijia.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="源码之家"><a href="#源码之家" class="headerlink" title="源码之家"></a>源码之家</h2><p>关键字：免费。还是个免费模板的网站，但是要小心广告</p>
<p>地址：<a href="https://www.mycodes.net/153/" target="_blank" rel="noopener">https://www.mycodes.net/153/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/yuanmazhijia.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="站长素材"><a href="#站长素材" class="headerlink" title="站长素材"></a>站长素材</h2><p>这个网站就很强大了，不止有网页模板还有其他一大堆模板，不过也要注意广告。</p>
<p>地址：<a href="https://www.mycodes.net/153/" target="_blank" rel="noopener">https://www.mycodes.net/153/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/zhanzhangzhijia.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="电子书下载"><a href="#电子书下载" class="headerlink" title="电子书下载"></a>电子书下载</h1><h2 id="智齐搜书"><a href="#智齐搜书" class="headerlink" title="智齐搜书"></a>智齐搜书</h2><p>这个网站聚合了全网的电子书资源的搜索引擎，无论是什么小说，只要网上有的，这里都能搜索到。</p>
<p>地址：<a href="https://www.zqbook.top/" target="_blank" rel="noopener">https://www.zqbook.top/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/zhiqi.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="投屏软件"><a href="#投屏软件" class="headerlink" title="投屏软件"></a>投屏软件</h1><h2 id="Apowerspft"><a href="#Apowerspft" class="headerlink" title="Apowerspft"></a>Apowerspft</h2><p>该软件可以吧电脑屏幕投影到手机上，并且在手机上可以控制鼠标，当你不方便拿着电脑走时，投影到手机上拿着手机当电脑用是很爽的。并且它强大的功能是还可以吧手机投影到电脑上，并且可以在电脑上完手机游戏，再也不要去下载那些手机模拟器了。</p>
<p>下载地址：<a href="https://www.apowersoft.com/phone-mirror" target="_blank" rel="noopener">https://www.apowersoft.com/phone-mirror</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/apowersoft.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="设计"><a href="#设计" class="headerlink" title="设计"></a>设计</h1><h2 id="颜色搭配网站Colorspace"><a href="#颜色搭配网站Colorspace" class="headerlink" title="颜色搭配网站Colorspace"></a>颜色搭配网站Colorspace</h2><p>colorspace是一个非常好的颜色搭配网站，只要你在首页选择一个颜色，然后点击生成。就会生成搭配的颜色。根据你的喜好就可以去选择.</p>
<p>地址：<a href="https://mycolor.space/" target="_blank" rel="noopener">https://mycolor.space/</a></p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/colorspace.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h2 id="颜色搭配网站中国色"><a href="#颜色搭配网站中国色" class="headerlink" title="颜色搭配网站中国色"></a>颜色搭配网站中国色</h2><p>对于喜欢古风的同学来说，这个网站以一个非常美的方式把中国古代的传统颜色直观的呈现出来。</p>
<p>地址：<a href="http://zhongguose.com/" target="_blank" rel="noopener">http://zhongguose.com/</a></p>
<p>拖动箭头所指的地方来调整颜色。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/b65f578a/zhongguose.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h1 id="图床"><a href="#图床" class="headerlink" title="图床"></a>图床</h1><p>简单说图床就是一个在网络上存储图片的地方，目的是为了节省本地服务器空间，加快图片打开速度，主要是个人博客和网站使用</p>
<h2 id="SM-MS"><a href="#SM-MS" class="headerlink" title="SM.MS"></a>SM.MS</h2><p>地址：<a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a></p>
<p>特点：永久存储免注册，图片链接支持https，可以删除上传的图片，提供多种图片链接格式</p>
<p>图片上传限制：每个图片最大5M，每次最多上传10张</p>
<h2 id="ImgURL"><a href="#ImgURL" class="headerlink" title="ImgURL"></a>ImgURL</h2><p>地址：<a href="https://imgurl.org/" target="_blank" rel="noopener">https://imgurl.org/</a></p>
<p>特点：免费永久储存，免注册，可以将图片直接拖拽过去生成连接</p>
<p>限制：游客每天只能上传10张，单张最大5M，最好不要上传二维码</p>
<h2 id="小贱贱图床"><a href="#小贱贱图床" class="headerlink" title="小贱贱图床"></a>小贱贱图床</h2><p>官网地址：<a href="https://link.zhihu.com/?target=http%3A//pic.xiaojianjian.net/">http://pic.xiaojianjian.net</a></p>
<p>每日可以上传图片20张，上传后可以获取一个简单的外链，图床用的是微博空间，速度很快，但是图片清晰度会变低。</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">解决方法：</span><br><span class="line">用 https://ww2.sinaimg.cn/large/ 来替代 http://wx2.sinaimg.cn/mw690/</span><br><span class="line">例如：将 http://wx2.sinaimg.cn/mw690/0060lm7Tly1g0xk85v5anj311y0lcag2.jpg</span><br><span class="line">修改为 https://ww2.sinaimg.cn/large/0060lm7Tly1g0xk85v5anj311y0lcag2.jpg</span><br></pre></td></tr></tbody></table></figure>

<h2 id="GitHub图床"><a href="#GitHub图床" class="headerlink" title="GitHub图床"></a>GitHub图床</h2><p>GitHub图床每次上传图片需要命令来上传，所以我推荐使用PicGo软件来搭配使用</p>
<p>GitHub官网：<a href="https://github.com" target="_blank" rel="noopener">https://github.com</a></p>
<p>PicGo下载地址：<a href="https://github.com/Molunerfinn/PicGo/releases" target="_blank" rel="noopener">https://github.com/Molunerfinn/PicGo/releases</a></p>
<p>教程：<a href="https://juejin.im/entry/5c4ec5aaf265da614420689f" target="_blank" rel="noopener">https://juejin.im/entry/5c4ec5aaf265da614420689f</a></p>
<center style="color:red; font-size:30px">持续更新中</center><script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>工具</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title>office2013-2019</title>
    <url>/blog/posts/df2849ec/</url>
    <content><![CDATA[<center>这是一个好工具</center>
<a id="more"></a>    

<h2 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h2><p>首先下载好“office 2013-2019下载汉化版”，如果已经下载好的请直接去砍<strong>激活</strong>下载链接如下<a href="https://pan.baidu.com/s/1Jcxj0vZ-L8qoCdx_Bmq32Q" target="_blank" rel="noopener">office2013-2019下载汉化版</a>提取码：rhd9。解压后打开文件夹点击OInstall.exe，如下:</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/df2849ec/20181218150059364.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>版本有2013、2016、2019，右边根据系统选择x86,x64.现在电脑一般都是<strong>x64</strong>的了。然后选择专业版（Pro）或者普通版（Standard），然后则选择你所需要的产品，一般是<strong>Word、Excel、PowerPoint</strong>，语言选择中文<strong>zh-CN</strong>，zh-TW是繁体中文。根据需要选择。在点击左边的<strong>Install Office</strong>出现下面这张图:</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/df2849ec/20181218150639104.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>这里直接点击ok就好。</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/df2849ec/20181218150719213.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>等待下载完毕就好了。</p>
<h2 id="激活"><a href="#激活" class="headerlink" title="激活"></a>激活</h2><h4 id="软件激活"><a href="#软件激活" class="headerlink" title="软件激活"></a>软件激活</h4><p>如果打开发现没有激活，不着急，点击<strong>实用程序</strong>，然后点击激活Office</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/df2849ec/20181218150854897.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>
<p>这是激活后的office</p>
<figure class="image-bubble">
                <div class="img-lightbox">
                    <div class="overlay"></div>
                    <img src="/blog/posts/df2849ec/20181218151323214.png" alt="" title="">
                </div>
                <div class="image-caption"></div>
            </figure>

<h4 id="批处理激活"><a href="#批处理激活" class="headerlink" title="批处理激活"></a>批处理激活</h4><p>2019.11更新：针对不能使用的可以用批处理形式，先安装证书再运行** 文件链接如下：</p>
<p>链接: <a href="https://pan.baidu.com/s/1JFlzS7mN-P1fCRyDnqpn7w" target="_blank" rel="noopener">https://pan.baidu.com/s/1JFlzS7mN-P1fCRyDnqpn7w</a> 提取码: p56u </p>
<h4 id="命令行激活"><a href="#命令行激活" class="headerlink" title="命令行激活"></a>命令行激活</h4><p>首先找到office的安装目录，因为我下的是64位，所以路径为<code>C:\Program Files\Microsoft Office\Office16</code></p>
<p><strong>注意在激活之前请关闭所有office产品</strong></p>
<p>以管理员方式打开cmd，输入：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">cd C:\Program Files\Microsoft Office\Office16</span><br></pre></td></tr></tbody></table></figure>

<p>然后输入以下命令注册kms服务器地址：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">cscript ospp.vbs /sethst:kms.03k.org</span><br></pre></td></tr></tbody></table></figure>

<p>kms.03k.org为服务器地址，如果破解失败了请去百度搜索<code>kms服务器</code>使用最新可用的服务器地址</p>
<p>再输入：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">cscript OSPP.VBS /sethst:kms.03k.org</span><br></pre></td></tr></tbody></table></figure>

<p>最后手动激活一下：</p>
<figure class="highlight plain"><table><tbody><tr><td class="code"><pre><span class="line">cscript ospp.vbs /act</span><br></pre></td></tr></tbody></table></figure>

<p>等待命令运行完就可以打开office查看是否激活。</p>
<script>
        document.querySelectorAll('.github-emoji')
          .forEach(el => {
            if (!el.dataset.src) { return; }
            const img = document.createElement('img');
            img.style = 'display:none !important;';
            img.src = el.dataset.src;
            img.addEventListener('error', () => {
              img.remove();
              el.style.color = 'inherit';
              el.style.backgroundImage = 'none';
              el.style.background = 'none';
            });
            img.addEventListener('load', () => {
              img.remove();
            });
            document.body.appendChild(img);
          });
      </script>]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>工具</tag>
        <tag>Windows</tag>
      </tags>
  </entry>
</search>
